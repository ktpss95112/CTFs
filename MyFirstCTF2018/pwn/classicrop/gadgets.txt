Gadgets information
============================================================
0x000000000043d68f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d6f9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004af428 : adc al, 0 ; add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x000000000048d1fd : adc al, 0 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000004accd1 : adc al, 0 ; add byte ptr [rsp - 0xa], ch ; jmp rdx
0x000000000042dad5 : adc al, 0x13 ; jmp rdx
0x0000000000425d95 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000048cf1a : adc al, 0x24 ; mov edi, 1 ; call rax
0x000000000040e8b1 : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000444a60 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000471e88 : adc al, 0x90 ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000043eb20 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d24e : adc al, 0x91 ; sub eax, edx ; ret
0x000000000042dad1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d260 : adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x00000000004b5030 : adc al, 0x98 ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x0000000000424997 : adc al, 0xa ; jmp r10
0x0000000000425f03 : adc al, 0xa ; sub eax, edx ; ret
0x000000000046ca08 : adc al, 0xa8 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000446fdf : adc al, 0xe ; cmp rdi, rdx ; jb 0x446ff2 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000042a37a : adc al, 0xe ; sub eax, edx ; ret
0x000000000042c04a : adc al, 0xe ; sub eax, edx ; vzeroupper ; ret
0x0000000000412a0b : adc al, 0xf6 ; ret 0x7420
0x000000000048d29d : adc al, 0xf7 ; ret
0x0000000000494539 : adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x00000000004945f5 : adc al, 0xfa ; call rdx
0x0000000000494575 : adc al, 0xfa ; jmp rsi
0x00000000004b2fe9 : adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004245b6 : adc al, 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004944a0 : adc al, ah ; stc ; jmp rax
0x0000000000495110 : adc al, bh ; cli ; jmp qword ptr [rax]
0x000000000048cb6d : adc al, bh ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000043d837 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d8a1 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494814 : adc al, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x12fffa06]
0x000000000040102a : adc al, byte ptr [rdx] ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004b0cf0 : adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004248fa : adc bh, byte ptr [rbx + 0xf480001] ; ret 0x66c3
0x0000000000493f49 : adc bh, cl ; call rax
0x0000000000494605 : adc bh, dl ; call qword ptr [rdx]
0x0000000000494549 : adc bh, dl ; call rax
0x0000000000494545 : adc bh, dl ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000494585 : adc bh, dl ; jmp qword ptr [rsi]
0x0000000000494745 : adc bh, dl ; jmp rax
0x0000000000440f25 : adc bl, ch ; call 0xffffffffc414987a
0x0000000000440e45 : adc bl, ch ; call 0xffffffffc43c979a
0x0000000000482e42 : adc bl, ch ; jno 0x482e98 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004950b8 : adc bl, dh ; cli ; jmp qword ptr [rax]
0x0000000000444396 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444407 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000444367 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444395 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000047f2ba : adc byte ptr [r11 + 0x5d], bl ; pop r12 ; ret
0x0000000000419295 : adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004838ae : adc byte ptr [r15], cl ; sahf ; ret 0x3948
0x000000000045c049 : adc byte ptr [r15], cl ; sahf ; ret 0x894c
0x00000000004840c3 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3949
0x000000000045b265 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000045ba46 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000481d9f : adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000411692 : adc byte ptr [r8 + 1], r9b ; ret
0x000000000041887f : adc byte ptr [r8 - 0x77], r9b ; ret 0xf8b
0x000000000047c3bf : adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004116bd : adc byte ptr [r9 + 0x2b], r9b ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004840bd : adc byte ptr [rax + 0x39], cl ; ret
0x000000000041eb03 : adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae3c : adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1b8 : adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x0000000000423af6 : adc byte ptr [rax + 0x39], cl ; ret 0xf475
0x0000000000481da0 : adc byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x000000000041310e : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000411693 : adc byte ptr [rax + 1], cl ; ret
0x0000000000410a97 : adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004af42c : adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x0000000000400e5e : adc byte ptr [rax - 0x39], cl ; ret 0
0x0000000000475af5 : adc byte ptr [rax - 0x73], cl ; or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000488d9f : adc byte ptr [rax - 0x75], cl ; cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x000000000041ca9d : adc byte ptr [rax - 0x77], cl ; and al, 8 ; call rcx
0x000000000044c0e5 : adc byte ptr [rax - 0x77], cl ; and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000458968 : adc byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000470b17 : adc byte ptr [rax - 0x77], cl ; jo 0x470b35 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470ad7 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000470adb : adc byte ptr [rax - 0x77], cl ; ret
0x00000000004222af : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000041de71 : adc byte ptr [rax - 0x77], cl ; ret 0x8d4c
0x0000000000418880 : adc byte ptr [rax - 0x77], cl ; ret 0xf8b
0x000000000041705f : adc byte ptr [rax - 0x78], al ; jl 0x417081 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004114e3 : adc byte ptr [rax - 0x7b], cl ; push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x0000000000441107 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x0000000000441143 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401030 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000419933 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000455648 : adc byte ptr [rax - 0x7d], cl ; ret 0x4902
0x00000000004a4e08 : adc byte ptr [rax - 3], bh ; jmp qword ptr [rbx]
0x0000000000494558 : adc byte ptr [rax], 0xfa ; call qword ptr [rax]
0x000000000043f0ec : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043da41 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004482bc : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b082c : adc byte ptr [rax], dl ; add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x000000000048e1c8 : adc byte ptr [rbp + 0x13], dh ; xor eax, eax ; ret
0x000000000048b028 : adc byte ptr [rbp + 0x1d], dh ; xor eax, eax ; ret
0x0000000000494278 : adc byte ptr [rbp - 0x490f0007], dh ; stc ; call rax
0x0000000000413d44 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000410903 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000419296 : adc byte ptr [rbx + 0x5d], bl ; ret
0x00000000004b3a8f : adc byte ptr [rbx + 0x80e5802], al ; ret
0x000000000044c0f3 : adc byte ptr [rbx - 0x16], dh ; ret
0x000000000044c0f2 : adc byte ptr [rbx - 0x16], sil ; ret
0x0000000000418462 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047100e : adc byte ptr [rbx - 0x3b7cb7fa], cl ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004116be : adc byte ptr [rcx + 0x2b], cl ; or byte ptr [r8 + 0x29], r9b ; ret
0x00000000004b492c : adc byte ptr [rcx + 0x5a00000], dl ; std ; jmp rdx
0x0000000000472113 : adc byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004941d4 : adc byte ptr [rcx + rdi*8 - 0x64a0f01], dh ; call rax
0x0000000000494260 : adc byte ptr [rcx - 0x451f0007], bh ; stc ; jmp rax
0x000000000044b062 : adc byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000048ac2f : adc byte ptr [rcx - 0x77], cl ; ret
0x00000000004191e7 : adc byte ptr [rcx - 0x7d], al ; ret
0x000000000045bfe1 : adc byte ptr [rcx - 0x7d], cl ; ret
0x000000000042a40d : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x00000000004826fa : adc byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000448c19 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000418465 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000412007 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004941ac : adc byte ptr [rdi - 0x4da70007], 0xf9 ; jmp qword ptr [rax]
0x00000000004942f0 : adc byte ptr [rdi - 0x643f0007], 0xf9 ; call qword ptr [rax]
0x00000000004838af : adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000045c04a : adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000444c73 : adc byte ptr [rdi], cl ; test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000042a7f1 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a8e1 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a701 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042b149 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000042aca1 : adc byte ptr [rdi], cl ; xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a431 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000042ae81 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a611 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000042b061 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042af71 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a8b3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9a3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7c3 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a521 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x000000000042a6d3 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4f3 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5e3 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a403 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000045b266 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000045ba47 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000449fe9 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x0000000000483f71 : adc byte ptr [rdi], r9b ; sahf ; ret 0x3948
0x00000000004832ad : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000004ad13b : adc byte ptr [rdx + 0xe], al ; or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x000000000042dfc9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000494f84 : adc byte ptr [rdx - 6], dl ; jmp qword ptr [rax]
0x00000000004afa2c : adc byte ptr [rdx], al ; add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x000000000042cf0b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cdba : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x000000000042c3b5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424ae5 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004942dc : adc byte ptr [rsi - 0x47ff0007], dh ; stc ; call rax
0x00000000004244da : adc ch, byte ptr [rbp] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000045d52f : adc cl, byte ptr [rax - 0x75] ; adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x000000000044c6aa : adc cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000440e35 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000049480c : adc cl, byte ptr [rax] ; cli ; call qword ptr [rdx + 0x12fffa07]
0x000000000045d532 : adc cl, byte ptr [rbx + rcx*4 + 0x6c] ; ret 0x4c40
0x0000000000485f7a : adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000045c305 : adc cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494804 : adc cl, byte ptr [rcx] ; cli ; call qword ptr [rdx + 0x12fffa08]
0x0000000000494094 : adc cl, byte ptr [rdi - 0x701d0007] ; stc ; jmp rdx
0x00000000004947fc : adc cl, byte ptr [rdx] ; cli ; call qword ptr [rdx + 0x12fffa09]
0x00000000004ab749 : adc dh, bh ; call rax
0x00000000004ab745 : adc dh, bh ; inc ebp ; adc dh, bh ; call rax
0x000000000041c4ee : adc dh, dh ; ret 0xf0f
0x0000000000494548 : adc dil, dl ; call rax
0x0000000000494559 : adc dl, bh ; call qword ptr [rax]
0x0000000000494755 : adc dl, bh ; jmp qword ptr [rax]
0x0000000000494619 : adc dl, bh ; jmp rdx
0x000000000049507c : adc dl, dh ; cli ; jmp qword ptr [rax]
0x000000000047008b : adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000045ac0d : adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x00000000004116af : adc dword ptr [rax - 0x3f], ecx ; cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x000000000040514f : adc dword ptr [rax - 0x7d], ecx ; ret
0x00000000004716a4 : adc dword ptr [rax - 0x7d], ecx ; ret 0x4110
0x000000000043f0eb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x000000000043d9d7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043efef : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045b275 : adc dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x0000000000447238 : adc dword ptr [rbx], eax ; ret
0x00000000004001c8 : adc dword ptr [rbx], ebx ; stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x00000000004471b1 : adc dword ptr [rbx], esp ; ret
0x00000000004001c7 : adc dword ptr [rbx], r11d ; stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x0000000000438937 : adc dword ptr [rcx + 7], edi ; ret
0x00000000004471ac : adc dword ptr [rcx - 0x30], eax ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004898e6 : adc dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004385d2 : adc dword ptr [rcx - 1], ebx ; ret
0x0000000000438596 : adc dword ptr [rcx - 1], edi ; ret
0x000000000046f48e : adc dword ptr [rcx], eax ; clc ; mov rdx, r8 ; jmp 0x46f464
0x0000000000447233 : adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f93 : adc dword ptr [rdi + rdx - 0x10], ecx ; ret
0x0000000000447115 : adc dword ptr [rdi + rdx - 0x10], edx ; movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x000000000044711a : adc dword ptr [rdi + rdx - 0x20], ebx ; ret
0x00000000004470f2 : adc dword ptr [rdi + rdx - 0x30], esi ; movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x00000000004470f7 : adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x0000000000438a99 : adc dword ptr [rdi - 8], edi ; ret
0x0000000000446f90 : adc dword ptr [rdi], eax ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446d8c : adc dword ptr [rdi], edx ; vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x0000000000446ebf : adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f5c : adc dword ptr [rsi + 7], edx ; ret
0x0000000000446d5e : adc dword ptr [rsi - 1], edx ; ret
0x000000000048aea6 : adc dword ptr [rsp - 0x28], eax ; ret
0x000000000043d9d6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004187fa : adc eax, 0x1002a35 ; ret
0x00000000004245b4 : adc eax, 0x11407 ; cmovne rax, rdx ; ret
0x0000000000423900 : adc eax, 0x1d62b ; cmovne rax, rdx ; ret
0x0000000000424790 : adc eax, 0x1df4b ; cmovne rax, rdx ; ret
0x0000000000424525 : adc eax, 0x209c6 ; cmovne rax, rdx ; ret
0x0000000000423899 : adc eax, 0x21332 ; cmovne rax, rdx ; ret
0x000000000045abe9 : adc eax, 0x25feca ; je 0x45ac00 ; ret
0x000000000044d4c7 : adc eax, 0x26b5ec ; pop rbx ; ret
0x00000000004238d0 : adc eax, 0x272b ; cmovne rax, rdx ; ret
0x0000000000419184 : adc eax, 0x2a06a7 ; ret
0x000000000047442b : adc eax, 0x30 ; cmovne rax, rdx ; ret
0x000000000047bc92 : adc eax, 0x4000003 ; ret
0x000000000047bbe2 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004239da : adc eax, 0x50d1 ; cmovne rax, rdx ; ret
0x000000000043d561 : adc eax, 0x83480000 ; ret 0xe910
0x00000000004696e5 : adc eax, 0x83fffffd ; ret
0x0000000000478d91 : adc eax, 0x89000003 ; ret 0xe8c0
0x00000000004748fa : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000424854 : adc eax, 0xe697 ; cmovne rax, rdx ; ret
0x0000000000424714 : adc eax, 0xe7b7 ; cmovne rax, rdx ; ret
0x0000000000447de4 : adc eax, 0xf880272 ; ret
0x0000000000473d65 : adc eax, 0xfffd4226 ; cmove rax, rdx ; ret
0x000000000043ee4e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042389b : adc eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000484429 : adc eax, eax ; ret
0x0000000000484566 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000004a7985 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000412d37 : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000475afc : adc ebx, esi ; ret
0x000000000041727a : adc ecx, dword ptr [rax - 0x7b] ; push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x000000000040ea71 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000457934 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000468ed6 : adc ecx, dword ptr [rcx + rax - 0x1e] ; call qword ptr [r10 + rax*8]
0x0000000000493f45 : adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x000000000047f15e : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f1fb : adc edi, dword ptr [rcx] ; ret 0xc74
0x0000000000493f4d : adc edi, ecx ; call qword ptr [rax]
0x0000000000494581 : adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x00000000004946bd : adc edi, edx ; call rsp
0x00000000004946b9 : adc edi, edx ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000049453d : adc edi, edx ; jmp qword ptr [rax]
0x0000000000494751 : adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x0000000000494591 : adc edx, edi ; call rsi
0x000000000049458d : adc edx, edi ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000494590 : adc edx, r15d ; call rsi
0x00000000004a8e9e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000416643 : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000048e03c : adc esi, dword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412a09 : adc esi, dword ptr [rsp + rdx - 0xa] ; ret 0x7420
0x00000000004ab75d : adc esi, edi ; call qword ptr [rcx + rdx]
0x00000000004ab769 : adc esi, edi ; call qword ptr [rcx]
0x00000000004ab761 : adc esi, edi ; jmp qword ptr [rdi]
0x00000000004ab399 : adc esi, edi ; jmp rsp
0x00000000004103a0 : adc esi, esi ; ret 0x7520
0x0000000000438936 : adc qword ptr [rcx + 7], rdi ; ret
0x00000000004385d1 : adc qword ptr [rcx - 1], rbx ; ret
0x0000000000438595 : adc qword ptr [rcx - 1], rdi ; ret
0x0000000000438a98 : adc qword ptr [rdi - 8], rdi ; ret
0x0000000000446ebe : adc qword ptr [rsi + 3], rdx ; ret
0x0000000000446f5b : adc qword ptr [rsi + 7], rdx ; ret
0x0000000000446d5d : adc qword ptr [rsi - 1], rdx ; ret
0x00000000004946bc : adc r15d, edx ; call rsp
0x0000000000484565 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000044820e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000004482eb : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000448259 : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b3f83 : add ah, bh ; ret 0xfffc
0x00000000004af5f7 : add ah, bl ; cmp eax, 0x96540000 ; clc ; jmp qword ptr [rsi]
0x00000000004943b4 : add ah, bl ; stc ; jmp rax
0x0000000000446eba : add ah, byte ptr [rdx - 0xf] ; jl 0x446f0f ; adc dword ptr [rsi + 3], edx ; ret
0x00000000004b299a : add ah, byte ptr [rsi + rcx + 8] ; ret
0x00000000004b1ae3 : add ah, ch ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004ae1b3 : add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x0000000000400a59 : add ah, dh ; nop dword ptr [rax + rax] ; ret
0x00000000004b01ef : add ah, dl ; add byte ptr [r8], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004af9ef : add ah, dl ; add byte ptr [r8], al ; sub al, 0x83 ; stc ; jmp rbx
0x0000000000453273 : add al, 0 ; add bh, dh ; ret 0
0x0000000000453267 : add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000456f6f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000411230 : add al, 0 ; add byte ptr [rax + 1], cl ; ret
0x00000000004abcc5 : add al, 0 ; add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x000000000042ad67 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046f3a6 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x000000000043fd0f : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ad95 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048e160 : add al, 0 ; add byte ptr [rax], al ; jne 0x48e187 ; ret
0x0000000000474983 : add al, 0 ; add byte ptr [rax], al ; ret
0x00000000004726a0 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040a011 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac14 : add al, 0 ; add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000409ed0 : add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x0000000000424505 : add al, 0 ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000045588b : add al, 0 ; mov edx, 0x180 ; call 0x401af9
0x0000000000455848 : add al, 0 ; mov edx, 0x19f ; call 0x401af9
0x0000000000455867 : add al, 0 ; mov edx, 0x1be ; call 0x401af9
0x00000000004558b2 : add al, 0 ; mov edx, 0x22f ; call 0x401af9
0x0000000000455829 : add al, 0 ; mov edx, 0x309 ; call 0x401af9
0x0000000000449331 : add al, 0 ; movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x00000000004481b5 : add al, 0 ; movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000475afb : add al, 0x11 ; ret
0x00000000004482a4 : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000425d91 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000425d2a : add al, 0x17 ; sub eax, ecx ; ret
0x0000000000486d70 : add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048ada7 : add al, 0x24 ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aaab : add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000489ca4 : add al, 0x24 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000045ac4a : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048437b : add al, 0x25 ; sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4843c7 ; leave ; ret
0x000000000040e977 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x00000000004192fa : add al, 0x2a ; add bl, dh ; ret
0x0000000000494de4 : add al, 0x2b ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004734ce : add al, 0x31 ; ret
0x00000000004733ca : add al, 0x37 ; ret
0x0000000000417aff : add al, 0x3a ; ret
0x000000000047fa36 : add al, 0x48 ; cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f9ea ; xor eax, eax ; ret
0x00000000004448cb : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000443dd9 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443deb : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x000000000048d2b0 : add al, 0x48 ; mov dword ptr [rax], edx ; ret
0x00000000004354da : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000442619 : add al, 0x48 ; mov eax, edi ; ret
0x00000000004737a4 : add al, 0x48 ; xor eax, eax ; ret
0x000000000047e7c6 : add al, 0x4c ; cmp ecx, eax ; jne 0x47e774 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000474068 : add al, 0x4c ; lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000004565aa : add al, 0x4d ; cmp ebp, ebx ; jb 0x456620 ; mov rdx, rax ; jmp 0x456577
0x0000000000443de7 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442627 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000457932 : add al, 0x72 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x000000000046eb88 : add al, 0x81 ; add rax, rcx ; jmp rax
0x000000000043d24b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb23 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000401f47 : add al, 0x82 ; add rax, rdx ; jmp rax
0x00000000004487e8 : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d8 ; ret
0x000000000043ae57 : add al, 0x82 ; sub eax, ecx ; ret
0x000000000044d599 : add al, 0x83 ; add rax, rbx ; jmp rax
0x000000000048c14a : add al, 0x84 ; add rax, r12 ; jmp rax
0x0000000000466ca9 : add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000474459 : add al, 0x85 ; sal byte ptr [rbp - 0xe], cl ; ret
0x000000000048ca4b : add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ea1c : add al, 0x86 ; add rax, rsi ; jmp rax
0x000000000048b0f9 : add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000046f1b8 : add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000443dd6 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x0000000000442616 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x000000000048aed3 : add al, 0x88 ; add rax, r8 ; jmp rax
0x00000000004487eb : add al, 0x8a ; je 0x4487d5 ; ret
0x0000000000448273 : add al, 0x96 ; add rax, rsi ; jmp rax
0x000000000048c683 : add al, 0x99 ; add rax, r9 ; jmp rax
0x0000000000449335 : add al, 0x9a ; add rax, rdx ; jmp rax
0x000000000047c1df : add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb07 : add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004481b9 : add al, 0xbe ; add rax, rsi ; jmp rax
0x000000000046bd80 : add al, 0xc6 ; jmp rax
0x0000000000460f1a : add al, 0xc6 ; mov esi, 1 ; jmp rax
0x000000000046157a : add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460ed0 : add al, 0xc7 ; jmp rax
0x000000000046bdbb : add al, 0xc8 ; mov ecx, 1 ; jmp rax
0x00000000004844bd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x484519
0x00000000004882bd : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x488319
0x0000000000459221 : add al, 0xe8 ; test rax, rax ; je 0x459231 ; call rax
0x0000000000484d68 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042a376 : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x0000000000446ccb : add al, 0xf ; sub rax, rsi ; ret
0x0000000000435843 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004499ab : add al, 0xf3 ; ret
0x000000000046098e : add al, 0xf8 ; jmp rax
0x00000000004947a9 : add al, 0xfa ; call qword ptr [rax]
0x0000000000494829 : add al, 0xfa ; jmp rdx
0x00000000004b2e01 : add al, 0xfc ; jmp rdx
0x00000000004ab2e5 : add al, 0xfe ; jmp rsp
0x000000000040ef97 : add al, 1 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042d617 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004634c8 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004634f1 : add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000044023d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000046bd7c : add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000440458 : add al, 7 ; ret
0x0000000000425eff : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004b2dff : add al, ah ; add al, 0xfc ; jmp rdx
0x00000000004b2dfb : add al, ah ; jne 0x4b2e07 ; add al, ah ; add al, 0xfc ; jmp rdx
0x000000000049f1a7 : add al, al ; sldt word ptr [rax] ; ret
0x000000000049510c : add al, bh ; cli ; call qword ptr [rax]
0x0000000000448305 : add al, bh ; jg 0x448307 ; int1 ; mov eax, eax ; ret
0x00000000004afe47 : add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x0000000000440e31 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x000000000040102b : add al, byte ptr [rax] ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000045526d : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000047b040 : add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000045f813 : add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000042b272 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000048819e : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; ret 0x3a83
0x000000000045acdd : add al, byte ptr [rax] ; add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x0000000000401015 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000468b74 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004234b3 : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x000000000047c3ba : add al, byte ptr [rax] ; add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x00000000004784f5 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004477f4 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004217ba : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454a0b : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042af47 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e8e1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af75 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000045abd2 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000047dcb6 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000044a789 : add al, byte ptr [rax] ; add byte ptr [rax], al ; jmp rax
0x0000000000474714 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000446274 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000410c96 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000485aa4 : add al, byte ptr [rax] ; add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x000000000041ae86 : add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004244b3 : add al, byte ptr [rax] ; cmove rax, rdx ; ret
0x000000000042389c : add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048aea2 : add al, byte ptr [rax] ; movss dword ptr [rsp - 0x28], xmm0 ; ret
0x000000000047c1db : add al, byte ptr [rax] ; movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000047cb03 : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x0000000000484eea : add al, byte ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d4da : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d4ce
0x000000000044b065 : add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x000000000044beae : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004ac07d : add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000494824 : add al, byte ptr [rip + 0x472fffa] ; cli ; jmp rdx
0x0000000000424881 : add al, byte ptr cs:[rax] ; cmovne rax, rdx ; ret
0x000000000042466d : add al, byte ptr ss:[rax] ; cmovne rax, rdx ; ret
0x000000000041a64b : add al, ch ; call qword ptr [rdi]
0x00000000004525a9 : add al, ch ; cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000489a1d : add al, ch ; int 0x80
0x000000000041fb89 : add al, ch ; int1 ; ret 2
0x000000000046fbab : add al, ch ; lahf ; ret 0xfffd
0x0000000000455891 : add al, ch ; pop rcx ; ret 0xfffa
0x000000000044fb24 : add al, ch ; push rsi ; ret
0x000000000045584e : add al, ch ; pushfq ; ret 0xfffa
0x0000000000412d87 : add al, ch ; ret
0x0000000000421688 : add al, ch ; ret 0x2a7
0x000000000040e678 : add al, ch ; ret 0x3ab
0x00000000004b1ab7 : add al, ch ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004af5e3 : add al, cl ; cmp eax, 0x96580000 ; clc ; call qword ptr [rax]
0x00000000004b2fe3 : add al, cl ; ja 0x4b2fef ; add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x00000000004ac1e3 : add al, cl ; or dword ptr [rax], eax ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004ac1e7 : add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004b5baf : add al, dh ; cdq ; std ; call qword ptr [rdx]
0x00000000004af60b : add al, dh ; cmp eax, 0xb8700000 ; clc ; call qword ptr [rax]
0x00000000004af42f : add al, dh ; ret 0xfff7
0x00000000004b1acf : add al, dh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b0ceb : add al, dl ; push rsp ; add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004b3fa6 : add bh, ah ; ret
0x000000000044e91f : add bh, al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045eb67 : add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea6f : add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040102d : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000048596f : add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000049443c : add bh, bl ; stc ; jmp rax
0x00000000004845f9 : add bh, byte ptr [rax + 1] ; ret
0x0000000000484756 : add bh, byte ptr [rax + 2] ; ret
0x00000000004496cb : add bh, byte ptr [rax - 1] ; ret
0x0000000000446642 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004b4859 : add bh, ch ; jmp qword ptr [rdx]
0x0000000000400dfa : add bh, dh ; ret 0
0x0000000000453269 : add bh, dh ; ret 0xf800
0x000000000040f0af : add bh, dh ; ret 0xffef
0x0000000000474711 : add bl, al ; mov eax, 2 ; ret
0x00000000004881ba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000494454 : add bl, bl ; stc ; jmp rax
0x00000000004636f9 : add bl, bl ; sub bl, cl ; in eax, 0xdf ; loopne 0x463692 ; ret
0x000000000048a0cb : add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x0000000000485c39 : add bl, ch ; ret
0x000000000040f348 : add bl, ch ; ret 0x1f0f
0x000000000048aea3 : add bl, dh ; movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000400a5f : add bl, dh ; ret
0x000000000041b17e : add bl, sil ; ret
0x0000000000481650 : add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000472946 : add byte ptr [r8 - 0x77], r9b ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455415 : add byte ptr [r8 - 0x77], r9b ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000040e16a : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004b0175 : add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004af9a1 : add byte ptr [r8], al ; or al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b01f1 : add byte ptr [r8], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004af9f1 : add byte ptr [r8], al ; sub al, 0x83 ; stc ; jmp rbx
0x00000000004af929 : add byte ptr [r8], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004b0749 : add byte ptr [r8], r8b ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b2fe7 : add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x00000000004235af : add byte ptr [rax + 0x16], bh ; ret
0x00000000004ac2a3 : add byte ptr [rax + 0x2800000a], cl ; sub esi, esi ; call qword ptr [rax]
0x00000000004adbd3 : add byte ptr [rax + 0x28000023], bh ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004122b0 : add byte ptr [rax + 0x29], cl ; ret
0x00000000004529f1 : add byte ptr [rax + 0x29], cl ; ret 0x349
0x0000000000453557 : add byte ptr [rax + 0x29], cl ; ret 0x8348
0x0000000000465eb8 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a9ca : add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x00000000004ac2cb : add byte ptr [rax + 0x3000000a], dh ; sub esi, esi ; jmp qword ptr [rax]
0x000000000042358f : add byte ptr [rax + 0x31], dl ; shr al, 0x48 ; ret
0x00000000004b4fff : add byte ptr [rax + 0x36], ah ; std ; jmp qword ptr [rcx]
0x000000000040ea4f : add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0a3 : add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18f : add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041328f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b138 : add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000047b042 : add byte ptr [rax + 0x39], cl ; ret 0xed75
0x000000000041d050 : add byte ptr [rax + 0x39], cl ; ret 0xf275
0x000000000047839e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004af65b : add byte ptr [rax + 0x3e], al ; add byte ptr [rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004af773 : add byte ptr [rax + 0x3f], bl ; add byte ptr [rax], al ; js 0x4af7c9 ; stc ; jmp qword ptr [rbx]
0x00000000004ab265 : add byte ptr [rax + 0x40], al ; js 0x4ab26c ; std ; call rax
0x00000000004afa7b : add byte ptr [rax + 0x42], ah ; add byte ptr [rax], al ; jo 0x4afa0f ; stc ; call qword ptr [rbx]
0x00000000004af777 : add byte ptr [rax + 0x47], bh ; stc ; jmp qword ptr [rbx]
0x00000000004b52b3 : add byte ptr [rax + 0x4800009a], bl ; pop rcx ; std ; call qword ptr [rdx]
0x00000000004b0173 : add byte ptr [rax + 0x49], bl ; add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004b52b7 : add byte ptr [rax + 0x59], cl ; std ; call qword ptr [rdx]
0x00000000004adcab : add byte ptr [rax + 0x60000024], dl ; mov ah, 0xf6 ; call qword ptr [rdx]
0x000000000040d25d : add byte ptr [rax + 0x63], cl ; adc al, 0x97 ; add rdx, rdi ; jmp rdx
0x000000000046eb85 : add byte ptr [rax + 0x63], cl ; add al, 0x81 ; add rax, rcx ; jmp rax
0x0000000000401f44 : add byte ptr [rax + 0x63], cl ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000046f1b5 : add byte ptr [rax + 0x63], cl ; add al, 0x87 ; add rax, rdi ; jmp rax
0x0000000000449332 : add byte ptr [rax + 0x63], cl ; add al, 0x9a ; add rax, rdx ; jmp rax
0x00000000004481b6 : add byte ptr [rax + 0x63], cl ; add al, 0xbe ; add rax, rsi ; jmp rax
0x0000000000459777 : add byte ptr [rax + 0x63], cl ; ret
0x000000000048cb73 : add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x000000000046f683 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x000000000045dc91 : add byte ptr [rax + 0x63], cl ; ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x000000000047561f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x000000000047563f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x000000000047562f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x000000000047564f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004898e3 : add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000440e2f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004b2e5b : add byte ptr [rax + 0x76], al ; add byte ptr [rax], al ; or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x00000000004b09ab : add byte ptr [rax + 0x77000051], dl ; sti ; hlt ; jmp qword ptr [rbx]
0x00000000004abcc3 : add byte ptr [rax + 0x78000004], ch ; xchg eax, ebx ; cmc ; call qword ptr [rdx]
0x000000000044486f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004b325b : add byte ptr [rax + 0x7a], al ; add byte ptr [rax], al ; nop ; and edi, esp ; jmp qword ptr [rcx]
0x00000000004b2e47 : add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x00000000004247d9 : add byte ptr [rax + 0xf4802e5], al ; ret 0xc3f3
0x0000000000448287 : add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041560f : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000473335 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000044fcef : add byte ptr [rax + 0xf], cl ; mov esi, 0x83480147 ; ret
0x000000000041ce04 : add byte ptr [rax + 0xf], cl ; ret
0x000000000047b1d6 : add byte ptr [rax + 0xf], cl ; ret 0x3e80
0x0000000000423924 : add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000412fba : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041deb3 : add byte ptr [rax + 0xf], cl ; ret 0x894c
0x000000000047b225 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x00000000004481fa : add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000042389d : add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000042459d : add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000454088 : add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845bc : add byte ptr [rax + 1], bh ; ret
0x000000000042b274 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000411232 : add byte ptr [rax + 1], cl ; ret
0x00000000004837c8 : add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004881a0 : add byte ptr [rax + 1], cl ; ret 0x3a83
0x00000000004847c5 : add byte ptr [rax + 2], bh ; ret
0x00000000004abd63 : add byte ptr [rax + 5], cl ; add byte ptr [rax], al ; test al, 0x99 ; cmc ; call rax
0x0000000000481651 : add byte ptr [rax + 9], cl ; ret 0x840f
0x0000000000476240 : add byte ptr [rax + 9], cl ; ret 0x850f
0x000000000049e14b : add byte ptr [rax + rax + 0xbf0000], bh ; add byte ptr [rax], al ; ret 0
0x0000000000450543 : add byte ptr [rax + rax*8 - 0x76b3178b], al ; ret 0x294c
0x000000000047269f : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000424504 : add byte ptr [rax + rax], al ; add byte ptr [rsi - 9], dh ; ret 0
0x000000000041dd5b : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473d47 : add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004b502f : add byte ptr [rax + rbx*4], dl ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x000000000045abed : add byte ptr [rax + rcx - 0xd], dh ; ret
0x000000000045acdf : add byte ptr [rax + rcx*2 - 0x77], ah ; adc dword ptr [rax - 0x39], ecx ; ret 0xffe0
0x000000000049f2f7 : add byte ptr [rax + rdx + 0x10bf0000], bh ; add byte ptr [rax], al ; ret 0x10
0x000000000047ba94 : add byte ptr [rax - 0x168b7f80], 0x89 ; ret 0xeac1
0x000000000041d26f : add byte ptr [rax - 0x17], dl ; ret
0x00000000004b1ab3 : add byte ptr [rax - 0x17ffff9e], bl ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b082f : add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x0000000000401017 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc33 : add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000046525b : add byte ptr [rax - 0x39], cl ; ret 0xb2c8
0x000000000045d51f : add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000040dbe7 : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x00000000004234b5 : add byte ptr [rax - 0x39], cl ; ret 0xffdf
0x00000000004681e5 : add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x000000000047496f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000047494f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749af : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x000000000047495f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000047499f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000458939 : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x0000000000458910 : add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x0000000000458270 : add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x00000000004942e0 : add byte ptr [rax - 0x462f0007], bh ; stc ; call rax
0x00000000004b0597 : add byte ptr [rax - 0x46], ch ; stc ; call qword ptr [rcx]
0x00000000004b0bb3 : add byte ptr [rax - 0x47ffffad], bl ; cli ; std ; jmp qword ptr [rdx]
0x00000000004af60f : add byte ptr [rax - 0x48], dh ; clc ; call qword ptr [rax]
0x000000000046161f : add byte ptr [rax - 0x4f743], al ; jmp qword ptr [rax]
0x00000000004b0147 : add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004af5e7 : add byte ptr [rax - 0x6a], bl ; clc ; call qword ptr [rax]
0x00000000004abcc7 : add byte ptr [rax - 0x6d], bh ; cmc ; call qword ptr [rdx]
0x00000000004b1727 : add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x000000000045520a : add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000045738d : add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x000000000044d48f : add byte ptr [rax - 0x73], cl ; add eax, 0x26ce69 ; ret
0x00000000004573ab : add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573c9 : add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000478046 : add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041c4ea : add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041eaff : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae38 : add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000046b85b : add byte ptr [rax - 0x73], cl ; xor eax, 0x24b5bd ; jmp rax
0x000000000047c3bc : add byte ptr [rax - 0x75], cl ; adc byte ptr [r8 - 0x7d], cl ; ret
0x000000000041992f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000485f77 : add byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rcx + 0x48b48d8] ; ret 0x8b48
0x000000000048aaa8 : add byte ptr [rax - 0x75], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x0000000000461577 : add byte ptr [rax - 0x75], cl ; add al, 0xc6 ; xor esi, esi ; jmp rax
0x0000000000460ecd : add byte ptr [rax - 0x75], cl ; add al, 0xc7 ; jmp rax
0x000000000046098b : add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x0000000000457a8f : add byte ptr [rax - 0x75], cl ; add eax, 0x2643e1 ; ret
0x000000000044f58f : add byte ptr [rax - 0x75], cl ; add eax, 0x26d391 ; ret
0x000000000041875f : add byte ptr [rax - 0x75], cl ; add eax, 0x2a09b9 ; ret
0x000000000040df0b : add byte ptr [rax - 0x75], cl ; and al, 8 ; call rax
0x000000000044e9df : add byte ptr [rax - 0x75], cl ; cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000042298f : add byte ptr [rax - 0x75], cl ; je 0x4229c1 ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000045b67b : add byte ptr [rax - 0x75], cl ; jl 0x45b6ac ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000040e9a2 : add byte ptr [rax - 0x75], cl ; js 0x40e9cc ; call rdx
0x0000000000471f9f : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000486cc0 : add byte ptr [rax - 0x75], cl ; pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400edd : add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000042f3ff : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004123cf : add byte ptr [rax - 0x76b80000], al ; ret
0x0000000000484a56 : add byte ptr [rax - 0x77], cl ; add eax, 0x23760a ; ret
0x00000000004197fa : add byte ptr [rax - 0x77], cl ; add eax, 0x2a005e ; ret
0x00000000004192f5 : add byte ptr [rax - 0x77], cl ; add eax, 0x2a04f3 ; ret
0x00000000004192cd : add byte ptr [rax - 0x77], cl ; add eax, 0x2a0513 ; ret
0x00000000004192ad : add byte ptr [rax - 0x77], cl ; add eax, 0x2a052b ; ret
0x0000000000412a52 : add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410353 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000455416 : add byte ptr [rax - 0x77], cl ; fimul dword ptr [rax + 0x29] ; ret 0x8348
0x000000000048b54e : add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000041834b : add byte ptr [rax - 0x77], cl ; imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044c0ff : add byte ptr [rax - 0x77], cl ; jo 0x44c129 ; ret
0x0000000000412ba3 : add byte ptr [rax - 0x77], cl ; mov edx, 0x130 ; pop rbx ; ret
0x000000000042360f : add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x000000000040383f : add byte ptr [rax - 0x77], cl ; ret
0x000000000044952b : add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000041dd07 : add byte ptr [rax - 0x77], cl ; ret 0x2948
0x0000000000411306 : add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131da : add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000048e91c : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x00000000004495d7 : add byte ptr [rax - 0x77], cl ; ret 0x6ae9
0x0000000000402dbe : add byte ptr [rax - 0x77], cl ; ret 0x7ce9
0x000000000045fd48 : add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041afbc : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000402b3f : add byte ptr [rax - 0x77], cl ; ret 0x8548
0x00000000004100e8 : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000449303 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000048e06f : add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x0000000000456478 : add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x0000000000403153 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000046a3a7 : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f37d : add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414938 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000449542 : add byte ptr [rax - 0x77], cl ; ret 0xffe9
0x0000000000447050 : add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000481cd1 : add byte ptr [rax - 0x77], cl ; sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000048cc8f : add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000047b743 : add byte ptr [rax - 0x77], cl ; xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000041001f : add byte ptr [rax - 0x77], cl ; xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000045d158 : add byte ptr [rax - 0x77], cl ; xor eax, eax ; jmp 0x45d128
0x00000000004b17b3 : add byte ptr [rax - 0x77ffffa1], bl ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000048ab86 : add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x000000000047379f : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x00000000004719fb : add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004afa7f : add byte ptr [rax - 0x7b], dh ; stc ; call qword ptr [rbx]
0x000000000048edce : add byte ptr [rax - 0x7d], cl ; and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000047e307 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f17
0x000000000047e306 : add byte ptr [rax - 0x7d], cl ; call 0xffffffffc2d12f18
0x000000000041fcbc : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041d0f7 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd54 : add byte ptr [rax - 0x7d], cl ; clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047f9ed : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x000000000042385d : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000401a79 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000461a83 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000048a8b1 : add byte ptr [rax - 0x7d], cl ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000416b8f : add byte ptr [rax - 0x7d], cl ; jg 0x416bd5 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000041f142 : add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004719b6 : add byte ptr [rax - 0x7d], cl ; js 0x4719f4 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000405f4f : add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000044c4a7 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000046f1c7 : add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000040f1cf : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004560d4 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x00000000004859ef : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcba : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000045dc74 : add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x000000000042a409 : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e797 : add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000048e04f : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046f3a8 : add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424260 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d3c3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a437 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047df77 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000425e3f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004738df : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000041039a : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000489652 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000041a644 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x0000000000415cb0 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000045abd4 : add byte ptr [rax - 0x7f], cl ; ret 0x200
0x000000000043306b : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b179b : add byte ptr [rax - 0x7fffffa1], al ; xchg eax, esp ; cli ; call qword ptr [rdi]
0x00000000004b198f : add byte ptr [rax - 0xb], ah ; std ; call rdx
0x00000000004b1497 : add byte ptr [rax - 0xe], ch ; std ; jmp qword ptr [rdi]
0x00000000004b5bab : add byte ptr [rax - 0xfffff5d], dl ; cdq ; std ; call qword ptr [rdx]
0x00000000004b1acb : add byte ptr [rax - 0xfffff9e], dh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x0000000000411d6a : add byte ptr [rax - 1], bh ; ret
0x00000000004b2c67 : add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b2c4f : add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x0000000000494f80 : add byte ptr [rax - 6], dl ; call qword ptr [rax]
0x000000000041a648 : add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041fb86 : add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046fba8 : add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb21 : add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412d84 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421685 : add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x0000000000415ada : add byte ptr [rax], 0 ; add bl, dh ; ret
0x0000000000414935 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000043584b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044823b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x0000000000418573 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042c0cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c631 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004af65f : add byte ptr [rax], ah ; cmc ; clc ; call qword ptr [rax]
0x00000000004b502e : add byte ptr [rax], al ; adc al, 0x98 ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004b0cee : add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004af42a : add byte ptr [rax], al ; adc byte ptr [rax + rax], bh ; add al, dh ; ret 0xfff7
0x00000000004b082a : add byte ptr [rax], al ; adc byte ptr [rax], dl ; add byte ptr [rax - 0x26], dl ; stc ; call qword ptr [rax]
0x00000000004b492a : add byte ptr [rax], al ; adc byte ptr [rcx + 0x5a00000], dl ; std ; jmp rdx
0x00000000004afa2a : add byte ptr [rax], al ; adc byte ptr [rdx], al ; add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b3f81 : add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x000000000041a649 : add byte ptr [rax], al ; add al, ch ; call qword ptr [rdi]
0x0000000000489a1b : add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000041fb87 : add byte ptr [rax], al ; add al, ch ; int1 ; ret 2
0x000000000046fba9 : add byte ptr [rax], al ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb22 : add byte ptr [rax], al ; add al, ch ; push rsi ; ret
0x0000000000412d85 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000421686 : add byte ptr [rax], al ; add al, ch ; ret 0x2a7
0x000000000040e676 : add byte ptr [rax], al ; add al, ch ; ret 0x3ab
0x000000000045ebae : add byte ptr [rax], al ; add bh, al ; test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x000000000040ea6d : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048596d : add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000047470f : add byte ptr [rax], al ; add bl, al ; mov eax, 2 ; ret
0x0000000000485c37 : add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040f346 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x0000000000415adb : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000468bc8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000465eb6 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000047a9c8 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d48
0x000000000041f32f : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048b0a1 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000041328d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000048b136 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000046b2e4 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000044486d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000448285 : add byte ptr [rax], al ; add byte ptr [rax + 0xf48f0e5], al ; ret 0xc35b
0x000000000041ce02 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004851b2 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000453072 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000041deb1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x894c
0x00000000004481f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc35b
0x000000000047442d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000454086 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0xff85
0x00000000004845ba : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000004830f9 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004837c6 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004847c3 : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x000000000044a501 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret
0x000000000040fc31 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000045d51d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044996d : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000458937 : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000045890e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x6411
0x000000000045826e : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x8511
0x000000000045738b : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add dword ptr [rax + 0x39], r9d ; ret
0x00000000004573a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573c7 : add byte ptr [rax], al ; add byte ptr [rax - 0x73], cl ; add r9d, dword ptr [rax + 0x39] ; ret
0x000000000041992d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e9a0 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x40e9ce ; call rdx
0x000000000041878d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000048b54c : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x000000000044c0fd : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c12b ; ret
0x000000000042360d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, al ; mov rdi, rax ; call rcx
0x0000000000410061 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000411304 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004601a4 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000041b98d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e06d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046a645 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040f37b : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf748
0x0000000000414936 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000048cc8d : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x000000000048ab84 : add byte ptr [rax], al ; add byte ptr [rax - 0x7ab70000], al ; ret 0x840f
0x0000000000405f4d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1cd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004859ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000047dcb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000042b123 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048e04d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000472c5e : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ea81 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b14d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000425e3d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000489650 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x3901
0x0000000000434864 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000411d68 : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x000000000040ea6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax - 0x7d] ; ret
0x000000000048596b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ror dword ptr [rax - 0x77], cl ; ret
0x000000000041874b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x000000000041328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000045d51b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffa0
0x000000000044996b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000041878b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000044c0fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; jo 0x44c12d ; ret
0x000000000041b98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000048e06b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000048cc8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; shr cl, 1 ; ret 0xfffe
0x0000000000405f4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044673b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000040f1cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000048e04b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x0000000000417376 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000049ffd2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x00000000004190eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044697b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000042618b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000412d0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x0000000000419e8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x00000000004227bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a64b : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x000000000047492c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x0000000000481b7f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000040ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419dfc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048596c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x00000000004a1ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11ac : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004481f7 : add byte ptr [rax], al ; add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x000000000048d254 : add byte ptr [rax], al ; add byte ptr [rax], al ; je 0x48d23c ; ret
0x0000000000485c36 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x485c04
0x000000000045ffdd : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000444e9c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444eac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444ebc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444ecc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444edc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444e1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444e2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444e3c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444e4c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444e5c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444e6c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444e7c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444e8c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444e0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000400bc0 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x000000000044486c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044424c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041870c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004847c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000043584c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000044c0fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000481b8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000041877c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000041878c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000048100c : add byte ptr [rax], al ; add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x0000000000412d0c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044823c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x000000000043599c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004190ec : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004118cc : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000417378 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fcc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1764 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000049ffd4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a04c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000400407 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x40041b ; call rax
0x000000000042b97c : add byte ptr [rax], al ; add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x000000000041768c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000047378c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x0000000000444c4c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3f7d : add byte ptr [rax], al ; add byte ptr [rax], dl ; add byte ptr [rax], al ; cld ; ret 0xfffc
0x00000000004af429 : add byte ptr [rax], al ; add byte ptr [rax], dl ; cmp al, 0 ; add al, dh ; ret 0xfff7
0x0000000000449684 : add byte ptr [rax], al ; add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004850ed : add byte ptr [rax], al ; add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e161 : add byte ptr [rax], al ; add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759ab : add byte ptr [rax], al ; add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x0000000000481f12 : add byte ptr [rax], al ; add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e52 : add byte ptr [rax], al ; add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x00000000004579b5 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482073 : add byte ptr [rax], al ; add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x000000000048437e : add byte ptr [rax], al ; add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a79d : add byte ptr [rax], al ; add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004498b4 : add byte ptr [rax], al ; add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x0000000000475879 : add byte ptr [rax], al ; add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x0000000000449c44 : add byte ptr [rax], al ; add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x000000000044a5b3 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x0000000000488448 : add byte ptr [rax], al ; add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x000000000045ad2c : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048500a : add byte ptr [rax], al ; add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000048d296 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x0000000000458424 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000041f0c9 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000044bd38 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x0000000000457be9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000043512d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000004142e2 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000417294 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbd9 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000048d255 : add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000046cfdd : add byte ptr [rax], al ; add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x0000000000465fea : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x00000000004115f4 : add byte ptr [rax], al ; add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000460ac7 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8a8 : add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004695b6 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d842 : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; ret 0x3941
0x000000000044697d : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000040e0f3 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000049213d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b6d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000049189d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f4d : add byte ptr [rax], al ; add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000044b3e8 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b3f7 ; call r12
0x000000000044b418 : add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b427 ; call r12
0x000000000045f3c1 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047de : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000479dc2 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000041cf25 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret
0x000000000042618d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9d : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bb50 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb76 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x000000000040ec82 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b45a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x000000000048cfc3 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048cfeb : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd3a : add byte ptr [rax], al ; add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x0000000000463423 : add byte ptr [rax], al ; add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x000000000040db94 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x00000000004810f4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x0000000000448185 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043592d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043599d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044823d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000412d0d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042b49d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000458959 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0xc083
0x00000000004768e0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048d1c5 : add byte ptr [rax], al ; add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000042c632 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000419e8d : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042b3c2 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004af65a : add byte ptr [rax], al ; add byte ptr ds:[rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x0000000000413ed5 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000045ede8 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000454c86 : add byte ptr [rax], al ; add cl, ch ; ret 0xfffd
0x0000000000400bc1 : add byte ptr [rax], al ; add cl, cl ; ret
0x000000000046a0c6 : add byte ptr [rax], al ; add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e8f0 : add byte ptr [rax], al ; add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x00000000004510dc : add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004227bd : add byte ptr [rax], al ; add dh, dh ; ret 0x4804
0x000000000044a64d : add byte ptr [rax], al ; add dh, dh ; ret 0x7404
0x00000000004460d1 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004abd62 : add byte ptr [rax], al ; add rax, -0x66580000 ; cmc ; call rax
0x000000000047492e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000042b273 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000411992 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000048d200 : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000048494c : add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048acc3 : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041620b : add byte ptr [rax], al ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004497a9 : add byte ptr [rax], al ; add rsp, 0x68 ; ret
0x0000000000449b3c : add byte ptr [rax], al ; add rsp, 0x78 ; ret
0x000000000040150c : add byte ptr [rax], al ; add rsp, 0x98 ; ret
0x000000000044b2de : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000481b81 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b213e : add byte ptr [rax], al ; and al, 0x69 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x0000000000448286 : add byte ptr [rax], al ; and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004af65e : add byte ptr [rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004a4dfe : add byte ptr [rax], al ; and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x000000000042b49e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000440ac0 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000473334 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b0446 : add byte ptr [rax], al ; call 0x124afe0a
0x00000000004b1ab6 : add byte ptr [rax], al ; call 0x144b1571
0x000000000045582e : add byte ptr [rax], al ; call 0x401af4
0x000000000046fbaa : add byte ptr [rax], al ; call 0x44be54
0x000000000040fbb5 : add byte ptr [rax], al ; call 0x44be84
0x000000000040ddf1 : add byte ptr [rax], al ; call 0x45afd9
0x000000000040102c : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x000000000040ea6e : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000048cfc9 : add byte ptr [rax], al ; call r14
0x000000000040e97b : add byte ptr [rax], al ; call rax
0x000000000048596e : add byte ptr [rax], al ; call rbx
0x00000000004a1ffe : add byte ptr [rax], al ; call rdi
0x000000000040e8b5 : add byte ptr [rax], al ; call rdx
0x00000000004a11ae : add byte ptr [rax], al ; call rsp
0x0000000000448304 : add byte ptr [rax], al ; clc ; jg 0x448308 ; int1 ; mov eax, eax ; ret
0x00000000004b3f82 : add byte ptr [rax], al ; cld ; ret 0xfffc
0x0000000000448231 : add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x00000000004481f9 : add byte ptr [rax], al ; cmove rax, rdx ; pop rbx ; ret
0x00000000004244dc : add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004238d3 : add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x00000000004b4852 : add byte ptr [rax], al ; cmp byte ptr [rax + 0x2080000], dl ; std ; jmp qword ptr [rdx]
0x00000000004b4052 : add byte ptr [rax], al ; cmp byte ptr [rax - 0x35480000], cl ; cld ; jmp qword ptr [rcx]
0x00000000004af352 : add byte ptr [rax], al ; cmp byte ptr [rbx], bh ; add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x000000000047f9ec : add byte ptr [rax], al ; cmp rax, -1 ; cmove rax, rdx ; ret
0x000000000041f747 : add byte ptr [rax], al ; cmp rdx, r8 ; jne 0x41f718 ; ret
0x00000000004af636 : add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x00000000004b0176 : add byte ptr [rax], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004af5e2 : add byte ptr [rax], al ; enter 0x3d, 0 ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004b2fe2 : add byte ptr [rax], al ; enter 0x77, 0 ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b45e2 : add byte ptr [rax], al ; enter 0x8d, 0 ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x00000000004af5f6 : add byte ptr [rax], al ; fdivr qword ptr [rip - 0x69ac0000] ; clc ; jmp qword ptr [rsi]
0x0000000000400a58 : add byte ptr [rax], al ; hlt ; nop dword ptr [rax + rax] ; ret
0x00000000004b1ae2 : add byte ptr [rax], al ; in al, dx ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x000000000048dd3b : add byte ptr [rax], al ; ja 0x48dd48 ; sbb eax, eax ; ret
0x00000000004b09ae : add byte ptr [rax], al ; ja 0x4b09b2 ; hlt ; jmp qword ptr [rbx]
0x00000000004b1452 : add byte ptr [rax], al ; jae 0x4b1456 ; call qword ptr [rdx]
0x00000000004b3cd6 : add byte ptr [rax], al ; jb 0x4b3ca7 ; hlt ; jmp qword ptr [rcx]
0x00000000004129a6 : add byte ptr [rax], al ; je 0x4129b1 ; ret
0x0000000000424540 : add byte ptr [rax], al ; je 0x42450f ; ret
0x0000000000473d49 : add byte ptr [rax], al ; je 0x473d55 ; ret
0x000000000048d1c6 : add byte ptr [rax], al ; je 0x48d1b4 ; add rsp, 0x18 ; ret
0x000000000048d256 : add byte ptr [rax], al ; je 0x48d23a ; ret
0x000000000048d297 : add byte ptr [rax], al ; je 0x48d2a8 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x00000000004b2c62 : add byte ptr [rax], al ; je 0x4b2c70 ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b14d2 : add byte ptr [rax], al ; jl 0x4b154e ; cli ; jmp rax
0x000000000040f347 : add byte ptr [rax], al ; jmp 0x40f310
0x00000000004494c1 : add byte ptr [rax], al ; jmp 0x449353
0x000000000045d0bf : add byte ptr [rax], al ; jmp 0x45d088
0x0000000000485c38 : add byte ptr [rax], al ; jmp 0x485c02
0x000000000044a78b : add byte ptr [rax], al ; jmp rax
0x000000000041a06e : add byte ptr [rax], al ; jne 0x41a081 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000042c132 : add byte ptr [rax], al ; jne 0x42c048 ; ret
0x00000000004488cd : add byte ptr [rax], al ; jne 0x4488fd ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449685 : add byte ptr [rax], al ; jne 0x4496a1 ; add rsp, 0x28 ; ret
0x00000000004498b5 : add byte ptr [rax], al ; jne 0x449903 ; add rsp, 0x58 ; ret
0x0000000000449c45 : add byte ptr [rax], al ; jne 0x449c9b ; add rsp, 0x68 ; ret
0x000000000044a5b4 : add byte ptr [rax], al ; jne 0x44a5cf ; add rsp, 0x28 ; ret
0x000000000045ad2d : add byte ptr [rax], al ; jne 0x45ad3e ; add rsp, 0x18 ; ret
0x000000000047587a : add byte ptr [rax], al ; jne 0x4758cb ; add rsp, 0x58 ; ret
0x00000000004759ac : add byte ptr [rax], al ; jne 0x4759d3 ; add rsp, 0x38 ; ret
0x0000000000481d58 : add byte ptr [rax], al ; jne 0x481d6b ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e53 : add byte ptr [rax], al ; jne 0x481e8b ; add rsp, 0x38 ; ret
0x0000000000481f13 : add byte ptr [rax], al ; jne 0x481f46 ; add rsp, 0x68 ; ret
0x0000000000482074 : add byte ptr [rax], al ; jne 0x4820b6 ; add rsp, 0x78 ; ret
0x0000000000482343 : add byte ptr [rax], al ; jne 0x482376 ; add rsp, 0x68 ; ret
0x000000000048437f : add byte ptr [rax], al ; jne 0x4843c3 ; leave ; ret
0x000000000048500b : add byte ptr [rax], al ; jne 0x48501c ; add rsp, 0x38 ; ret
0x00000000004850ee : add byte ptr [rax], al ; jne 0x48510c ; add rsp, 0x38 ; ret
0x00000000004878b9 : add byte ptr [rax], al ; jne 0x4878c4 ; pop rbx ; ret
0x0000000000488449 : add byte ptr [rax], al ; jne 0x488464 ; add rsp, 0x38 ; ret
0x000000000048e162 : add byte ptr [rax], al ; jne 0x48e185 ; ret
0x00000000004af60e : add byte ptr [rax], al ; jo 0x4af5cf ; clc ; call qword ptr [rax]
0x00000000004afa7e : add byte ptr [rax], al ; jo 0x4afa0c ; stc ; call qword ptr [rbx]
0x00000000004afa7d : add byte ptr [rax], al ; jo 0x4afa0d ; stc ; call qword ptr [rbx]
0x00000000004ab264 : add byte ptr [rax], al ; js 0x4ab26d ; std ; call rax
0x00000000004abcc6 : add byte ptr [rax], al ; js 0x4abc62 ; cmc ; call qword ptr [rdx]
0x00000000004af776 : add byte ptr [rax], al ; js 0x4af7c6 ; stc ; jmp qword ptr [rbx]
0x00000000004b2e46 : add byte ptr [rax], al ; js 0x4b2e5a ; cld ; jmp qword ptr [rax]
0x0000000000444e9e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000444eae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444ebe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000444ece : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000444ede : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000444dfd : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444e1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444e2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444e3e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444e4e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444e5e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000444e6e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000444daa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444e7e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444e8e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000444e0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044d48e : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x26ce69] ; ret
0x000000000046b85a : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x24b5bd] ; jmp rax
0x0000000000400bc2 : add byte ptr [rax], al ; leave ; ret
0x00000000004b17c6 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b2142 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004b2dfe : add byte ptr [rax], al ; loopne 0x4b2e0b ; cld ; jmp rdx
0x00000000004b2dfa : add byte ptr [rax], al ; loopne 0x4b2e7c ; add byte ptr [rax], al ; loopne 0x4b2e0f ; cld ; jmp rdx
0x00000000004b14ce : add byte ptr [rax], al ; mov ah, 0x5c ; add byte ptr [rax], al ; jl 0x4b1552 ; cli ; jmp rax
0x00000000004b074a : add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b0fca : add byte ptr [rax], al ; mov al, 0x57 ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x0000000000443d7e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004425ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004af356 : add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x0000000000412a4e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000044486e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000044424e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000471a9b : add byte ptr [rax], al ; mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041930c : add byte ptr [rax], al ; mov dword ptr [rip + 0x2a04f8], eax ; ret
0x000000000044425e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bbd : add byte ptr [rax], al ; mov eax, 0 ; leave ; ret
0x000000000042382e : add byte ptr [rax], al ; mov eax, 0x16 ; ret
0x00000000004adbd2 : add byte ptr [rax], al ; mov eax, 0x28000023 ; mov bl, 0xf6 ; call qword ptr [rsi]
0x000000000047561e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x000000000047563e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x000000000047562e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x000000000047564e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x0000000000411d69 : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000004845bb : add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000004847c4 : add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000041842e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000048f5de : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5f9 ; ret
0x000000000048f80e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f829 ; ret
0x000000000047e74f : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004688a2 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000466041 : add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000044428e : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000048cfc4 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048cfec : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043512e : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043584e : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004abcd6 : add byte ptr [rax], al ; mov esp, 0x84000004 ; xchg eax, ebx ; cmc ; call rsp
0x000000000044c0fe : add byte ptr [rax], al ; mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000484f88 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000481cd0 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884c2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488596 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000047b714 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000048d2ee : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004845d8 : add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x00000000004192cc : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a0513], rax ; ret
0x00000000004192ac : add byte ptr [rax], al ; mov qword ptr [rip + 0x2a052b], rax ; ret
0x00000000004179be : add byte ptr [rax], al ; mov rax, -1 ; ret
0x000000000047494e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x000000000047495e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x000000000047496e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x000000000047497e : add byte ptr [rax], al ; mov rax, 4 ; ret
0x000000000047498e : add byte ptr [rax], al ; mov rax, 5 ; ret
0x000000000047499e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000004749ae : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000047cce3 : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118be : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000481b8e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000047c4fe : add byte ptr [rax], al ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471f9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000041877e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d26e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d2fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d35e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d34e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d30e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000457a8e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2643e1] ; ret
0x000000000044f59e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x26d391] ; ret
0x000000000041875e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2a09b9] ; ret
0x000000000048b03e : add byte ptr [rax], al ; mov rax, qword ptr [rsi + 0xa8] ; ret
0x0000000000473b6e : add byte ptr [rax], al ; mov rax, r8 ; vzeroupper ; ret
0x0000000000413e34 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d468 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000410352 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041878e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000041dd5e : add byte ptr [rax], al ; mov rax, rsi ; ret
0x000000000044704f : add byte ptr [rax], al ; mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b3e9 : add byte ptr [rax], al ; mov rdi, qword ptr [r13] ; call r12
0x000000000040e9a1 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000049213e : add byte ptr [rax], al ; mov rdi, r13 ; call rax
0x000000000049189e : add byte ptr [rax], al ; mov rdi, r15 ; call rax
0x000000000046efff : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000043568e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000456477 : add byte ptr [rax], al ; mov rdx, rax ; jmp 0x456434
0x00000000004203a6 : add byte ptr [rax], al ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x000000000048dcde : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, r12 ; call r15
0x000000000042360e : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rax ; call rcx
0x000000000048100e : add byte ptr [rax], al ; movsx eax, dl ; sub eax, ecx ; ret
0x000000000048b0f5 : add byte ptr [rax], al ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000046f1b4 : add byte ptr [rax], al ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000045a41d : add byte ptr [rax], al ; movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x0000000000459f1e : add byte ptr [rax], al ; movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x0000000000412d0e : add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x000000000044823e : add byte ptr [rax], al ; movzx eax, cl ; pop rbx ; ret
0x00000000004352be : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000043599e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000043592e : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b325e : add byte ptr [rax], al ; nop ; and edi, esp ; jmp qword ptr [rcx]
0x0000000000400b8b : add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004b09aa : add byte ptr [rax], al ; nop ; push rcx ; add byte ptr [rax], al ; ja 0x4b09b6 ; hlt ; jmp qword ptr [rbx]
0x000000000044c019 : add byte ptr [rax], al ; nop dword ptr [rax + rax] ; ret
0x00000000004af926 : add byte ptr [rax], al ; or al, 0x41 ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004af9a2 : add byte ptr [rax], al ; or al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004b5822 : add byte ptr [rax], al ; or byte ptr [rax - 0x7af80000], ah ; std ; call qword ptr [rbx]
0x00000000004b1722 : add byte ptr [rax], al ; or byte ptr [rdi], bl ; add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x00000000004b4856 : add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x00000000004b2e5e : add byte ptr [rax], al ; or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x00000000004b2fe6 : add byte ptr [rax], al ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b0172 : add byte ptr [rax], al ; pop rax ; add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004af5e6 : add byte ptr [rax], al ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x000000000044a79e : add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000400a96 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000465feb : add byte ptr [rax], al ; pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000457bea : add byte ptr [rax], al ; pop rbx ; pop r12 ; ret
0x00000000004142e3 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000417295 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040fbda : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d96 : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b52b6 : add byte ptr [rax], al ; pop rcx ; std ; call qword ptr [rdx]
0x00000000004add62 : add byte ptr [rax], al ; pop rsp ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004b3f7e : add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004b2c4e : add byte ptr [rax], al ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x00000000004add4e : add byte ptr [rax], al ; push rax ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004ae52f : add byte ptr [rax], al ; push rsi ; jmp rsi
0x00000000004b0d6e : add byte ptr [rax], al ; push rsp ; push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004af5fa : add byte ptr [rax], al ; push rsp ; xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x00000000004b01f2 : add byte ptr [rax], al ; pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004b5032 : add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004b0cea : add byte ptr [rax], al ; rcl byte ptr [rax + rax], 1 ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004b0fce : add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x0000000000400a5e : add byte ptr [rax], al ; ret
0x0000000000498386 : add byte ptr [rax], al ; ret 0
0x000000000049f2fe : add byte ptr [rax], al ; ret 0x10
0x00000000004a0fce : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1766 : add byte ptr [rax], al ; ret 0x1d5
0x000000000049ffd6 : add byte ptr [rax], al ; ret 0x24
0x00000000004a04c6 : add byte ptr [rax], al ; ret 0x33
0x000000000049eafe : add byte ptr [rax], al ; ret 0xa
0x000000000049eefe : add byte ptr [rax], al ; ret 0xd
0x00000000004a23a2 : add byte ptr [rax], al ; ret 1
0x00000000004a25a2 : add byte ptr [rax], al ; ret 2
0x00000000004a27a2 : add byte ptr [rax], al ; ret 3
0x00000000004a29a2 : add byte ptr [rax], al ; ret 4
0x00000000004a2ba2 : add byte ptr [rax], al ; ret 5
0x000000000049e6a6 : add byte ptr [rax], al ; ret 6
0x00000000004a2fa2 : add byte ptr [rax], al ; ret 7
0x00000000004a31a2 : add byte ptr [rax], al ; ret 8
0x00000000004a33a2 : add byte ptr [rax], al ; ret 9
0x00000000004a299e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000049eda6 : add byte ptr [rax], al ; ror byte ptr [rax + rax], 0 ; ret
0x00000000004b4f62 : add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004b0f36 : add byte ptr [rax], al ; sbb al, 0x57 ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004b4132 : add byte ptr [rax], al ; sbb byte ptr [rcx - 0x32380000], cl ; cld ; jmp qword ptr [rsi]
0x00000000004af632 : add byte ptr [rax], al ; sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x000000000041eddc : add byte ptr [rax], al ; shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004b0746 : add byte ptr [rax], al ; sub al, 0x4f ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004af9f2 : add byte ptr [rax], al ; sub al, 0x83 ; stc ; jmp rbx
0x00000000004b0d72 : add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004b0442 : add byte ptr [rax], al ; sub byte ptr [rax + rax], cl ; call 0x124afe0e
0x00000000004b0142 : add byte ptr [rax], al ; sub byte ptr [rcx], cl ; add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004afe42 : add byte ptr [rax], al ; sub byte ptr [rsi], al ; add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004b2e42 : add byte ptr [rax], al ; sub byte ptr [rsi], dh ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x00000000004b45e6 : add byte ptr [rax], al ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x000000000042d07c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000417b06 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000446b91 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000044be95 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x0000000000474ec3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004abd66 : add byte ptr [rax], al ; test al, 0x99 ; cmc ; call rax
0x00000000004abcc2 : add byte ptr [rax], al ; test al, 4 ; add byte ptr [rax], al ; js 0x4abc66 ; cmc ; call qword ptr [rdx]
0x00000000004af99e : add byte ptr [rax], al ; test byte ptr [rcx], al ; add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004b0f3a : add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x000000000044bd39 : add byte ptr [rax], al ; test eax, eax ; cmove eax, edx ; ret
0x0000000000400409 : add byte ptr [rax], al ; test rax, rax ; je 0x400419 ; call rax
0x000000000042b97e : add byte ptr [rax], al ; vzeroupper ; xor eax, eax ; ret
0x00000000004b4f5e : add byte ptr [rax], al ; xchg eax, edi ; add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004ae1ae : add byte ptr [rax], al ; xchg eax, esp ; sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x00000000004b17ca : add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b144e : add byte ptr [rax], al ; xor al, 0x5c ; add byte ptr [rax], al ; jae 0x4b145a ; call qword ptr [rdx]
0x00000000004af92a : add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004b2c4a : add byte ptr [rax], al ; xor byte ptr [rax + rax], dh ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x000000000045ca77 : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000475dd6 : add byte ptr [rax], al ; xor eax, eax ; leave ; ret
0x000000000040ec83 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d475 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040f236 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042b8ca : add byte ptr [rax], al ; xor eax, eax ; vzeroupper ; ret
0x00000000004579b6 : add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000444c4e : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000494c48 : add byte ptr [rax], bh ; cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000400bbe : add byte ptr [rax], bh ; leave ; ret
0x00000000004b4853 : add byte ptr [rax], bh ; nop ; add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x00000000004b0017 : add byte ptr [rax], bh ; popfq ; stc ; call qword ptr [rbx]
0x00000000004af633 : add byte ptr [rax], bl ; add byte ptr ds:[rax], al ; cwde ; fprem ; call qword ptr [rax]
0x00000000004b0443 : add byte ptr [rax], ch ; add byte ptr [rax], r8b ; call 0x124afe0d
0x00000000004b2e43 : add byte ptr [rax], ch ; jbe 0x4b2e4f ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x00000000004adbd7 : add byte ptr [rax], ch ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004ac2a7 : add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004b4857 : add byte ptr [rax], cl ; add bh, ch ; jmp qword ptr [rdx]
0x000000000048ba3e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x230769], 8 ; ret
0x000000000048ba45 : add byte ptr [rax], cl ; ret
0x00000000004afa07 : add byte ptr [rax], cl ; test cl, bh ; call qword ptr [rdx]
0x00000000004b5827 : add byte ptr [rax], cl ; test ebp, edi ; call qword ptr [rbx]
0x00000000004b2c4b : add byte ptr [rax], dh ; je 0x4b2c57 ; add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x00000000004ac2cf : add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x00000000004afa2f : add byte ptr [rax], dh ; test cl, bh ; call qword ptr [rbx]
0x00000000004b3f7f : add byte ptr [rax], dl ; add byte ptr [rax], al ; cld ; ret 0xfffc
0x00000000004af42b : add byte ptr [rax], dl ; cmp al, 0 ; add al, dh ; ret 0xfff7
0x000000000044b2dd : add byte ptr [rax], r8b ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b0445 : add byte ptr [rax], r8b ; call 0x124afe0b
0x000000000042382d : add byte ptr [rax], r8b ; mov eax, 0x16 ; ret
0x00000000004188bd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x000000000041842d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000044427d : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004442bd : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004203a5 : add byte ptr [rax], r8b ; mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000400a95 : add byte ptr [rax], r8b ; pop rbp ; ret
0x0000000000484cdd : add byte ptr [rax], r8b ; pop rbx ; ret
0x0000000000400a5d : add byte ptr [rax], r8b ; ret
0x000000000044664d : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x0000000000449686 : add byte ptr [rbp + 0x10], dh ; add rsp, 0x28 ; ret
0x00000000004850ef : add byte ptr [rbp + 0x12], dh ; add rsp, 0x38 ; ret
0x000000000048e163 : add byte ptr [rbp + 0x1a], dh ; ret
0x00000000004759ad : add byte ptr [rbp + 0x1b], dh ; add rsp, 0x38 ; ret
0x00000000004488ce : add byte ptr [rbp + 0x23], dh ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481f14 : add byte ptr [rbp + 0x27], dh ; add rsp, 0x68 ; ret
0x0000000000481e54 : add byte ptr [rbp + 0x2c], dh ; add rsp, 0x38 ; ret
0x000000000041318a : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x00000000004579b7 : add byte ptr [rbp + 0x31], al ; leave ; call r15
0x0000000000482075 : add byte ptr [rbp + 0x36], dh ; add rsp, 0x78 ; ret
0x0000000000484380 : add byte ptr [rbp + 0x3b], dh ; leave ; ret
0x000000000044a79f : add byte ptr [rbp + 0x41], bl ; pop rsp ; jmp rax
0x00000000004498b6 : add byte ptr [rbp + 0x42], dh ; add rsp, 0x58 ; ret
0x000000000047587b : add byte ptr [rbp + 0x45], dh ; add rsp, 0x58 ; ret
0x00000000004164e7 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000449c46 : add byte ptr [rbp + 0x4a], dh ; add rsp, 0x68 ; ret
0x0000000000403b91 : add byte ptr [rbp + 0xb], dh ; jmp 0x403bc1
0x0000000000416341 : add byte ptr [rbp + 0xb], dh ; jmp 0x416371
0x0000000000482faf : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000482e9f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000044a5b5 : add byte ptr [rbp + 0xf], dh ; add rsp, 0x28 ; ret
0x000000000048844a : add byte ptr [rbp + 0xf], dh ; add rsp, 0x38 ; ret
0x00000000004878ba : add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000045ad2e : add byte ptr [rbp + 5], dh ; add rsp, 0x18 ; ret
0x000000000048500c : add byte ptr [rbp + 5], dh ; add rsp, 0x38 ; ret
0x000000000041a06f : add byte ptr [rbp + 6], dh ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048d298 : add byte ptr [rbp + rax + 0x48], dh ; mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000048d1b0 : add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000049eef7 : add byte ptr [rbp + rcx + 0xdbf0000], bh ; add byte ptr [rax], al ; ret 0xd
0x0000000000477fcf : add byte ptr [rbp + rcx*4 + 0x2d], cl ; ret 2
0x00000000004675b5 : add byte ptr [rbp + rcx*4 + 0x35], cl ; ret
0x0000000000458426 : add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000041f0cb : add byte ptr [rbp + rcx*4 + 0x46], cl ; dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000047210e : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x10 ; mov rdi, r12 ; call rbx
0x0000000000472208 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x18 ; mov rdi, r12 ; call rbx
0x0000000000472302 : add byte ptr [rbp + rcx*4 + 0x4d], cl ; ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x00000000004b0d6f : add byte ptr [rbp + rdx*2], dl ; add byte ptr [rbx + rax], ch ; cli ; jmp qword ptr [rdx]
0x00000000004add63 : add byte ptr [rbp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x00000000004901f4 : add byte ptr [rbp - 0x1f], dh ; pop rbx ; ret
0x000000000044bd3a : add byte ptr [rbp - 0x3dbbf040], al ; ret
0x000000000049f1a3 : add byte ptr [rbp - 0x3ffffff1], bh ; sldt word ptr [rax] ; ret
0x0000000000448f27 : add byte ptr [rbp - 0x57c03b0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000468d69 : add byte ptr [rbp - 0x75], cl ; je 0x468d9a ; and byte ptr [rax + 1], cl ; ret
0x000000000044d4a5 : add byte ptr [rbp - 0xcf98b40], al ; ret
0x000000000048f587 : add byte ptr [rbp - 0xcfb8b40], al ; ret
0x00000000004add5f : add byte ptr [rbp], al ; add byte ptr [rbp + rsi*4 - 0xa], bl ; call qword ptr [rsi]
0x000000000043d249 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000491583 : add byte ptr [rbx + 0x22828a3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004853ed : add byte ptr [rbx + 0x236d6c0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000047fdd5 : add byte ptr [rbx + 0x23a40b0d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004239af : add byte ptr [rbx + 0x29843a15], cl ; add bh, dh ; ret 0
0x000000000042031f : add byte ptr [rbx + 0x2994ee3d], cl ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004187f7 : add byte ptr [rbx + 0x2a351505], al ; add byte ptr [rcx], al ; ret
0x0000000000419def : add byte ptr [rbx + 0x31], bl ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x0000000000457beb : add byte ptr [rbx + 0x41], bl ; pop rsp ; ret
0x000000000044428f : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x0000000000443dbf : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x000000000043512f : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000421aaf : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000412498 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004142e4 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000405da1 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000040fbdb : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000459f1f : add byte ptr [rbx + 0x63], cl ; xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000048f5df : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x0000000000473d4a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004af9f3 : add byte ptr [rbx + rax*4], ch ; stc ; jmp rbx
0x00000000004af9a3 : add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004b0d73 : add byte ptr [rbx + rax], ch ; cli ; jmp qword ptr [rdx]
0x000000000048d257 : add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000044c815 : add byte ptr [rbx + rcx*4 + 0x1d], cl ; ret
0x0000000000484557 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000488357 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004b14d3 : add byte ptr [rbx + rsi*2 - 6], bh ; jmp rax
0x00000000004b1453 : add byte ptr [rbx + rsi*2 - 6], cl ; call qword ptr [rdx]
0x00000000004482b8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x10 ; pop rbx ; ret
0x00000000004482c6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000004482bf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000004482d4 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000004482cd : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000004482b1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x0000000000471f59 : add byte ptr [rbx - 0x3d], bl ; nop dword ptr [rax] ; ret
0x000000000046cfdf : add byte ptr [rbx - 0x4f743], al ; jmp qword ptr [rax]
0x000000000044852e : add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000465fec : add byte ptr [rbx - 0x77], bl ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000446276 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000406ee5 : add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x000000000040ac16 : add byte ptr [rbx - 0x7bf0fc08], al ; ret
0x0000000000410c98 : add byte ptr [rbx - 0x7bf0fd08], al ; ret
0x0000000000407c5c : add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x0000000000409e2f : add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x0000000000409ed2 : add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x000000000048efff : add byte ptr [rbx - 0x7fbf8f19], al ; jmp qword ptr [rax]
0x00000000004a4dff : add byte ptr [rbx], ah ; xchg ebp, edi ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000047b747 : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004672a5 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000041168f : add byte ptr [rcx + 0x2b], cl ; adc byte ptr [r8 + 1], r9b ; ret
0x00000000004115f6 : add byte ptr [rcx + 0x2b], cl ; and byte ptr [r8 + 1], r9b ; ret
0x0000000000489ab2 : add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x000000000047390f : add byte ptr [rcx + 0x39], cl ; ret
0x000000000040fc9d : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; ret
0x0000000000419290 : add byte ptr [rcx + 0x4789246f], cl ; adc byte ptr [rbx + 0x5d], bl ; ret
0x0000000000412d00 : add byte ptr [rcx + 0x5c], al ; pop r13 ; pop r14 ; ret
0x0000000000471a9c : add byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000042dace : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048b0f6 : add byte ptr [rcx + 0x63], cl ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000045a41e : add byte ptr [rcx + 0x63], cl ; cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x000000000042c32c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000444108 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000460ac9 : add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000046c8aa : add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x0000000000485aa6 : add byte ptr [rcx + 0xc8b48d8], cl ; ret 0xb60f
0x00000000004695b8 : add byte ptr [rcx + 0xf], al ; mov dh, 0x46 ; or al, 0x83 ; ret
0x000000000046d844 : add byte ptr [rcx + 0xf], al ; ret 0x3941
0x0000000000461def : add byte ptr [rcx + 0xf], al ; ret 0xc839
0x0000000000466e57 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000046be6a : add byte ptr [rcx + 1], al ; ret 0x8b48
0x000000000044697f : add byte ptr [rcx + 1], cl ; ret
0x000000000040e0f5 : add byte ptr [rcx + 1], cl ; ret 0x149
0x000000000048c345 : add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000041926d : add byte ptr [rcx + rax + 0x57], al ; sbb byte ptr [rax + 0x39], cl ; ret
0x00000000004021b2 : add byte ptr [rcx + rax - 0x18], cl ; jmp rax
0x00000000004af99f : add byte ptr [rcx + rax*2 - 0x7cf40000], al ; stc ; call qword ptr [rdx]
0x00000000004af927 : add byte ptr [rcx + rax*2], cl ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x00000000004b213f : add byte ptr [rcx + rbp*2], ah ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x0000000000416b94 : add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000049087e : add byte ptr [rcx + rcx*4 + 0x2d], cl ; ret 0x22a1
0x000000000049213f : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x0000000000473b6f : add byte ptr [rcx + rcx*4 - 0x40], cl ; vzeroupper ; ret
0x000000000048dcdf : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, r12 ; call r15
0x000000000049189f : add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000423f4f : add byte ptr [rcx + rcx*8 - 0x7cb7dd8c], al ; ret 0x4801
0x000000000041f748 : add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f717 ; ret
0x0000000000494194 : add byte ptr [rcx + rdi*8 - 0x66b6f01], dl ; jmp qword ptr [rax]
0x0000000000493f78 : add byte ptr [rcx + rdi*8], ah ; jmp qword ptr [rax]
0x00000000004554cf : add byte ptr [rcx - 0x46], al ; add eax, 0xe9000000 ; ret
0x000000000047f15b : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000047f1f8 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0xc74
0x000000000040e167 : add byte ptr [rcx - 0x75], cl ; add byte ptr [r8 - 0x7d], r9b ; ret
0x000000000044b3ea : add byte ptr [rcx - 0x75], cl ; jge 0x44b3f5 ; call r12
0x000000000044b41a : add byte ptr [rcx - 0x75], cl ; jge 0x44b425 ; call r12
0x000000000049224f : add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000044bea7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046c26e : add byte ptr [rcx - 0x77], al ; ret 0x1674
0x000000000045eaa7 : add byte ptr [rcx - 0x77], cl ; ret
0x00000000004047e0 : add byte ptr [rcx - 0x77], cl ; ret 0x149
0x00000000004918f2 : add byte ptr [rcx - 0x77], cl ; ret 0x8349
0x0000000000479dc4 : add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000048aa7a : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000048ab89 : add byte ptr [rcx - 0x7b], cl ; ret 0x840f
0x000000000047155b : add byte ptr [rcx - 0x7cb7e8f4], cl ; ret 0x4804
0x000000000045b277 : add byte ptr [rcx - 0x7d], cl ; call qword ptr [rbx]
0x000000000041cf27 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004194af : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000045b4ee : add byte ptr [rcx - 0x7d], cl ; ret 0x6601
0x000000000042618f : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000424a9f : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000042bb52 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000042bb78 : add byte ptr [rcx - 9], cl ; ret 2
0x000000000045588e : add byte ptr [rcx], 0 ; add al, ch ; pop rcx ; ret 0xfffa
0x000000000048b54a : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; fucompi st(1) ; ret
0x0000000000446b8f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000040eb6f : add byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400b0b : add byte ptr [rcx], al ; pop rbp ; ret
0x000000000047fddb : add byte ptr [rcx], al ; pop rbx ; ret
0x00000000004187fd : add byte ptr [rcx], al ; ret
0x000000000044d4bc : add byte ptr [rcx], bh ; ret
0x000000000047807c : add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000040ec84 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000042b45c : add byte ptr [rcx], dh ; rol bl, 0x83 ; ret 0x6620
0x00000000004759ea : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a21 ; ret
0x0000000000482ccf : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; call 0x490abef0
0x00000000004148bf : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148d9 ; ret
0x000000000044d4db : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x0000000000494750 : add byte ptr [rcx], dl ; cli ; call qword ptr [rax + 0x20fffa10]
0x0000000000432f7a : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000048cfc5 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048cfed : add byte ptr [rdi + 1], bh ; call rax
0x000000000048dd3c : add byte ptr [rdi + 2], dh ; sbb eax, eax ; ret
0x00000000004b17c7 : add byte ptr [rdi + rbx*2 - 0x6b6c0000], ch ; cli ; call qword ptr [rcx]
0x0000000000463425 : add byte ptr [rdi + rcx - 0x4a], al ; or al, 0x89 ; ret 0xc689
0x00000000004b0747 : add byte ptr [rdi + rcx*2], ch ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004b0f37 : add byte ptr [rdi + rdx*2], bl ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004b09af : add byte ptr [rdi - 5], dh ; hlt ; jmp qword ptr [rbx]
0x000000000040db96 : add byte ptr [rdi], cl ; add eax, 0x8944c689 ; ret 0xeab8
0x00000000004810f6 : add byte ptr [rdi], cl ; add eax, 0x940fc085 ; ret 0x3d
0x00000000004348f6 : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000448187 : add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x000000000043592f : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000043599f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000044823f : add byte ptr [rdi], cl ; mov dh, 0xc1 ; pop rbx ; ret
0x0000000000425d3f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000412d0f : add byte ptr [rdi], cl ; mov dh, 2 ; ret
0x000000000042c0bf : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bbff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000046258b : add byte ptr [rdi], cl ; mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x000000000042b48f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4bf : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4af : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000042b49f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x000000000046c8a4 : add byte ptr [rdi], cl ; mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x000000000047baa3 : add byte ptr [rdi], cl ; ret 0x8d48
0x000000000045895b : add byte ptr [rdi], cl ; ret 0xc083
0x0000000000421cbe : add byte ptr [rdi], cl ; test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000469a18 : add byte ptr [rdi], cl ; xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042071e : add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x00000000004768e3 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000044f924 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x000000000045588c : add byte ptr [rdx + 0x180], bh ; call 0x401af8
0x0000000000455849 : add byte ptr [rdx + 0x19f], bh ; call 0x401af8
0x0000000000455868 : add byte ptr [rdx + 0x1be], bh ; call 0x401af8
0x00000000004558b3 : add byte ptr [rdx + 0x22f], bh ; call 0x401af8
0x000000000045582a : add byte ptr [rdx + 0x309], bh ; call 0x401af8
0x0000000000443d7f : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x00000000004425cf : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000048d1c7 : add byte ptr [rdx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000047c1dc : add byte ptr [rdx + 0x63], cl ; add al, 0xa1 ; add rax, rcx ; jmp rax
0x000000000047cb04 : add byte ptr [rdx + 0x63], cl ; add al, 0xa7 ; add rax, rdi ; jmp rax
0x00000000004129a7 : add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000049eaf7 : add byte ptr [rdx + rcx + 0xabf0000], bh ; add byte ptr [rax], al ; ret 0xa
0x0000000000457220 : add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x000000000045721f : add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x00000000004af92b : add byte ptr [rdx + rdi*2], dh ; stc ; call rsp
0x0000000000494538 : add byte ptr [rdx + rdi*8], dl ; call qword ptr [rax + 0x20fffa13]
0x00000000004b3cd7 : add byte ptr [rdx - 0x38], dh ; hlt ; jmp qword ptr [rcx]
0x0000000000494000 : add byte ptr [rdx - 7], dl ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x00000000004197ff : add byte ptr [rdx], ch ; add bl, dh ; ret
0x00000000004129a3 : add byte ptr [rsi + 0x2a], ah ; add byte ptr [rax], al ; je 0x4129b4 ; ret
0x000000000042c634 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004634ca : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004634f3 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a457 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000419e8f : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000046624a : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0xace8
0x0000000000463491 : add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b3c4 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000041a456 : add byte ptr [rsi + 0xf], spl ; outsd dx, dword ptr [rsi] ; ret 0x4466
0x0000000000424541 : add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x00000000004af5fb : add byte ptr [rsi + rdx*4 - 8], dl ; jmp qword ptr [rsi]
0x0000000000455fe0 : add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000455fdf : add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x00000000004004cd : add byte ptr [rsi - 0x70], ah ; ret
0x0000000000424507 : add byte ptr [rsi - 9], dh ; ret 0
0x00000000004abcd7 : add byte ptr [rsp + rax - 0x6c7c0000], bh ; cmc ; call rsp
0x00000000004b14cf : add byte ptr [rsp + rbx*2 + 0x737c0000], dh ; cli ; jmp rax
0x00000000004b144f : add byte ptr [rsp + rbx*2], dh ; add byte ptr [rax], al ; jae 0x4b1459 ; call qword ptr [rdx]
0x0000000000452c9c : add byte ptr [rsp + rsi - 0xa], dh ; ret
0x00000000004b1ca7 : add byte ptr [rsp - 0x202c0000], cl ; cli ; call qword ptr [rsi]
0x00000000004accd3 : add byte ptr [rsp - 0xa], ch ; jmp rdx
0x00000000004af65d : add byte ptr ds:[rax], al ; and ch, dh ; clc ; call qword ptr [rax]
0x00000000004af635 : add byte ptr ds:[rax], al ; cwde ; fprem ; call qword ptr [rax]
0x0000000000449055 : add byte ptr es:[rax + 0x39], cl ; ret
0x000000000044d4a4 : add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x000000000044c814 : add byte ptr es:[rbx + rcx*4 + 0x1d], cl ; ret
0x000000000044bd37 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbbf040], al ; ret
0x00000000004156f2 : add ch, al ; pop rax ; ret
0x00000000004157f9 : add ch, al ; push rcx ; ret 0xffff
0x000000000041f878 : add ch, al ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a99dc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004a99dd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000004b3ffd : add ch, byte ptr [rbp + rcx + 7] ; ret
0x0000000000471e1a : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000422e4a : add ch, byte ptr [rdi - 1] ; dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x00000000004695f3 : add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004acc0f : add ch, byte ptr [rsi + rcx + 8] ; ret
0x0000000000448268 : add cl, al ; call 0xffffffff84070b80
0x0000000000495134 : add cl, bh ; cli ; jmp qword ptr [rax]
0x00000000004425f7 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000469dd2 : add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000045520e : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000469326 : add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x0000000000447f54 : add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x000000000041d0fb : add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd58 : add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x00000000004247dc : add cl, byte ptr [rax + 0xf] ; ret 0xc3f3
0x0000000000411794 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004116b3 : add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000450dac : add cl, byte ptr [rax + 1] ; fimul word ptr [rax + 1] ; ret
0x00000000004425f8 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x0000000000442565 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x0000000000485625 : add cl, byte ptr [rax - 0x77] ; je 0x485656 ; or byte ptr [rax + 1], cl ; ret
0x000000000047e774 : add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000418412 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000440dc0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000440e23 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000048411d : add cl, byte ptr [rax - 0x7d] ; ret 0xf01
0x0000000000435772 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000451eda : add cl, byte ptr [rcx - 0x7d] ; ret
0x0000000000494624 : add cl, byte ptr [rdi] ; cli ; call qword ptr [rdx + 0x22fffa0e]
0x0000000000446c7b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x0000000000413ed7 : add cl, ch ; ret
0x0000000000487e38 : add cl, ch ; ret 0xb781
0x000000000045edea : add cl, ch ; ret 0xfffa
0x0000000000454c88 : add cl, ch ; ret 0xfffd
0x0000000000400bc3 : add cl, cl ; ret
0x000000000046a0c8 : add dh, al ; test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000045e8f2 : add dh, al ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000045062c : add dh, bh ; cli ; dec dword ptr [rbx + rcx*4 + 0x25] ; int1 ; ret 0x26
0x00000000004a1ff7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000435923 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000040058e : add dh, bl ; ret
0x0000000000494398 : add dh, bl ; stc ; jmp rax
0x000000000042457e : add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004ad141 : add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000494b1c : add dh, byte ptr [rsi] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000048f584 : add dh, cl ; and al, byte ptr [rax] ; test eax, eax ; je 0x48f599 ; ret
0x000000000041ae88 : add dh, dh ; ret
0x00000000004510de : add dh, dh ; ret 0x4801
0x00000000004227bf : add dh, dh ; ret 0x4804
0x000000000047c688 : add dh, dh ; ret 0x7403
0x000000000044a64f : add dh, dh ; ret 0x7404
0x0000000000444ca7 : add dh, dh ; ret 0x7501
0x0000000000444cb4 : add dh, dh ; ret 0x7502
0x0000000000444cc1 : add dh, dh ; ret 0x7504
0x0000000000444c79 : add dh, dh ; ret 0x7510
0x0000000000444c86 : add dh, dh ; ret 0x7520
0x00000000004247ac : add dh, dh ; ret 0x7540
0x0000000000422ae3 : add dh, dh ; ret 0xf02
0x000000000045a378 : add dh, dh ; ret 0xf04
0x000000000041adb9 : add dh, dh ; ret 0xf08
0x0000000000466cb1 : add dh, dh ; ret 0xf40
0x0000000000466c97 : add dh, dh ; ret 0xf50
0x0000000000495154 : add dl, bh ; cli ; jmp qword ptr [rax]
0x0000000000495078 : add dl, dh ; cli ; call qword ptr [rax]
0x0000000000479a4d : add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000470087 : add dword ptr [r8 - 0x75], r9d ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x000000000046eea5 : add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x000000000044fcf3 : add dword ptr [r8 - 0x7d], r9d ; ret
0x0000000000443d81 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x00000000004658aa : add dword ptr [rax + 0x29], ecx ; fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x0000000000416d8d : add dword ptr [rax + 0x39], ecx ; ret
0x000000000047fc19 : add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000047fc2b : add dword ptr [rax + 0x39], ecx ; ret 0x674
0x000000000045b53f : add dword ptr [rax + 0x39], ecx ; ret 0x8841
0x0000000000464c8a : add dword ptr [rax + 0x39], ecx ; ret 0x8c0f
0x000000000045cf33 : add dword ptr [rax + 0x39], ecx ; ret 0xd774
0x000000000045cebd : add dword ptr [rax + 0x39], ecx ; ret 0xed75
0x0000000000457390 : add dword ptr [rax + 0x39], r9d ; ret
0x000000000048e053 : add dword ptr [rax + 0x7900ff7a], eax ; sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x0000000000481fe7 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040daca : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x0000000000479245 : add dword ptr [rax + 9], ecx ; ret 0x1475
0x000000000041debe : add dword ptr [rax + 9], ecx ; ret 0x8949
0x0000000000479217 : add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000461303 : add dword ptr [rax - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000402c1f : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x0000000000422e94 : add dword ptr [rax - 0x73], ecx ; clc ; cmovne rax, rcx ; ret
0x0000000000470088 : add dword ptr [rax - 0x75], ecx ; adc dword ptr [rax + 0x39], ecx ; ret 0x3873
0x00000000004425d1 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x0000000000419181 : add dword ptr [rax - 0x77], ecx ; adc eax, 0x2a06a7 ; ret
0x0000000000442562 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000047f363 : add dword ptr [rax - 0x77], ecx ; add eax, 0x23d045 ; ret
0x000000000045e1f0 : add dword ptr [rax - 0x77], ecx ; push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000405f3c : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000450257 : add dword ptr [rax - 0x77], ecx ; ret 0x2b48
0x0000000000414156 : add dword ptr [rax - 0x77], ecx ; ret 0x3c75
0x000000000047f362 : add dword ptr [rax - 0x77], r9d ; add eax, 0x23d045 ; ret
0x000000000040eea6 : add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045b9a9 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000046eea6 : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x0000000000402c69 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x0000000000450846 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b01
0x000000000046f4f7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8b04
0x000000000040e3cb : add dword ptr [rax - 0x7d], ecx ; ret 0xf10
0x0000000000469e39 : add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000045e935 : add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x0000000000449d15 : add dword ptr [rax - 1], edi ; jmp 0x449ce6
0x0000000000405970 : add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000045588f : add dword ptr [rax], eax ; add al, ch ; pop rcx ; ret 0xfffa
0x000000000045584c : add dword ptr [rax], eax ; add al, ch ; pushfq ; ret 0xfffa
0x0000000000456225 : add dword ptr [rax], eax ; add al, ch ; ret
0x0000000000410024 : add dword ptr [rax], eax ; add bl, dh ; ret
0x0000000000419a3a : add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x00000000004681e3 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe0
0x0000000000455208 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000478044 : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041eafd : add dword ptr [rax], eax ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x0000000000475b3d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000449529 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x16e9
0x000000000048e91a : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000456476 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000048ce65 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000044704e : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004719f9 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000041f140 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004684b8 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044b80c : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004560d2 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000042b037 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041e795 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x000000000042425e : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043ffaf : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042b065 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044e921 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a1ffa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a11aa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a0fd2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a0fca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a1762 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048cfc7 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x000000000048cf1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x000000000048dd39 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ja 0x48dd4a ; sbb eax, eax ; ret
0x000000000040f345 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x40f312
0x000000000045d0bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x45d08a
0x0000000000460f1d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000475e82 : add dword ptr [rax], eax ; add byte ptr [rax], al ; leave ; ret
0x000000000047e74d : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000048d5d0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004845d6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rdi], rsi ; ret
0x000000000046effd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000417293 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004868fe : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000047fde1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000468720 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000413188 : add dword ptr [rax], eax ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x860f
0x000000000048cdb6 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000044e152 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000409e2d : add dword ptr [rax], eax ; add byte ptr [rbx - 0x7bf0fe08], al ; ret
0x000000000049224d : add dword ptr [rax], eax ; add byte ptr [rcx - 0x75], cl ; pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x000000000047807a : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444ca5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000444cb2 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x0000000000444cbf : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000444c77 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000444c84 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000444c91 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000045a376 : add dword ptr [rax], eax ; add dh, dh ; ret 0xf04
0x00000000004247d8 : add dword ptr [rax], eax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000042399c : add dword ptr [rax], eax ; cmove rax, rdx ; ret
0x0000000000423903 : add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000040fc9c : add dword ptr [rax], eax ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000405da0 : add dword ptr [rax], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c781 : add dword ptr [rax], esp ; jmp rdx
0x0000000000400b0c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000448ec9 : add dword ptr [rbp - 0x57c03b0], ecx ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x000000000045e772 : add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x00000000004357e2 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000046c2a5 : add dword ptr [rbx - 0x4f743], eax ; jmp qword ptr [rax]
0x0000000000489139 : add dword ptr [rbx - 0x77], ecx ; push rsp ; ret 0x4808
0x000000000040d4be : add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000045c402 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000044aee3 : add dword ptr [rcx + 9], ecx ; ret
0x000000000040e10a : add dword ptr [rcx - 0x73], ecx ; or byte ptr [r8 + 0x39], cl ; ret
0x0000000000442601 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x000000000046ec9e : add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x0000000000459a48 : add dword ptr [rcx - 0x78], eax ; dec dword ptr [rax - 0x7d] ; ret
0x000000000044c575 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000467371 : add dword ptr [rcx - 0x7d], ecx ; ret 0x2504
0x000000000047898b : add dword ptr [rcx - 0x7d], ecx ; ret 0xf01
0x0000000000447de2 : add dword ptr [rdi + 0x15], esi ; jb 0x447df0 ; mov byte ptr [rdi], cl ; ret
0x00000000004940b4 : add dword ptr [rdi - 0x702e0007], ecx ; stc ; call rcx
0x00000000004b3fc5 : add dword ptr [rdi], 0x48 ; or eax, 0x1370303 ; ret
0x00000000004b3f5d : add dword ptr [rdi], 0x48 ; or eax, 0x34b0303 ; ret
0x00000000004b3f91 : add dword ptr [rdi], 0x48 ; or eax, 0x35b0303 ; ret
0x00000000004b3f6e : add dword ptr [rdi], 0xd ; add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x00000000004b3fa2 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3fd6 : add dword ptr [rdi], 0xd ; add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b0675 : add dword ptr [rdi], 3 ; ret 0xa01
0x0000000000456950 : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000041e6bb : add dword ptr [rdi], ecx ; ret 0x8948
0x0000000000448531 : add dword ptr [rdi], ecx ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x00000000004542c1 : add dword ptr [rdi], ecx ; xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x0000000000479a4e : add dword ptr [rdi], ecx ; xchg eax, ebp ; ret 0xc283
0x0000000000446ddc : add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043866d : add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x000000000048542b : add dword ptr [rdx + rax*2], 1 ; ret
0x000000000044d4d9 : add dword ptr [rdx], 0x39d23100 ; ret
0x00000000004b3154 : add dword ptr [rdx], 0x4a ; ret
0x00000000004b5be4 : add dword ptr [rdx], 0x55 ; ret
0x00000000004af0c0 : add dword ptr [rdx], 0x5a ; ret
0x00000000004b5ba0 : add dword ptr [rdx], 0x76 ; ret
0x00000000004187f8 : add dword ptr [rip + 0x2a3515], 1 ; ret
0x00000000004acc0b : add dword ptr [rsi + rcx + 0x30], ecx ; add ch, byte ptr [rsi + rcx + 8] ; ret
0x00000000004425e2 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000044d4d8 : add dword ptr fs:[rdx], 0x39d23100 ; ret
0x000000000048a0cd : add eax, 0x1489066 ; ret 0xb70f
0x000000000045ad30 : add eax, 0x18c48348 ; ret
0x00000000004248f9 : add eax, 0x1bb12 ; cmove rax, rdx ; ret
0x0000000000423999 : add eax, 0x1d0a2 ; cmove rax, rdx ; ret
0x000000000044970a : add eax, 0x1f0fc3f3 ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000042b92a : add eax, 0x20 ; add rax, rdi ; vzeroupper ; ret
0x00000000004244b0 : add eax, 0x221ab ; cmove rax, rdx ; ret
0x0000000000424839 : add eax, 0x22732 ; cmovne rax, rdx ; ret
0x00000000004246f9 : add eax, 0x22862 ; cmovne rax, rdx ; ret
0x0000000000424599 : add eax, 0x229d2 ; cmovne rax, rdx ; ret
0x00000000004248a0 : add eax, 0x22a7b ; cmovne rax, rdx ; ret
0x0000000000424760 : add eax, 0x22bab ; cmovne rax, rdx ; ret
0x000000000048f6a1 : add eax, 0x22ccde ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000048f591 : add eax, 0x22cdee ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000424600 : add eax, 0x22d1b ; cmovne rax, rdx ; ret
0x000000000042487f : add eax, 0x22ecc ; cmovne rax, rdx ; ret
0x000000000042473f : add eax, 0x22ffc ; cmovne rax, rdx ; ret
0x00000000004245df : add eax, 0x2316c ; cmovne rax, rdx ; ret
0x0000000000423920 : add eax, 0x231db ; cmovne rax, rdx ; ret
0x0000000000487800 : add eax, 0x235052 ; jne 0x487836 ; ret
0x000000000042466b : add eax, 0x23660 ; cmovne rax, rdx ; ret
0x00000000004855d1 : add eax, 0x2372ea ; ret
0x0000000000484a59 : add eax, 0x23760a ; ret
0x0000000000484a3e : add eax, 0x237625 ; add rsp, 8 ; ret
0x000000000042464e : add eax, 0x237dd ; cmovne rax, rdx ; ret
0x000000000042469f : add eax, 0x2390c ; cmovne rax, rdx ; ret
0x000000000047f4cc : add eax, 0x23ced7 ; mov qword ptr [rsi], rax ; ret
0x000000000047f45b : add eax, 0x23cf50 ; ret
0x000000000047f422 : add eax, 0x23cf89 ; add rsp, 8 ; ret
0x000000000047f366 : add eax, 0x23d045 ; ret
0x000000000046ca07 : add eax, 0x24a814 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c9b4 : add eax, 0x24a867 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c487 : add eax, 0x24a894 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c826 : add eax, 0x24a9f5 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c7e1 : add eax, 0x24aa3a ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c79c : add eax, 0x24aa7f ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046c74d : add eax, 0x24aace ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e78 : add eax, 0x2557a3 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000461227 : add eax, 0x2558f4 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004611d9 : add eax, 0x255942 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046112a : add eax, 0x2559f1 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x00000000004610ce : add eax, 0x255a4d ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460e2e : add eax, 0x255ced ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460de0 : add eax, 0x255d3b ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000460987 : add eax, 0x255e94 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000457a92 : add eax, 0x2643e1 ; ret
0x000000000044d492 : add eax, 0x26ce69 ; ret
0x000000000044f592 : add eax, 0x26d391 ; ret
0x00000000004529ef : add eax, 0x29480000 ; ret 0x349
0x0000000000424819 : add eax, 0x2975d2 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x00000000004246d9 : add eax, 0x297712 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x0000000000424579 : add eax, 0x297872 ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8d7 : add eax, 0x299f84 ; ret
0x000000000041f8e1 : add eax, 0x29c486 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004197fd : add eax, 0x2a005e ; ret
0x00000000004192f8 : add eax, 0x2a04f3 ; ret
0x000000000041930f : add eax, 0x2a04f8 ; ret
0x00000000004192d0 : add eax, 0x2a0513 ; ret
0x00000000004192b0 : add eax, 0x2a052b ; ret
0x00000000004191a6 : add eax, 0x2a069d ; ret
0x0000000000419196 : add eax, 0x2a06a5 ; ret
0x0000000000419146 : add eax, 0x2a06ad ; ret
0x0000000000419136 : add eax, 0x2a06c5 ; ret
0x0000000000418762 : add eax, 0x2a09b9 ; ret
0x00000000004197b1 : add eax, 0x2a25b6 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000419325 : add eax, 0x2a2a6a ; ret
0x000000000041885d : add eax, 0x2a34b2 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b2214 : add eax, 0x3400e4e ; ret
0x000000000048500e : add eax, 0x38c48348 ; ret
0x000000000041d04e : add eax, 0x39480000 ; ret 0xf275
0x000000000042b94a : add eax, 0x40 ; add rax, rdi ; vzeroupper ; ret
0x0000000000494825 : add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000443e18 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x0000000000442648 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000444316 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004947a5 : add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000443e99 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000442689 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000049495d : add eax, 0x560fffa ; cli ; call rax
0x00000000004948dd : add eax, 0x574fffa ; cli ; jmp rsp
0x00000000004851b0 : add eax, 0x5b ; cmovne rax, rdx ; ret
0x00000000004a2b9d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x00000000004719da : add eax, 0x5c415d5b ; ret
0x000000000042b96a : add eax, 0x60 ; add rax, rdi ; vzeroupper ; ret
0x00000000004248c9 : add eax, 0x6c52 ; cmove rax, rdx ; ret
0x00000000004244d9 : add eax, 0x6d12 ; cmove rax, rdx ; ret
0x000000000042453d : add eax, 0x79ee ; je 0x424512 ; ret
0x000000000042ac77 : add eax, 0x83480000 ; ret 0x4910
0x000000000043e5a1 : add eax, 0x83480000 ; ret 0xe910
0x000000000042aca5 : add eax, 0x83480000 ; ret 0xeb10
0x000000000045f0f5 : add eax, 0x83ffffef ; ret
0x0000000000443e1b : add eax, 0x8428d48 ; ret
0x000000000040db98 : add eax, 0x8944c689 ; ret 0xeab8
0x0000000000458f13 : add eax, 0x89480000 ; ret 0x2948
0x00000000004918f0 : add eax, 0x89490000 ; ret 0x8349
0x00000000004810f8 : add eax, 0x940fc085 ; ret 0x3d
0x00000000004abd65 : add eax, 0x99a80000 ; cmc ; call rax
0x00000000004728e9 : add eax, 0x9f2 ; cmove rax, rdx ; ret
0x0000000000473cf9 : add eax, 0xa22 ; cmove rax, rdx ; ret
0x000000000042d36a : add eax, 0xc0310000 ; ret
0x0000000000443e9d : add eax, 0xc428d48 ; ret
0x000000000044497d : add eax, 0xc478d48 ; ret
0x000000000040fc9b : add eax, 0xe8890001 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004554d2 : add eax, 0xe9000000 ; ret
0x00000000004728b9 : add eax, 0xee2 ; cmove rax, rdx ; ret
0x000000000048d29a : add eax, 0xf7148948 ; ret
0x00000000004357d3 : add eax, 0xf7f0ff3 ; ret
0x000000000048f5aa : add eax, 0xffff50e9 ; push rbx ; ret
0x000000000044e905 : add eax, 1 ; push rax ; call rbx
0x0000000000474921 : add eax, 1 ; ret
0x0000000000474918 : add eax, 2 ; ret
0x0000000000474931 : add eax, 3 ; ret
0x000000000045ac49 : add eax, dword ptr [0] ; ret
0x000000000047b748 : add eax, dword ptr [rax] ; add bl, dh ; ret
0x00000000004898e1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x74], ah ; adc dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489f3c : add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000041c4e8 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rax ; adc dh, dh ; ret 0xf0f
0x000000000041ae36 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x73], cl ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000400edb : add eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x000000000041afba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000041fcba : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000041fe80 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x000000000042ae57 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e741 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042ae85 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000044f4e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a79c : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbp ; pop r12 ; jmp rax
0x0000000000474973 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000044852c : add eax, dword ptr [rax] ; add byte ptr [rbx - 0x50f0fe40], al ; ret 0xf8e9
0x0000000000489ab0 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0x348b4cd8], cl ; ret 0xf41
0x0000000000461ded : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xf], al ; ret 0xc839
0x000000000044bea5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000047c686 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7403
0x000000000041adb7 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x000000000046eb84 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000046f2cb : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000046f339 : add eax, dword ptr [rax] ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000448210 : add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000047d34c : add eax, dword ptr [rbp - 0xb8] ; call rax
0x00000000004b3f71 : add eax, dword ptr [rbx] ; or al, byte ptr [rcx] ; ret
0x0000000000475afa : add eax, dword ptr [rcx + rdx] ; ret
0x00000000004ad3e2 : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000486d73 : add eax, dword ptr [rdx + 8] ; call rax
0x00000000004b3fa5 : add eax, dword ptr [rdx] ; cld ; ret
0x00000000004b3fd9 : add eax, dword ptr [rdx] ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b1f2a : add eax, dword ptr [rsi + 0xe] ; and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000047c3c6 : add eax, dword ptr [rsi] ; call rax
0x000000000048aed6 : add eax, eax ; jmp rax
0x00000000004021b4 : add eax, ebp ; jmp rax
0x000000000047c6e7 : add eax, ebx ; call rax
0x000000000044d59c : add eax, ebx ; jmp rax
0x00000000004408c8 : add eax, ecx ; add rax, rdi ; vzeroupper ; ret
0x000000000046eb8b : add eax, ecx ; jmp rax
0x000000000042b279 : add eax, ecx ; ret
0x0000000000440c2d : add eax, ecx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7a6 : add eax, ecx ; vzeroupper ; ret
0x000000000042b276 : add eax, edi ; add rax, rcx ; ret
0x000000000042b7a3 : add eax, edi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f1bb : add eax, edi ; jmp rax
0x000000000046f48f : add eax, edi ; mov rdx, r8 ; jmp 0x46f463
0x000000000042b4a4 : add eax, edi ; ret
0x0000000000485360 : add eax, edi ; sub rax, r8 ; ret
0x0000000000440ce5 : add eax, edi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8a : add eax, edi ; sub rax, rsi ; ret
0x000000000042b91a : add eax, edi ; vzeroupper ; ret
0x0000000000401f4a : add eax, edx ; jmp rax
0x0000000000440bd6 : add eax, edx ; sub rax, rdi ; ret
0x000000000047461b : add eax, edx ; sub rax, rdi ; shr rax, 2 ; ret
0x00000000004481bc : add eax, esi ; jmp rax
0x00000000004184bd : add eax, esi ; mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x000000000048c14d : add eax, esp ; jmp rax
0x0000000000463108 : add ebp, 0x30 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004240c5 : add ebp, eax ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047c3c2 : add ebx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000048a4fa : add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x0000000000488730 : add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x0000000000416bd1 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b3f96 : add ebx, dword ptr [rbx + 3] ; ret
0x000000000044e16f : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x44e1d8 ; pop r12 ; ret
0x0000000000482821 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042c08b : add ebx, eax ; nop dword ptr [rax] ; ret
0x0000000000435993 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000447dc7 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x447dbc ; ret
0x0000000000442635 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x00000000004573cd : add ecx, dword ptr [rax + 0x39] ; ret
0x000000000040e06e : add ecx, dword ptr [rax + 1] ; fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000045122a : add ecx, dword ptr [rax - 0x77] ; and al, 0x50 ; call 0x44d508
0x0000000000442639 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000047e817 : add ecx, dword ptr [rax - 0x77] ; mov rax, rcx ; ret
0x000000000044fde3 : add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000048bc0f : add ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ea61 : add ecx, dword ptr [rbp + rcx*4 + 0x64] ; ret
0x0000000000480dda : add ecx, dword ptr [rbp - 0x77] ; dec byte ptr [rax - 0x7d] ; ret
0x00000000004832f0 : add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x0000000000435702 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004b3f62 : add ecx, dword ptr [rbx + 3] ; ret
0x00000000004442b4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000442636 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x0000000000448ecf : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f2d : add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x00000000004ac079 : add ecx, dword ptr [rsi + rcx - 0x50] ; add al, byte ptr [rdx] ; ret 0xb00e
0x0000000000465f39 : add ecx, eax ; mov eax, r9d ; ret
0x000000000042d99b : add ecx, ebx ; jmp r9
0x000000000042c332 : add ecx, ebx ; jmp rcx
0x00000000004481e4 : add ecx, esi ; jmp rcx
0x000000000048e15e : add edi, dword ptr [rax + 4] ; jne 0x48e189 ; ret
0x000000000045a424 : add edi, ebx ; jmp rdi
0x000000000042d998 : add edi, edx ; add r9, r11 ; jmp r9
0x000000000049496d : add edi, edx ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x00000000004947f1 : add edi, edx ; jmp qword ptr [rdx]
0x0000000000494971 : add edi, edx ; jmp rax
0x000000000040d54c : add edi, edx ; jmp rdi
0x00000000004741ab : add edi, esp ; call 0x400494
0x0000000000487224 : add edx, eax ; jmp 0x487232
0x0000000000483552 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000040d263 : add edx, edi ; jmp rdx
0x0000000000468ed8 : add edx, esp ; call qword ptr [r10 + rax*8]
0x00000000004587d6 : add esi, dword ptr [rdi + rax - 0xd] ; ret
0x0000000000459f25 : add esi, eax ; jmp rsi
0x00000000004358b3 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000446fe5 : add esi, ebx ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004496bc : add esi, ebx ; ret
0x000000000041ede0 : add esi, ebx ; stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004482ee : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x000000000042d995 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000416701 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000410901 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449cef : add esp, 0x10 ; pop rbx ; ret
0x0000000000412005 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446b8d : add esp, 0x100 ; sub rax, rdx ; ret
0x00000000004826f8 : add esp, 0x110 ; pop rbx ; ret
0x000000000040dbde : add esp, 0x118 ; ret
0x000000000045af7a : add esp, 0x148 ; ret
0x000000000041a219 : add esp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4cb : add esp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fae6 : add esp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x000000000044d2ba : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000411995 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ad32 : add esp, 0x18 ; ret
0x0000000000421940 : add esp, 0x20 ; call 0x40fe89
0x000000000041720d : add esp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416ded : add esp, 0x20 ; pop rbx ; jmp rax
0x0000000000417246 : add esp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482779 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b5f : add esp, 0x20 ; pop rbx ; ret
0x0000000000448d12 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044968a : add esp, 0x28 ; ret
0x000000000044f678 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048494f : add esp, 0x30 ; pop rbx ; ret
0x000000000048acc6 : add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000040da94 : add esp, 0x38 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041620e : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759b1 : add esp, 0x38 ; ret
0x000000000048855c : add esp, 0x40 ; pop rbx ; ret
0x0000000000481c8c : add esp, 0x48 ; jmp qword ptr [rax]
0x0000000000449362 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000488643 : add esp, 0x50 ; pop rbx ; ret
0x0000000000481c1a : add esp, 0x58 ; jmp qword ptr [rax]
0x00000000004498ba : add esp, 0x58 ; ret
0x00000000004497ac : add esp, 0x68 ; ret
0x0000000000473e14 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b3f : add esp, 0x78 ; ret
0x000000000046889e : add esp, 0x80 ; mov eax, edx ; pop rbx ; ret
0x0000000000475493 : add esp, 0x80 ; pop rbx ; ret
0x0000000000415ad8 : add esp, 0x80 ; ret
0x000000000044bc8d : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d92 : add esp, 0x88 ; pop rbx ; ret
0x000000000040150f : add esp, 0x98 ; ret
0x00000000004755b3 : add esp, 0xa8 ; pop rbx ; pop rbp ; ret
0x0000000000457be6 : add esp, 0xb8 ; pop rbx ; pop r12 ; ret
0x000000000040fa47 : add esp, 0xd0 ; pop rbx ; ret
0x000000000040fbd6 : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f755 : add esp, 0xd8 ; ret
0x0000000000411d0f : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fceb : add esp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff6e : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2d0 : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a50c : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167b9 : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488499 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x00000000004137c4 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000401ba3 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400413 : add esp, 8 ; ret
0x0000000000423969 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000435992 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435922 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358b2 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004741aa : add r15, r12 ; call 0x400495
0x000000000042ae84 : add r8, qword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042d99a : add r9, r11 ; jmp r9
0x00000000004573ae : add r9b, byte ptr [rax + 0x39] ; ret
0x00000000004573cc : add r9d, dword ptr [rax + 0x39] ; ret
0x0000000000465f38 : add r9d, eax ; mov eax, r9d ; ret
0x00000000004abd64 : add rax, -0x66580000 ; cmc ; call rax
0x0000000000474920 : add rax, 1 ; ret
0x0000000000474917 : add rax, 2 ; ret
0x0000000000474930 : add rax, 3 ; ret
0x000000000045ac48 : add rax, qword ptr [0] ; ret
0x000000000047c3c5 : add rax, qword ptr [r14] ; call rax
0x000000000047d34b : add rax, qword ptr [rbp - 0xb8] ; call rax
0x0000000000486d72 : add rax, qword ptr [rdx + 8] ; call rax
0x000000000045ac47 : add rax, qword ptr fs:[0] ; ret
0x000000000047c6e6 : add rax, r11 ; call rax
0x000000000048c14c : add rax, r12 ; jmp rax
0x00000000004021b3 : add rax, r13 ; jmp rax
0x000000000048ca4d : add rax, r14 ; jmp rax
0x000000000048b0fb : add rax, r15 ; jmp rax
0x000000000048aed5 : add rax, r8 ; jmp rax
0x000000000048c685 : add rax, r9 ; jmp rax
0x000000000044d613 : add rax, rbp ; jmp rax
0x000000000044d59b : add rax, rbx ; jmp rax
0x00000000004408c7 : add rax, rcx ; add rax, rdi ; vzeroupper ; ret
0x000000000046eb8a : add rax, rcx ; jmp rax
0x000000000042b278 : add rax, rcx ; ret
0x0000000000440c2c : add rax, rcx ; sub rax, rdx ; vzeroupper ; ret
0x000000000042b7a5 : add rax, rcx ; vzeroupper ; ret
0x000000000042b275 : add rax, rdi ; add rax, rcx ; ret
0x000000000042b7a2 : add rax, rdi ; add rax, rcx ; vzeroupper ; ret
0x000000000046f1ba : add rax, rdi ; jmp rax
0x000000000042b4a3 : add rax, rdi ; ret
0x000000000048535f : add rax, rdi ; sub rax, r8 ; ret
0x0000000000440ce4 : add rax, rdi ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c89 : add rax, rdi ; sub rax, rsi ; ret
0x000000000042b919 : add rax, rdi ; vzeroupper ; ret
0x0000000000401f49 : add rax, rdx ; jmp rax
0x0000000000440bd5 : add rax, rdx ; sub rax, rdi ; ret
0x00000000004481bb : add rax, rsi ; jmp rax
0x000000000047c3c1 : add rbx, 0x18 ; add rax, qword ptr [r14] ; call rax
0x000000000042c331 : add rcx, r11 ; jmp rcx
0x00000000004481e3 : add rcx, rsi ; jmp rcx
0x000000000040d54b : add rdi, r10 ; jmp rdi
0x000000000045a423 : add rdi, r11 ; jmp rdi
0x000000000042d997 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000468ed7 : add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000483551 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000487223 : add rdx, rax ; jmp 0x487233
0x000000000040d262 : add rdx, rdi ; jmp rdx
0x0000000000459f24 : add rsi, r8 ; jmp rsi
0x0000000000416700 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000410900 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449cee : add rsp, 0x10 ; pop rbx ; ret
0x00000000004826f7 : add rsp, 0x110 ; pop rbx ; ret
0x000000000040dbdd : add rsp, 0x118 ; ret
0x000000000045af79 : add rsp, 0x148 ; ret
0x000000000041a218 : add rsp, 0x18 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x000000000041f4ca : add rsp, 0x18 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x000000000041fae5 : add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000411994 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000045ad31 : add rsp, 0x18 ; ret
0x000000000041720c : add rsp, 0x20 ; mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000416dec : add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000417245 : add rsp, 0x20 ; pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000482778 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416b5e : add rsp, 0x20 ; pop rbx ; ret
0x0000000000449689 : add rsp, 0x28 ; ret
0x000000000044f677 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048494e : add rsp, 0x30 ; pop rbx ; ret
0x000000000048acc5 : add rsp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000041620d : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000004759b0 : add rsp, 0x38 ; ret
0x000000000048855b : add rsp, 0x40 ; pop rbx ; ret
0x0000000000481c8b : add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000488642 : add rsp, 0x50 ; pop rbx ; ret
0x0000000000481c19 : add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004498b9 : add rsp, 0x58 ; ret
0x00000000004497ab : add rsp, 0x68 ; ret
0x0000000000473e13 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000449b3e : add rsp, 0x78 ; ret
0x0000000000475492 : add rsp, 0x80 ; pop rbx ; ret
0x0000000000415ad7 : add rsp, 0x80 ; ret
0x000000000044bc8c : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000400d91 : add rsp, 0x88 ; pop rbx ; ret
0x000000000040150e : add rsp, 0x98 ; ret
0x00000000004755b2 : add rsp, 0xa8 ; pop rbx ; pop rbp ; ret
0x000000000040fa46 : add rsp, 0xd0 ; pop rbx ; ret
0x000000000040fbd5 : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x000000000040f754 : add rsp, 0xd8 ; ret
0x0000000000411d0e : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000047fcea : add rsp, 8 ; mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040ff6d : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000044b2cf : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x000000000044a50b : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004167b8 : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000488498 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000401ba2 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000400412 : add rsp, 8 ; ret
0x0000000000423968 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004247d7 : add word ptr [rax], ax ; and ch, 2 ; cmovne rax, rdx ; ret
0x000000000048542a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000494394 : and ah, bl ; stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x000000000046b861 : and al, 0 ; jmp rax
0x000000000046c48a : and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d338 : and al, 0x10 ; add rsp, 0x28 ; ret
0x000000000048eef0 : and al, 0x10 ; call r14
0x000000000044a8f8 : and al, 0x10 ; call rax
0x00000000004826bb : and al, 0x10 ; call rdx
0x000000000041ca9c : and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000472112 : and al, 0x10 ; mov rdi, r12 ; call rbx
0x000000000048ecd8 : and al, 0x10 ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000401145 : and al, 0x18 ; call rax
0x000000000044e888 : and al, 0x18 ; mov r9, r13 ; call rbx
0x000000000047202d : and al, 0x18 ; mov rdi, r12 ; call rbx
0x000000000047432f : and al, 0x18 ; mov rdi, rbp ; mov r9, r14 ; call rbx
0x00000000004826b6 : and al, 0x18 ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f67 : and al, 0x20 ; call r15
0x000000000045319e : and al, 0x20 ; call rax
0x0000000000473ff0 : and al, 0x20 ; call rbx
0x0000000000450e32 : and al, 0x20 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000004a7b24 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000041fae3 : and al, 0x28 ; add rsp, 0x18 ; pop rbx ; pop rbp ; jmp rax
0x0000000000450f62 : and al, 0x28 ; mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000422993 : and al, 0x28 ; mov rdi, rbp ; call rax
0x0000000000451843 : and al, 0x30 ; call r14
0x0000000000451a1b : and al, 0x30 ; call rbx
0x00000000004741de : and al, 0x30 ; mov rdi, rbp ; call rbx
0x0000000000452c9a : and al, 0x38 ; add byte ptr [rsp + rsi - 0xa], dh ; ret
0x0000000000451d05 : and al, 0x38 ; call r12
0x000000000045233d : and al, 0x38 ; call r14
0x0000000000455301 : and al, 0x38 ; call r15
0x000000000045154b : and al, 0x38 ; call rbx
0x0000000000473ec8 : and al, 0x38 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000451257 : and al, 0x38 ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045183e : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451a16 : and al, 0x38 ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x00000000004673ac : and al, 0x40 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000045721e : and al, 0x40 ; add byte ptr [rdx + rdi*2 - 0xa], dh ; ret
0x0000000000455fde : and al, 0x40 ; add byte ptr [rsi + rsi*2 - 0xa], dh ; ret
0x0000000000481c89 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c17 : and al, 0x40 ; add rsp, 0x58 ; jmp qword ptr [rax]
0x000000000045377c : and al, 0x40 ; call r15
0x0000000000455f28 : and al, 0x40 ; call rbx
0x0000000000453199 : and al, 0x40 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x0000000000451d00 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452338 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004552fc : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451546 : and al, 0x40 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000486d71 : and al, 0x48 ; add eax, dword ptr [rdx + 8] ; call rax
0x0000000000416728 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; jmp rax
0x000000000048ada8 : and al, 0x48 ; add esp, 0x38 ; pop rbx ; pop r14 ; ret
0x000000000048aaac : and al, 0x48 ; add esp, 0x38 ; ret
0x0000000000413404 : and al, 0x48 ; mov edi, ebx ; call rax
0x000000000048ddde : and al, 0x48 ; mov edx, dword ptr [rbp] ; call r12
0x0000000000453777 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f23 : and al, 0x48 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x000000000048dd8f : and al, 0x4c ; lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x0000000000489cf7 : and al, 0x4c ; mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489ca5 : and al, 0x4c ; mov esi, esp ; mov edi, ebp ; call rax
0x000000000045122e : and al, 0x50 ; call 0x44d504
0x000000000045122d : and al, 0x50 ; call 0x44d505
0x0000000000404941 : and al, 0x60 ; jmp 0x4043bc
0x00000000004203ab : and al, 0x68 ; call rax
0x0000000000403f97 : and al, 0x68 ; je 0x403fe0 ; xor edi, edi ; call 0x4201b8
0x00000000004b2140 : and al, 0x69 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x0000000000463a7e : and al, 0x83 ; ret
0x00000000004578dd : and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000419293 : and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x00000000004047dc : and al, 0x8c ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x000000000045175e : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049213b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049189b : and al, 0x98 ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004521eb : and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000451be0 : and al, 0xa8 ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x00000000004579b3 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; leave ; call r15
0x000000000048cf1b : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000449cec : and al, 0xc ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449c6f : and al, 0xc ; jne 0x449c40 ; neg eax ; jmp 0x449c40
0x0000000000449c6e : and al, 0xc ; jne 0x449c41 ; neg eax ; jmp 0x449c41
0x0000000000416712 : and al, 0xc ; mov qword ptr [rsp], rdi ; call 0x4129a8
0x0000000000401140 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000479dc0 : and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416cec : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000048aea8 : and al, 0xd8 ; ret
0x0000000000463751 : and al, 0xe8 ; test eax, 0x8900020e ; ret
0x0000000000418303 : and al, 0xe9 ; ret 0xfffd
0x00000000004525fe : and al, 0xf6 ; ret
0x0000000000493f79 : and al, 0xf9 ; jmp qword ptr [rax]
0x0000000000416e1d : and al, 8 ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000041d0b6 : and al, 8 ; call 0x419354
0x000000000040df0f : and al, 8 ; call rax
0x000000000041caa1 : and al, 8 ; call rcx
0x000000000048e9dc : and al, 8 ; jmp 0x48e9f6
0x000000000044a8f3 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000411330 : and al, 8 ; mov rdi, r15 ; call rax
0x000000000048f594 : and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000004901f3 : and al, byte ptr [rax] ; jne 0x4901dd ; pop rbx ; ret
0x000000000048f586 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f597 ; ret
0x000000000048f696 : and al, byte ptr [rax] ; test eax, eax ; je 0x48f6a7 ; ret
0x0000000000440e3a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x00000000004695f1 : and bh, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x000000000045319f : and bh, bh ; rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000493f75 : and bh, cl ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x00000000004115f9 : and byte ptr [r8 + 1], r9b ; ret
0x000000000041155e : and byte ptr [r9 - 0x77], r9b ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x00000000004407da : and byte ptr [rax + 0x3a], al ; xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x000000000042b92c : and byte ptr [rax + 1], cl ; clc ; vzeroupper ; ret
0x00000000004115fa : and byte ptr [rax + 1], cl ; ret
0x0000000000400ee1 : and byte ptr [rax + 1], cl ; ret 0xb70f
0x00000000004664ae : and byte ptr [rax + 9], cl ; ret 0xff83
0x0000000000450e33 : and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000477328 : and byte ptr [rax - 0x75], cl ; sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x000000000045a624 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x45a638 ; call rax
0x000000000044fb76 : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048d416 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000467ee4 : and byte ptr [rax - 0x7d], cl ; ret 0xe920
0x0000000000412f22 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000048d3e9 : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004482ca : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004923fc : and byte ptr [rbp - 0x77], cl ; ret
0x000000000048277b : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468143 : and byte ptr [rbx + rcx*4 + 0x40], cl ; sub cl, ch ; ret 0xffe8
0x0000000000494244 : and byte ptr [rbx - 0x42df0007], bh ; stc ; jmp qword ptr [rax]
0x000000000045dde0 : and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004941b4 : and byte ptr [rcx + rdi*8 - 0x649ff01], dh ; jmp rax
0x000000000041720f : and byte ptr [rcx - 0x2dcea42f], cl ; jmp rax
0x000000000041155f : and byte ptr [rcx - 0x77], cl ; xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000047f604 : and byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x00000000004a4e48 : and byte ptr [rdi - 3], dh ; jmp qword ptr [rbx]
0x0000000000447231 : and byte ptr [rdi], cl ; adc dword ptr [rdi + 0x30], edi ; movups xmmword ptr [r11], xmm8 ; ret
0x000000000040fbfb : and byte ptr [rdi], cl ; test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x0000000000444c80 : and byte ptr [rdi], cl ; test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004942c4 : and byte ptr [rdx - 0x43df0007], bh ; stc ; jmp qword ptr [rax]
0x00000000004ad3e5 : and byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x18 ; ret
0x000000000042c3ca : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b1f2d : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x000000000049403c : and byte ptr [rsi - 7], ah ; call qword ptr [rax]
0x0000000000474912 : and ch, 0xf ; je 0x474939 ; add rax, 2 ; ret
0x0000000000448288 : and ch, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x00000000004247da : and ch, 2 ; cmovne rax, rdx ; ret
0x00000000004af660 : and ch, dh ; clc ; call qword ptr [rax]
0x00000000004748fd : and cl, 0xf ; je 0x474925 ; ret
0x000000000044c871 : and cl, byte ptr [rax + 0x63] ; add al, 0x82 ; add rax, rdx ; jmp rax
0x000000000047f404 : and cl, byte ptr [rax - 0x77] ; ret 0x1f0f
0x0000000000423f53 : and cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x00000000004947f4 : and cl, byte ptr [rbx] ; cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000042bc0d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000473cfa : and cl, byte ptr [rdx] ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000044c0e9 : and dh, al ; sub byte ptr [rcx], al ; ret
0x000000000049449c : and dh, bl ; stc ; call qword ptr [rax]
0x00000000004695f0 : and dil, al ; add ch, byte ptr [rip - 0x7d000000] ; ret
0x00000000004943d0 : and dl, bl ; stc ; jmp rax
0x000000000046329c : and dl, dl ; stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000469168 : and dword ptr [r8], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000469169 : and dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x00000000004a9642 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000417a17 : and dword ptr [rbx], 0xffffffef ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a6f : and dword ptr [rbx], 0xffffffef ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041889e : and dword ptr [rdi], ecx ; mov dh, 0 ; ret
0x00000000004244b2 : and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a66f9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004a9641 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000045ac4b : and eax, 0 ; ret
0x000000000048437c : and eax, 0x28 ; jne 0x4843c6 ; leave ; ret
0x00000000004197b3 : and eax, 0x2a ; add byte ptr [rax], al ; ret
0x00000000004004c9 : and eax, 0x2b8bfa ; nop ; ret
0x000000000040e978 : and eax, 0x30 ; call rax
0x000000000040e8b2 : and eax, 0x30 ; call rdx
0x000000000040e99e : and eax, 0x30 ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044820d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000448258 : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000484a3f : and eax, 0x48002376 ; add esp, 8 ; ret
0x000000000046098a : and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000448303 : and eax, 0x7ff80000 ; div ecx ; mov eax, eax ; ret
0x00000000004482a7 : and eax, 0x7ff80000 ; ret
0x000000000044bf27 : and eax, 0xc ; cmp eax, 4 ; je 0x44bf38 ; ret
0x000000000045abec : and eax, 0xf3087400 ; ret
0x000000000048281c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004adbd5 : and eax, dword ptr [rax] ; add byte ptr [rax], ch ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004878b8 : and eax, dword ptr [rax] ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x000000000047f425 : and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000485428 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000487803 : and eax, dword ptr [rax] ; jne 0x487833 ; ret
0x0000000000484e7a : and eax, dword ptr [rax] ; mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484a55 : and eax, dword ptr [rax] ; mov qword ptr [rip + 0x23760a], rax ; ret
0x000000000047f4cf : and eax, dword ptr [rax] ; mov qword ptr [rsi], rax ; ret
0x000000000047f369 : and eax, dword ptr [rax] ; ret
0x000000000047bbd2 : and eax, dword ptr [rax] ; xor eax, eax ; add rsp, 8 ; ret
0x00000000004a4e00 : and eax, dword ptr [rdi + 0x7458fffd] ; std ; call qword ptr [rax]
0x00000000004a4e24 : and eax, dword ptr [rdi + 0x7650fffd] ; std ; jmp qword ptr [rbx]
0x00000000004a4e2c : and eax, dword ptr [rdi - 0x78dc0003] ; std ; jmp qword ptr [rbx]
0x00000000004529ee : and eax, dword ptr [rip + 0x29480000] ; ret 0x349
0x0000000000417a18 : and ebp, edi ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a70 : and ebp, edi ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044bec2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x44bed5 ; ret
0x000000000042d945 : and ecx, 0xff ; sub eax, ecx ; ret
0x000000000042d078 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000044b61a : and ecx, dword ptr [rax - 0x77] ; ret 0xabe
0x0000000000403b95 : and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000493f71 : and ecx, edi ; jmp rax
0x00000000004b3261 : and edi, esp ; jmp qword ptr [rcx]
0x0000000000487e36 : and esp, dword ptr [rbx] ; add cl, ch ; ret 0xb781
0x000000000044c0e8 : and sil, al ; sub byte ptr [rcx], al ; ret
0x0000000000474457 : bnd je 0x474466 ; test edx, edx ; jne 0x474458 ; ret
0x00000000004001c5 : bnd jno 0x400215 ; adc dword ptr [rbx], ebx ; stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x000000000042b57a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000042b4a0 : bsf eax, eax ; add rax, rdi ; ret
0x000000000042b991 : bsf eax, eax ; add rax, rdi ; vzeroupper ; ret
0x000000000042b4b0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b4c0 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b490 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000042b3ef : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000440453 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440a76 : bsf eax, edx ; ret
0x0000000000474507 : bsf eax, edx ; shr rax, 2 ; ret
0x0000000000440bd2 : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x0000000000440570 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440ac2 : bsf rax, rdx ; ret
0x0000000000474506 : bsf rax, rdx ; shr rax, 2 ; ret
0x0000000000473337 : bsr eax, eax ; add rax, rdi ; ret
0x00000000004735bb : bsr eax, esi ; add rax, rdi ; ret
0x00000000004734c9 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004733c5 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000473336 : bsr rax, rax ; add rax, rdi ; ret
0x00000000004735ba : bsr rax, rsi ; add rax, rdi ; ret
0x00000000004734c8 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004733c4 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000047dd1b : call 0x110a606b
0x00000000004b0448 : call 0x124afe08
0x00000000004b1ab8 : call 0x144b156f
0x0000000000469cc6 : call 0x21469cc4
0x0000000000469e3c : call 0x21469e3a
0x000000000046a0cb : call 0x2146a0c9
0x000000000046a590 : call 0x2146a58e
0x000000000046a74e : call 0x2146a74c
0x000000000046ad1f : call 0x2146ad1d
0x000000000046af58 : call 0x2146af56
0x0000000000478b48 : call 0x40048f
0x00000000004741ad : call 0x400492
0x0000000000468a52 : call 0x4004af
0x0000000000455830 : call 0x401af2
0x0000000000421948 : call 0x40dc12
0x0000000000421943 : call 0x40fe86
0x00000000004157fa : call 0x411a52
0x0000000000416718 : call 0x4129a2
0x000000000041d0b8 : call 0x419352
0x0000000000421b35 : call 0x41dd72
0x0000000000403f9d : call 0x4201b2
0x00000000004796f9 : call 0x4201b8
0x0000000000483b58 : call 0x43fe47
0x00000000004007e8 : call 0x448176
0x00000000004006b1 : call 0x448636
0x000000000046fbac : call 0x44be52
0x000000000040fbb7 : call 0x44be82
0x0000000000451230 : call 0x44d502
0x000000000040ddf3 : call 0x45afd7
0x00000000004614b2 : call 0x45d752
0x0000000000489902 : call 0x4886d7
0x000000000045d136 : call 0x49085a8a
0x0000000000482cd4 : call 0x490abeeb
0x0000000000450547 : call 0x4d078e9b
0x00000000004829ac : call 0x4d0abbc3
0x0000000000434f1a : call 0x4fc25f18
0x0000000000434f19 : call 0x4fc25f19
0x0000000000437a3a : call 0x4fc28a38
0x0000000000437a39 : call 0x4fc28a39
0x000000000047b6b1 : call 0x86c0345
0x000000000046c84d : call 0xa3f4b89
0x000000000044826a : call 0xffffffff84070b7e
0x00000000004956f8 : call 0xffffffffa2495241
0x00000000004a7163 : call 0xffffffffaf0d0fd9
0x0000000000464c89 : call 0xffffffffc27f9493
0x000000000041de70 : call 0xffffffffc2cb2689
0x000000000041efb0 : call 0xffffffffc2cb37c9
0x000000000041fd6a : call 0xffffffffc2cb4583
0x000000000042186d : call 0xffffffffc2cb6086
0x0000000000421d72 : call 0xffffffffc2cb658b
0x00000000004222ae : call 0xffffffffc2cb6ac7
0x000000000047e30a : call 0xffffffffc2d12f14
0x000000000044c7ed : call 0xffffffffc308e581
0x000000000041dcf0 : call 0xffffffffc37b24fa
0x000000000041f0b9 : call 0xffffffffc37b38c3
0x000000000046ab5e : call 0xffffffffc3caab66
0x0000000000440f27 : call 0xffffffffc4149878
0x0000000000440e47 : call 0xffffffffc43c9798
0x0000000000496540 : call 0xffffffffd44960b8
0x000000000044b2d5 : call 0xffffffffe1441038
0x0000000000468eda : call qword ptr [r10 + rax*8]
0x0000000000489b50 : call qword ptr [r14]
0x00000000004018e0 : call qword ptr [r15 + rbx*8]
0x0000000000494197 : call qword ptr [rax + 0x20fff994]
0x00000000004943cb : call qword ptr [rax + 0x20fff9e7]
0x0000000000494753 : call qword ptr [rax + 0x20fffa10]
0x000000000049453b : call qword ptr [rax + 0x20fffa13]
0x0000000000494c4b : call qword ptr [rax + 0x20fffa37]
0x0000000000494a33 : call qword ptr [rax + 0x20fffa3a]
0x000000000040e1fe : call qword ptr [rax + 0x458b41]
0x000000000048618e : call qword ptr [rax + 0x66c205f6]
0x000000000049504b : call qword ptr [rax - 0x1f00055a]
0x00000000004944e3 : call qword ptr [rax - 0x1f00062d]
0x00000000004944f7 : call qword ptr [rax - 0x1f00063b]
0x0000000000494317 : call qword ptr [rax - 0x1f000659]
0x00000000004944af : call qword ptr [rax - 0x2f000641]
0x0000000000493f57 : call qword ptr [rax - 0x2f0006e9]
0x0000000000493f47 : call qword ptr [rax - 0x2f0006ee]
0x0000000000493f37 : call qword ptr [rax - 0x2f0006f3]
0x000000000049425f : call qword ptr [rax]
0x000000000040102e : call qword ptr [rbx + 0x10]
0x000000000040ea70 : call qword ptr [rbx]
0x00000000004ab75f : call qword ptr [rcx + rdx]
0x0000000000489d00 : call qword ptr [rcx]
0x00000000004018e1 : call qword ptr [rdi + rbx*8]
0x000000000041a64d : call qword ptr [rdi]
0x0000000000494817 : call qword ptr [rdx + 0x12fffa06]
0x000000000049480f : call qword ptr [rdx + 0x12fffa07]
0x0000000000494807 : call qword ptr [rdx + 0x12fffa08]
0x00000000004947ff : call qword ptr [rdx + 0x12fffa09]
0x0000000000494627 : call qword ptr [rdx + 0x22fffa0e]
0x0000000000494b1f : call qword ptr [rdx + 0x22fffa35]
0x0000000000468edb : call qword ptr [rdx + rax*8]
0x0000000000494093 : call qword ptr [rdx]
0x0000000000494583 : call qword ptr [rsi + 0x26fffa12]
0x0000000000494a7b : call qword ptr [rsi + 0x26fffa39]
0x0000000000489b51 : call qword ptr [rsi]
0x000000000047c7a7 : call r10
0x000000000040092c : call r11
0x000000000044a7f0 : call r12
0x000000000044eb90 : call r14
0x000000000044ad32 : call r15
0x0000000000493f3b : call rax
0x000000000040092d : call rbx
0x000000000041caa3 : call rcx
0x000000000044ad33 : call rdi
0x000000000040e8b7 : call rdx
0x000000000044eb91 : call rsi
0x000000000044a7f1 : call rsp
0x000000000048c684 : cdq ; add rax, r9 ; jmp rax
0x0000000000495019 : cdq ; cli ; call qword ptr [rax]
0x00000000004abd69 : cdq ; cmc ; call rax
0x00000000004a8ea0 : cdq ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000044928e : cdq ; ret
0x00000000004614b3 : cdq ; ret 0xffff
0x00000000004b5bb1 : cdq ; std ; call qword ptr [rdx]
0x00000000004940f0 : cdqe ; stc ; jmp rsi
0x0000000000478024 : clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000469dd1 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x000000000041d0fa : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8948
0x000000000041cd57 : clc ; add cl, byte ptr [rax + 0xf] ; ret 0x8d44
0x000000000047e773 : clc ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x000000000040d4bd : clc ; add dword ptr [rbx - 0x7cb70030], eax ; ret
0x000000000048872f : clc ; add ebx, dword ptr [rbp + 0x41] ; pop rsp ; pop r13 ; ret
0x000000000044fde2 : clc ; add ecx, dword ptr [rax - 0x77] ; or byte ptr [r15], 0x8e ; ret 1
0x000000000042b277 : clc ; add rax, rcx ; ret
0x000000000042b7a4 : clc ; add rax, rcx ; vzeroupper ; ret
0x00000000004af5ea : clc ; call qword ptr [rax]
0x000000000049510d : clc ; cli ; call qword ptr [rax]
0x0000000000495131 : clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000495125 : clc ; cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000495111 : clc ; cli ; jmp qword ptr [rax]
0x0000000000495129 : clc ; cli ; jmp rax
0x0000000000422e98 : clc ; cmovne rax, rcx ; ret
0x000000000042d8e9 : clc ; cmp rcx, rax ; jne 0x42d91b ; xor eax, eax ; ret
0x000000000042d8e8 : clc ; cmp rcx, rax ; jne 0x42d91c ; xor eax, eax ; ret
0x0000000000476a06 : clc ; dec dword ptr [rax + 0x39] ; ret
0x000000000047f9f0 : clc ; dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423860 : clc ; dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000472920 : clc ; dec dword ptr [rax + 1] ; ret
0x000000000047fc14 : clc ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000048cb6e : clc ; dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000401a7c : clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000046fe39 : clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000478b4b : clc ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000461a86 : clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045fa2e : clc ; dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x0000000000459774 : clc ; fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045ede3 : clc ; idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x0000000000459852 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004482aa : clc ; jg 0x448279 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448306 : clc ; jg 0x448306 ; int1 ; mov eax, eax ; ret
0x00000000004540f7 : clc ; jg 0x454086 ; ret 0xdb76
0x00000000004540f7 : clc ; jg 0x45408a ; ret 0xdb76
0x00000000004af5fe : clc ; jmp qword ptr [rsi]
0x000000000046098f : clc ; jmp rax
0x000000000048d613 : clc ; leave ; ret
0x00000000004a7b02 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000412a24 : clc ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f3e7 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fd57 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca7 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ff57 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c17 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000430157 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b87 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f403 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000447dee : clc ; mov qword ptr [rdi], rcx ; ret
0x0000000000447f6d : clc ; mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x000000000043863c : clc ; mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044707a : clc ; mov qword ptr [rdi], rsi ; ret
0x000000000048d791 : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000046f490 : clc ; mov rdx, r8 ; jmp 0x46f462
0x0000000000412a3c : clc ; or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac66 : clc ; pop rbp ; pop r12 ; ret
0x00000000004719d7 : clc ; push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x0000000000475583 : clc ; push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000491028 : clc ; push rbx ; ret
0x0000000000412a55 : clc ; ret
0x0000000000482eea : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000047461f : clc ; shr rax, 2 ; ret
0x0000000000494a21 : clc ; stc ; jmp rax
0x0000000000481b5d : clc ; std ; jbe 0x481b6d ; ret
0x0000000000485361 : clc ; sub rax, r8 ; ret
0x0000000000440ce6 : clc ; sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8b : clc ; sub rax, rsi ; ret
0x000000000042b91b : clc ; vzeroupper ; ret
0x00000000004ab398 : cld ; adc esi, edi ; jmp rsp
0x000000000044820f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x000000000048618d : cld ; call qword ptr [rax + 0x66c205f6]
0x00000000004b406e : cld ; call rdx
0x0000000000497446 : cld ; call rsp
0x00000000004a3af6 : cld ; inc dword ptr [rax - 0x7f000351] ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000047bd2e : cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004482ec : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044825a : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004a3e66 : cld ; jmp qword ptr [rax + 0x8fffcb6]
0x00000000004a3afe : cld ; jmp qword ptr [rax]
0x00000000004b2e62 : cld ; jmp qword ptr [rbx]
0x00000000004b3262 : cld ; jmp qword ptr [rcx]
0x00000000004b413a : cld ; jmp qword ptr [rsi]
0x000000000049740a : cld ; jmp rax
0x00000000004b2e02 : cld ; jmp rdx
0x00000000004a3d42 : cld ; jmp rsp
0x000000000042fb72 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd75 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff75 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430175 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000447df6 : cld ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f78 : cld ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x000000000043864e : cld ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x0000000000447088 : cld ; mov dword ptr [rdi], esi ; ret
0x0000000000447082 : cld ; mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7a6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e36 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f986 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db6 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fb66 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d36 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f5c6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb6 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000497406 : cld ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000497402 : cld ; push rax ; sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x000000000042f451 : cld ; ret
0x00000000004b3f84 : cld ; ret 0xfffc
0x00000000004949ed : cld ; stc ; jmp qword ptr [rax - 0x1f00061a]
0x00000000004ab269 : cld ; std ; call rax
0x00000000004b2c51 : cld ; sti ; jmp qword ptr [rbx]
0x00000000004a6fb6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000447912 : cld ; vzeroupper ; ret
0x0000000000400b8a : cli ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004156f1 : cli ; add ch, al ; pop rax ; ret
0x00000000004157f8 : cli ; add ch, al ; push rcx ; ret 0xffff
0x0000000000469325 : cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x00000000004116b2 : cli ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000447de1 : cli ; add dword ptr [rdi + 0x15], esi ; jb 0x447df1 ; mov byte ptr [rdi], cl ; ret
0x0000000000446ddb : cli ; add dword ptr [rdx + 2], esi ; mov byte ptr [rdi], cl ; ret
0x000000000043866c : cli ; add dword ptr [rdx + 4], esi ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000448ece : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xc085
0x0000000000448f2c : cli ; add ecx, dword ptr [rdi] ; xchg eax, esi ; ret 0xd284
0x0000000000494752 : cli ; call qword ptr [rax + 0x20fffa10]
0x000000000049453a : cli ; call qword ptr [rax + 0x20fffa13]
0x0000000000494c4a : cli ; call qword ptr [rax + 0x20fffa37]
0x0000000000494a32 : cli ; call qword ptr [rax + 0x20fffa3a]
0x000000000049504a : cli ; call qword ptr [rax - 0x1f00055a]
0x000000000049455a : cli ; call qword ptr [rax]
0x00000000004b1aba : cli ; call qword ptr [rbx]
0x00000000004b17ba : cli ; call qword ptr [rcx]
0x00000000004b0fd2 : cli ; call qword ptr [rdi]
0x0000000000494816 : cli ; call qword ptr [rdx + 0x12fffa06]
0x000000000049480e : cli ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494806 : cli ; call qword ptr [rdx + 0x12fffa08]
0x00000000004947fe : cli ; call qword ptr [rdx + 0x12fffa09]
0x0000000000494626 : cli ; call qword ptr [rdx + 0x22fffa0e]
0x0000000000494b1e : cli ; call qword ptr [rdx + 0x22fffa35]
0x0000000000494606 : cli ; call qword ptr [rdx]
0x0000000000494582 : cli ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a7a : cli ; call qword ptr [rsi + 0x26fffa39]
0x00000000004945a2 : cli ; call qword ptr [rsi]
0x000000000049454a : cli ; call rax
0x00000000004b0f3e : cli ; call rcx
0x00000000004945ee : cli ; call rdx
0x0000000000494592 : cli ; call rsi
0x00000000004946be : cli ; call rsp
0x0000000000495155 : cli ; cli ; jmp qword ptr [rax]
0x000000000044c395 : cli ; cmp eax, 0x83497174 ; ret
0x000000000045d53e : cli ; dec dword ptr [rax + 0x29] ; ret
0x000000000047f590 : cli ; dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000045c4f5 : cli ; dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x000000000045062e : cli ; dec dword ptr [rbx + rcx*4 + 0x25] ; int1 ; ret 0x26
0x0000000000471c27 : cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000494546 : cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000494c56 : cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a3e : cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x000000000049475e : cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000049496e : cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x0000000000495056 : cli ; inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000495046 : cli ; inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000495016 : cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x0000000000494ff6 : cli ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x0000000000494536 : cli ; inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x000000000049474e : cli ; inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x000000000049510a : cli ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495076 : cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495152 : cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000494c46 : cli ; inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000494f7e : cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000495132 : cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494de2 : cli ; inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004946ba : cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000045984f : cli ; inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x00000000004525ad : cli ; inc dword ptr [rcx - 0x77] ; ret
0x0000000000455895 : cli ; inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x00000000004945f2 : cli ; inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494bb2 : cli ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494822 : cli ; inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000494b1a : cli ; inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000049458e : cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000494a86 : cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x000000000049457e : cli ; inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a76 : cli ; inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000495126 : cli ; inc eax ; clc ; cli ; jmp rax
0x0000000000494f6e : cli ; inc eax ; cli ; call rax
0x00000000004950fe : cli ; inc eax ; idiv edx ; call rax
0x000000000049514a : cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000494eaa : cli ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494a5e : cli ; inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x0000000000438627 : cli ; jg 0x43863a ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000446da6 : cli ; jg 0x446db8 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x00000000004473d9 : cli ; jg 0x4473ec ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447841 : cli ; jg 0x447854 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447f62 : cli ; jg 0x447f72 ; vzeroupper ; ret
0x0000000000448138 : cli ; jg 0x448148 ; vzeroupper ; ret
0x00000000004947a6 : cli ; jmp qword ptr [rax + 0x10fffa04]
0x000000000049472e : cli ; jmp qword ptr [rax + 0x10fffa0d]
0x0000000000494ff2 : cli ; jmp qword ptr [rax + 0x40fffa8a]
0x000000000049453e : cli ; jmp qword ptr [rax]
0x00000000004947f6 : cli ; jmp qword ptr [rdx + 0x12fffa0a]
0x000000000049462a : cli ; jmp qword ptr [rdx]
0x0000000000494586 : cli ; jmp qword ptr [rsi]
0x0000000000494ffa : cli ; jmp rax
0x000000000040d264 : cli ; jmp rdx
0x000000000049456e : cli ; jmp rsi
0x00000000004946e2 : cli ; jmp rsp
0x0000000000494ba6 : cli ; lcall ptr [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x00000000004945e6 : cli ; lcall ptr [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x0000000000494e2e : cli ; ljmp ptr [rdx + 0x29] ; cli ; call qword ptr [rax]
0x00000000004945ea : cli ; ljmp ptr [rsi + rcx] ; cli ; call rdx
0x0000000000494baa : cli ; ljmp ptr [rsi] ; xor al, 0xfa ; call rsp
0x000000000042ff78 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004004ca : cli ; mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000040d546 : cli ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000042bc28 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x000000000042a6d6 : cli ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049472c : cli ; or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x00000000004a9421 : cli ; push 0x6e ; ja 0x4a93ae ; ret 0x48f
0x0000000000494e9e : cli ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x000000000049496a : cli ; push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x0000000000494542 : cli ; push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x0000000000494c52 : cli ; push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000494a3a : cli ; push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000494936 : cli ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004950fa : cli ; push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004950a2 : cli ; push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494f6a : cli ; push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x00000000004947a2 : cli ; push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x0000000000495052 : cli ; push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x00000000004948de : cli ; push qword ptr [rbp + rax - 6] ; jmp rsp
0x00000000004946b6 : cli ; push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x0000000000494826 : cli ; push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494de6 : cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000049458a : cli ; push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x0000000000494a82 : cli ; push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x000000000049512e : cli ; push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004950b2 : cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000494f7a : cli ; push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000495106 : cli ; push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495072 : cli ; push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000494932 : cli ; push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000494e9a : cli ; push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x000000000049459a : cli ; push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004948da : cli ; push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x0000000000447d19 : cli ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004a7ec5 : cli ; ret 0xac65
0x000000000044be4b : cli ; setae al ; ret
0x00000000004b0bb9 : cli ; std ; jmp qword ptr [rdx]
0x0000000000440b19 : cli ; test rdx, rdx ; je 0x440b39 ; bsf rax, rdx ; ret
0x00000000004738a8 : cli ; test rdx, rdx ; je 0x4738d9 ; bsf rax, rdx ; ret
0x00000000004a6b0a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000489a1a : cmc ; add byte ptr [rax], al ; add al, ch ; int 0x80
0x000000000044c813 : cmc ; add byte ptr es:[rbx + rcx*4 + 0x1d], cl ; ret
0x00000000004abcca : cmc ; call qword ptr [rdx]
0x00000000004abd6a : cmc ; call rax
0x00000000004abcde : cmc ; call rsp
0x00000000004af661 : cmc ; clc ; call qword ptr [rax]
0x00000000004525ac : cmc ; cli ; inc dword ptr [rcx - 0x77] ; ret
0x00000000004abe82 : cmc ; jmp qword ptr [rax]
0x00000000004a9849 : cmc ; mov ch, 0xab ; ret
0x0000000000434dba : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fe : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x000000000046fef7 : cmc ; mov rbp, rax ; jmp 0x46fec4
0x0000000000446163 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x00000000004a66f7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000494a19 : cmc ; stc ; jmp rax
0x00000000004b1991 : cmc ; std ; call rdx
0x0000000000446167 : cmc ; sub eax, edx ; ret
0x000000000046c827 : cmc ; test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x00000000004a8e85 : cmc ; xlatb ; ret 0x4e27
0x0000000000419119 : cmovae eax, dword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000419118 : cmovae rax, qword ptr [rdi + 0x10] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000448234 : cmove eax, ecx ; pop rbx ; ret
0x0000000000471f81 : cmove eax, ecx ; ret
0x0000000000423863 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000004481fc : cmove eax, edx ; pop rbx ; ret
0x000000000042399f : cmove eax, edx ; ret
0x0000000000414b6f : cmove ebp, esp ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047e878 : cmove ecx, eax ; mov rax, rcx ; ret
0x0000000000471f80 : cmove r8, rcx ; ret
0x0000000000448233 : cmove rax, rcx ; pop rbx ; ret
0x0000000000423862 : cmove rax, rdx ; add rsp, 8 ; ret
0x00000000004481fb : cmove rax, rdx ; pop rbx ; ret
0x000000000042399e : cmove rax, rdx ; ret
0x000000000047e877 : cmove rcx, rax ; mov rax, rcx ; ret
0x000000000041655b : cmovg eax, ecx ; test rdx, rdx ; jne 0x416559 ; ret
0x0000000000470a9b : cmovg eax, ecx ; test rdx, rdx ; jne 0x470a99 ; ret
0x0000000000422e9a : cmovne eax, ecx ; ret
0x000000000044828c : cmovne eax, edx ; pop rbx ; ret
0x000000000042389f : cmovne eax, edx ; ret
0x00000000004406a4 : cmovne eax, edx ; vzeroupper ; ret
0x0000000000422e99 : cmovne rax, rcx ; ret
0x000000000044828b : cmovne rax, rdx ; pop rbx ; ret
0x000000000042389e : cmovne rax, rdx ; ret
0x00000000004406a3 : cmovne rax, rdx ; vzeroupper ; ret
0x0000000000450c0c : cmovs eax, edx ; ret
0x000000000048dc88 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x0000000000471ce8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x471ce9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004481de : cmovs esp, dword ptr [rbx + 0xc] ; xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x0000000000448270 : cmovs esp, dword ptr [rbx + 4] ; xchg eax, esi ; add rax, rsi ; jmp rax
0x0000000000446c78 : cmp ah, byte ptr [rbx - 0x27] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004af42d : cmp al, 0 ; add al, dh ; ret 0xfff7
0x00000000004884c0 : cmp al, 0x23 ; add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000455a32 : cmp al, 0x24 ; add byte ptr [rcx - 0x77], al ; ret
0x000000000044f922 : cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x0000000000416727 : cmp al, 0x24 ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000416716 : cmp al, 0x24 ; call 0x4129a4
0x000000000048dddd : cmp al, 0x24 ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048d2ac : cmp al, 0x31 ; or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x000000000048d23d : cmp al, 0x32 ; or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x00000000004a7b00 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000045a421 : cmp al, 0xb3 ; add rdi, r11 ; jmp rdi
0x00000000004a3d40 : cmp al, 0xb5 ; cld ; jmp rsp
0x000000000040d549 : cmp al, 0xba ; add rdi, r10 ; jmp rdi
0x000000000044b6fd : cmp al, 0xff ; dec dword ptr [rax - 0x7f] ; ret
0x0000000000446626 : cmp al, byte ptr [rsi - 1] ; jne 0x44664c ; xor eax, eax ; ret
0x000000000042b496 : cmp al, dh ; ret
0x000000000042b495 : cmp al, r14b ; ret
0x000000000048b026 : cmp bh, 0x10 ; jne 0x48b04f ; xor eax, eax ; ret
0x000000000048e1c6 : cmp bh, 0x10 ; jne 0x48e1e5 ; xor eax, eax ; ret
0x000000000048f026 : cmp bh, 0x10 ; jne 0x48f045 ; xor eax, eax ; ret
0x000000000048fa96 : cmp bh, 0x10 ; jne 0x48fabf ; xor eax, eax ; ret
0x000000000048e1ac : cmp bh, 0x30 ; jne 0x48e1e1 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f00c : cmp bh, 0x30 ; jne 0x48f041 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000494a79 : cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000494bb5 : cmp bh, dl ; call rsp
0x0000000000494a35 : cmp bh, dl ; jmp qword ptr [rax]
0x0000000000410a92 : cmp byte ptr [r8 - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x00000000004b4854 : cmp byte ptr [rax + 0x2080000], dl ; std ; jmp qword ptr [rdx]
0x000000000041244f : cmp byte ptr [rax + 0x29], cl ; ret
0x0000000000476e13 : cmp byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004104ee : cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000412ef9 : cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040169b : cmp byte ptr [rax + 0x39], cl ; ret 0x4f76
0x000000000042b4d7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000470605 : cmp byte ptr [rax + 1], cl ; ret
0x0000000000470090 : cmp byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004b4054 : cmp byte ptr [rax - 0x35480000], cl ; cld ; jmp qword ptr [rcx]
0x000000000045b087 : cmp byte ptr [rax - 0x73], cl ; dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000451258 : cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x000000000045b204 : cmp byte ptr [rax - 0x75], cl ; jl 0x45b235 ; and byte ptr [rax + 1], cl ; ret
0x0000000000410a93 : cmp byte ptr [rax - 0x75], cl ; push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000046fe36 : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000452b64 : cmp byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000412d80 : cmp byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000042b4c6 : cmp byte ptr [rax], ah ; ret
0x0000000000416b93 : cmp byte ptr [rax], al ; je 0x416ba5 ; ret
0x000000000048d1af : cmp byte ptr [rax], al ; je 0x48d1d8 ; add rsp, 0x18 ; ret
0x0000000000440240 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000042b4b6 : cmp byte ptr [rax], dl ; ret
0x000000000042b4b5 : cmp byte ptr [rax], r10b ; ret
0x000000000042b4c5 : cmp byte ptr [rax], r12b ; ret
0x000000000044023f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x0000000000494208 : cmp byte ptr [rbp - 0x407f0007], 0xf9 ; call qword ptr [rax]
0x00000000004b3fa1 : cmp byte ptr [rbx + 0x2030d07], al ; cld ; ret
0x00000000004b3fd5 : cmp byte ptr [rbx + 0x2030d07], al ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x00000000004b3f6d : cmp byte ptr [rbx + 0x3030d07], al ; or al, byte ptr [rcx] ; ret
0x000000000048acc8 : cmp byte ptr [rbx + 0x41], bl ; pop rsi ; ret
0x000000000040da96 : cmp byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000416210 : cmp byte ptr [rbx + 0x5d], bl ; ret
0x000000000048904d : cmp byte ptr [rbx], ah ; add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004af354 : cmp byte ptr [rbx], bh ; add byte ptr [rax], al ; mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x0000000000471a10 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000048d2ab : cmp byte ptr [rcx + rsi], 8 ; jne 0x48d2be ; mov qword ptr [rax], rdx ; ret
0x0000000000480166 : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x000000000049420c : cmp byte ptr [rdi - 0x4def0007], 0xf9 ; call rax
0x00000000004ab262 : cmp byte ptr [rdi], 0 ; add byte ptr [rax + 0x40], al ; js 0x4ab26f ; std ; call rax
0x0000000000416b58 : cmp byte ptr [rdi], cl ; ret 0x389
0x000000000042cdbd : cmp byte ptr [rdi], dl ; ret
0x000000000042d8d0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d8a2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35e : cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048d23c : cmp byte ptr [rdx + rsi], 8 ; jne 0x48d265 ; mov rax, qword ptr [rax] ; ret
0x000000000046c7e2 : cmp ch, byte ptr [rdx - 0x74b7ffdc] ; add al, 0xf8 ; jmp rax
0x0000000000488da2 : cmp cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000404807 : cmp cl, ch ; ret 0xfffb
0x00000000004406a1 : cmp dh, byte ptr [rax] ; cmovne rax, rdx ; vzeroupper ; ret
0x000000000044811a : cmp dh, byte ptr [rdx + 2] ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000048b025 : cmp dil, 0x10 ; jne 0x48b050 ; xor eax, eax ; ret
0x000000000048e1c5 : cmp dil, 0x10 ; jne 0x48e1e6 ; xor eax, eax ; ret
0x000000000048f025 : cmp dil, 0x10 ; jne 0x48f046 ; xor eax, eax ; ret
0x000000000048fa95 : cmp dil, 0x10 ; jne 0x48fac0 ; xor eax, eax ; ret
0x0000000000447de0 : cmp dl, 1 ; ja 0x447e03 ; jb 0x447df2 ; mov byte ptr [rdi], cl ; ret
0x000000000043866b : cmp dl, 1 ; jb 0x43867d ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446dda : cmp dl, 1 ; jb 0x446de8 ; mov byte ptr [rdi], cl ; ret
0x0000000000422f05 : cmp dl, al ; jne 0x422ef8 ; sub rax, 0x10 ; ret
0x0000000000494c49 : cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x0000000000494a89 : cmp dl, bh ; call rsi
0x0000000000494a85 : cmp dl, bh ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x0000000000494a88 : cmp dl, r15b ; call rsi
0x0000000000422f04 : cmp dl, r8b ; jne 0x422ef9 ; sub rax, 0x10 ; ret
0x00000000004719b8 : cmp dword ptr [rax + 0x30], 0 ; je 0x4719c7 ; ret
0x000000000040ea41 : cmp dword ptr [rax - 0x39], ecx ; ret
0x00000000004348f8 : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x0000000000416b91 : cmp dword ptr [rdi + 0x38], 0 ; je 0x416ba7 ; ret
0x00000000004246a1 : cmp dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000047f9ef : cmp eax, -1 ; cmove rax, rdx ; ret
0x00000000004719d6 : cmp eax, -1 ; je 0x4719e9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000481b5c : cmp eax, -3 ; jbe 0x481b6e ; ret
0x00000000004878b5 : cmp eax, 0x2316bd ; add byte ptr [rbp + 2], dh ; pop rbx ; ret
0x0000000000460ec9 : cmp eax, 0x255852 ; mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x00000000004129a2 : cmp eax, 0x2a6600 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x000000000040383a : cmp eax, 0x2b5720 ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004956f9 : cmp eax, 0x3da1fffb ; sti ; call rsp
0x0000000000495809 : cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x000000000049585d : cmp eax, 0x3dd4fffb ; sti ; call rsp
0x00000000004956dd : cmp eax, 0x3e62fffb ; sti ; call rsp
0x000000000044a812 : cmp eax, 0x7d8b48 ; call r12
0x000000000044c56f : cmp eax, 0x83482f74 ; ret
0x000000000044c396 : cmp eax, 0x83497174 ; ret
0x0000000000473624 : cmp eax, 0x89000001 ; ret 0x8948
0x00000000004af5f9 : cmp eax, 0x96540000 ; clc ; jmp qword ptr [rsi]
0x00000000004af5e5 : cmp eax, 0x96580000 ; clc ; call qword ptr [rax]
0x00000000004af60d : cmp eax, 0xb8700000 ; clc ; call qword ptr [rax]
0x0000000000403f9a : cmp eax, 0xee8ff31 ; ret 1
0x00000000004496b6 : cmp eax, 0xfffff000 ; ja 0x4496c8 ; ret
0x0000000000449704 : cmp eax, 0xfffff000 ; ja 0x449718 ; ret
0x000000000044990f : cmp eax, 0xfffff000 ; ja 0x449978 ; ret
0x00000000004499a5 : cmp eax, 0xfffff000 ; ja 0x4499b8 ; ret
0x00000000004499e2 : cmp eax, 0xfffff000 ; ja 0x449a48 ; ret
0x0000000000449a78 : cmp eax, 0xfffff000 ; ja 0x449a90 ; ret
0x0000000000449aa8 : cmp eax, 0xfffff000 ; ja 0x449ac0 ; ret
0x0000000000449cb2 : cmp eax, 0xfffff000 ; ja 0x449d00 ; ret
0x0000000000449d28 : cmp eax, 0xfffff000 ; ja 0x449d40 ; ret
0x000000000044a481 : cmp eax, 0xfffff000 ; ja 0x44a498 ; ret
0x000000000045b00e : cmp eax, 0xfffff000 ; ja 0x45b028 ; ret
0x0000000000475676 : cmp eax, 0xfffff000 ; ja 0x475688 ; ret
0x00000000004756ca : cmp eax, 0xfffff000 ; ja 0x4756e0 ; ret
0x0000000000449628 : cmp eax, 0xfffff001 ; jae 0x449637 ; ret
0x000000000044a6b8 : cmp eax, 0xfffff001 ; jae 0x44a6c7 ; ret
0x000000000044a6e8 : cmp eax, 0xfffff001 ; jae 0x44a6f7 ; ret
0x000000000044a718 : cmp eax, 0xfffff001 ; jae 0x44a727 ; ret
0x000000000044bdbb : cmp eax, 0xfffff001 ; jae 0x44bdca ; ret
0x000000000044bde8 : cmp eax, 0xfffff001 ; jae 0x44bdf7 ; ret
0x00000000004755f8 : cmp eax, 0xfffff001 ; jae 0x475607 ; ret
0x0000000000488668 : cmp eax, 0xfffff001 ; jae 0x488677 ; ret
0x000000000044879b : cmp eax, 2 ; je 0x4487af ; xor eax, eax ; ret
0x000000000044bf2a : cmp eax, 4 ; je 0x44bf35 ; ret
0x000000000046f48b : cmp eax, ecx ; jg 0x46f4a8 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f467
0x0000000000446c2f : cmp eax, ecx ; jle 0x446c6f ; movsxd rax, ecx ; ret
0x0000000000446643 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000041889b : cmp eax, edx ; jae 0x4188c7 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487de4 : cmp eax, esi ; je 0x487df5 ; ret
0x0000000000462faf : cmp eax, esp ; je 0x462de6 ; jmp 0x462f84
0x000000000046f48a : cmp eax, r9d ; jg 0x46f4a9 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f468
0x00000000004565ac : cmp ebp, ebx ; jb 0x45661e ; mov rdx, rax ; jmp 0x456575
0x000000000044bec6 : cmp ebx, 0xa ; je 0x44bed1 ; ret
0x0000000000460de1 : cmp ebx, dword ptr [rbp + 0x25] ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000044d4de : cmp ebx, eax ; setne dl ; jmp 0x44d4ca
0x0000000000473d45 : cmp ecx, 0xc00 ; je 0x473d59 ; ret
0x000000000044c0f1 : cmp ecx, dword ptr [rax + 0x10] ; jae 0x44c0e6 ; ret
0x000000000048721e : cmp ecx, dword ptr [rax - 0x3f] ; loop 0x48722f ; add rdx, rax ; jmp 0x487238
0x000000000044e9e2 : cmp ecx, dword ptr [rax - 0x7d] ; ret
0x000000000047fa38 : cmp ecx, dword ptr [rdi + rsi] ; jae 0x47f9e8 ; xor eax, eax ; ret
0x0000000000471f7e : cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000042d8eb : cmp ecx, eax ; jne 0x42d919 ; xor eax, eax ; ret
0x000000000047e7c8 : cmp ecx, eax ; jne 0x47e772 ; mov eax, dword ptr [rdx + 4] ; ret
0x0000000000484382 : cmp ecx, ecx ; ret
0x0000000000471cea : cmp ecx, esi ; jne 0x471ce7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e7b6 : cmp ecx, esi ; jne 0x47e795 ; ret
0x0000000000478b49 : cmp edi, dword ptr [rcx - 8] ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000465f20 : cmp edi, eax ; ja 0x465f07 ; mov eax, r9d ; ret
0x00000000004759ee : cmp edi, edx ; ja 0x475a1d ; ret
0x0000000000446fe2 : cmp edi, edx ; jb 0x446fef ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000465f1f : cmp edi, r8d ; ja 0x465f08 ; mov eax, r9d ; ret
0x000000000041f74a : cmp edx, eax ; jne 0x41f715 ; ret
0x0000000000447dcb : cmp edx, ecx ; jne 0x447db8 ; ret
0x0000000000447f32 : cmp edx, ecx ; jne 0x447f1e ; vzeroupper ; ret
0x00000000004480f5 : cmp edx, ecx ; jne 0x4480d9 ; vzeroupper ; ret
0x0000000000494afd : cmp edx, edi ; call qword ptr [rdx]
0x0000000000494a41 : cmp edx, edi ; call rax
0x0000000000494a3d : cmp edx, edi ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000494a7d : cmp edx, edi ; jmp qword ptr [rsi]
0x0000000000494c3d : cmp edx, edi ; jmp rax
0x000000000044be4a : cmp edx, edi ; setae al ; ret
0x0000000000474456 : cmp edx, esi ; je 0x474467 ; test edx, edx ; jne 0x474459 ; ret
0x00000000004188d9 : cmp esi, -1 ; setne al ; neg eax ; ret
0x00000000004587d4 : cmp esi, 3 ; je 0x4587e6 ; ret
0x00000000004473c5 : cmp esi, dword ptr [rdx + 5] ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004a8e84 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x0000000000417afa : cmp esi, ecx ; jne 0x417af7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004ac5cd : cmp esi, esi ; call qword ptr [rdi]
0x00000000004719b7 : cmp qword ptr [rax + 0x30], 0 ; je 0x4719c8 ; ret
0x0000000000416b90 : cmp qword ptr [rdi + 0x38], 0 ; je 0x416ba8 ; ret
0x000000000044bec5 : cmp r11d, 0xa ; je 0x44bed2 ; ret
0x00000000004565ab : cmp r13, r11 ; jb 0x45661f ; mov rdx, rax ; jmp 0x456576
0x0000000000494bb4 : cmp r15b, dl ; call rsp
0x00000000004496b5 : cmp rax, -0x1000 ; ja 0x4496c9 ; ret
0x0000000000449703 : cmp rax, -0x1000 ; ja 0x449719 ; ret
0x000000000044990e : cmp rax, -0x1000 ; ja 0x449979 ; ret
0x00000000004499a4 : cmp rax, -0x1000 ; ja 0x4499b9 ; ret
0x00000000004499e1 : cmp rax, -0x1000 ; ja 0x449a49 ; ret
0x0000000000449a77 : cmp rax, -0x1000 ; ja 0x449a91 ; ret
0x0000000000449aa7 : cmp rax, -0x1000 ; ja 0x449ac1 ; ret
0x0000000000449cb1 : cmp rax, -0x1000 ; ja 0x449d01 ; ret
0x0000000000449d27 : cmp rax, -0x1000 ; ja 0x449d41 ; ret
0x000000000044a480 : cmp rax, -0x1000 ; ja 0x44a499 ; ret
0x000000000045b00d : cmp rax, -0x1000 ; ja 0x45b029 ; ret
0x0000000000475675 : cmp rax, -0x1000 ; ja 0x475689 ; ret
0x00000000004756c9 : cmp rax, -0x1000 ; ja 0x4756e1 ; ret
0x0000000000449627 : cmp rax, -0xfff ; jae 0x449638 ; ret
0x000000000044a6b7 : cmp rax, -0xfff ; jae 0x44a6c8 ; ret
0x000000000044a6e7 : cmp rax, -0xfff ; jae 0x44a6f8 ; ret
0x000000000044a717 : cmp rax, -0xfff ; jae 0x44a728 ; ret
0x000000000044bdba : cmp rax, -0xfff ; jae 0x44bdcb ; ret
0x000000000044bde7 : cmp rax, -0xfff ; jae 0x44bdf8 ; ret
0x00000000004755f7 : cmp rax, -0xfff ; jae 0x475608 ; ret
0x0000000000488667 : cmp rax, -0xfff ; jae 0x488678 ; ret
0x000000000047f9ee : cmp rax, -1 ; cmove rax, rdx ; ret
0x0000000000481b5b : cmp rax, -3 ; jbe 0x481b6f ; ret
0x000000000041889a : cmp rax, rdx ; jae 0x4188c8 ; movzx eax, byte ptr [rax] ; ret
0x0000000000487de3 : cmp rax, rsi ; je 0x487df6 ; ret
0x000000000044c0f0 : cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c0e7 ; ret
0x000000000047fa37 : cmp rcx, qword ptr [rdi + rsi] ; jae 0x47f9e9 ; xor eax, eax ; ret
0x0000000000471f7d : cmp rcx, qword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000047e7c7 : cmp rcx, r8 ; jne 0x47e773 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000042d8ea : cmp rcx, rax ; jne 0x42d91a ; xor eax, eax ; ret
0x0000000000471ce9 : cmp rcx, rsi ; jne 0x471ce8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e7b5 : cmp rcx, rsi ; jne 0x47e796 ; ret
0x00000000004759ed : cmp rdi, rdx ; ja 0x475a1e ; ret
0x0000000000446fe1 : cmp rdi, rdx ; jb 0x446ff0 ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041f749 : cmp rdx, r8 ; jne 0x41f716 ; ret
0x0000000000447dca : cmp rdx, rcx ; jne 0x447db9 ; ret
0x0000000000447dc9 : cmp rdx, rcx ; jne 0x447dba ; ret
0x0000000000447f31 : cmp rdx, rcx ; jne 0x447f1f ; vzeroupper ; ret
0x00000000004480f4 : cmp rdx, rcx ; jne 0x4480da ; vzeroupper ; ret
0x000000000044be49 : cmp rdx, rdi ; setae al ; ret
0x0000000000417af9 : cmp rsi, rcx ; jne 0x417af8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000042d369 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000049504d : cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x000000000040058c : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400595 ; ret
0x000000000043e056 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000494315 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call qword ptr [rax - 0x1f000659]
0x00000000004b01f5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x00000000004aa8b5 : cmpsb byte ptr [rsi], byte ptr [rdi] ; std ; jmp rbx
0x000000000047cb08 : cmpsd dword ptr [rsi], dword ptr [rdi] ; add rax, rdi ; jmp rax
0x0000000000494319 : cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x0000000000400b09 : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x000000000048b0a0 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x830f
0x000000000041a18c : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000048b135 : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x9272
0x000000000045175f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret
0x000000000049213c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049189c : cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004b5031 : cwde ; add byte ptr [rax], al ; pushfq ; std ; jmp rsp
0x00000000004af638 : cwde ; fprem ; call qword ptr [rax]
0x00000000004b0178 : cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x00000000004940f1 : cwde ; stc ; jmp rsi
0x0000000000442341 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x0000000000442342 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044790d : dec byte ptr [rax + 0x7f] ; jl 0x447932 ; cld ; vzeroupper ; ret
0x000000000045dd39 : dec byte ptr [rax - 0x75] ; mov ebp, 0xfffff758 ; call rax
0x0000000000480e3f : dec byte ptr [rax - 0x77] ; fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x00000000004727d0 : dec byte ptr [rax - 0x77] ; ret
0x0000000000480ddd : dec byte ptr [rax - 0x7d] ; ret
0x000000000044a962 : dec byte ptr [rbx + rcx*4 + 0x5f] ; or byte ptr [rcx - 0xa], al ; ret
0x000000000040e3e6 : dec byte ptr [rcx + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004741a6 : dec byte ptr [rcx + rcx*4 - 0x11] ; add r15, r12 ; call 0x400499
0x000000000040df97 : dec byte ptr [rcx + rcx*4 - 0x11] ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000481b59 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x481b71 ; ret
0x0000000000456953 : dec dword ptr [r8 - 0x7d] ; ret 0x8801
0x000000000041135d : dec dword ptr [rax + 0x29] ; ret
0x0000000000442482 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000482b21 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x0000000000482c61 : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000041e7d5 : dec dword ptr [rax + 0x29] ; ret 0x8d4c
0x000000000047640b : dec dword ptr [rax + 0x39] ; ret
0x000000000041318d : dec dword ptr [rax + 0x39] ; ret 0x860f
0x0000000000489309 : dec dword ptr [rax + 0x39] ; ret 0xf48
0x000000000048481e : dec dword ptr [rax + 0x48e57506] ; mov eax, esi ; ret
0x00000000004a4e3f : dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4e4c ; jmp qword ptr [rax]
0x0000000000495f8f : dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x000000000046eea2 : dec dword ptr [rax + 0xf] ; add dword ptr [r8 - 0x7d], ecx ; ret 0x8502
0x00000000004735b9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000047f9f1 : dec dword ptr [rax + 0xf] ; ret 0x66c3
0x0000000000423861 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x0000000000473d69 : dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000045b08b : dec dword ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret 0x148
0x0000000000472921 : dec dword ptr [rax + 1] ; ret
0x0000000000496577 : dec dword ptr [rax + rsi*2 + 0x73c9fffb] ; sti ; call qword ptr [rax]
0x0000000000403013 : dec dword ptr [rax - 0x39] ; ret
0x00000000004495af : dec dword ptr [rax - 0x39] ; ret 0
0x0000000000449554 : dec dword ptr [rax - 0x39] ; ret 0x8000
0x000000000045dda0 : dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004494c7 : dec dword ptr [rax - 0x39] ; ret 0xff80
0x0000000000468a56 : dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000449845 : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044941c : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000456864 : dec dword ptr [rax - 0x73] ; add cl, byte ptr [rax + 0x39] ; ret
0x000000000047fc15 : dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x000000000041ec28 : dec dword ptr [rax - 0x73] ; push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000048c342 : dec dword ptr [rax - 0x75] ; add byte ptr [rcx + 1], cl ; ret 0xef89
0x000000000044f16c : dec dword ptr [rax - 0x75] ; jne 0x44f106 ; call rsi
0x000000000046926b : dec dword ptr [rax - 0x75] ; mov ebp, 0xfffff730 ; call rax
0x000000000048cb6f : dec dword ptr [rax - 0x75] ; push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x0000000000481d9c : dec dword ptr [rax - 0x77] ; adc byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x000000000041f8d4 : dec dword ptr [rax - 0x77] ; add eax, 0x299f84 ; ret
0x000000000048a4f7 : dec dword ptr [rax - 0x77] ; add ebx, dword ptr [rax + 0x5a] ; pop rbx ; ret
0x000000000047f591 : dec dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000463330 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; call rax
0x0000000000401a7d : dec dword ptr [rax - 0x77] ; ret
0x00000000004759de : dec dword ptr [rax - 0x77] ; ret 0x1477
0x000000000041f0cf : dec dword ptr [rax - 0x77] ; ret 0x2948
0x000000000046ddf6 : dec dword ptr [rax - 0x77] ; ret 0x29e8
0x000000000042447b : dec dword ptr [rax - 0x77] ; ret 0x5ae9
0x000000000047cdc7 : dec dword ptr [rax - 0x77] ; ret 0x68e8
0x000000000047593d : dec dword ptr [rax - 0x77] ; ret 0x7577
0x000000000041ee4c : dec dword ptr [rax - 0x77] ; ret 0x8548
0x00000000004237d7 : dec dword ptr [rax - 0x77] ; ret 0x854d
0x000000000045aeb2 : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000046db00 : dec dword ptr [rax - 0x77] ; ret 0x8b44
0x0000000000449346 : dec dword ptr [rax - 0x77] ; ret 0x8b48
0x00000000004787ac : dec dword ptr [rax - 0x77] ; ret 0x8d4c
0x0000000000423ef6 : dec dword ptr [rax - 0x77] ; ret 0x90e9
0x000000000044a675 : dec dword ptr [rax - 0x77] ; ret 0xa076
0x00000000004494a1 : dec dword ptr [rax - 0x77] ; ret 0xa0e9
0x000000000045687d : dec dword ptr [rax - 0x77] ; ret 0xb2eb
0x000000000044948d : dec dword ptr [rax - 0x77] ; ret 0xb4e9
0x0000000000424308 : dec dword ptr [rax - 0x77] ; ret 0xb60f
0x000000000046bb79 : dec dword ptr [rax - 0x77] ; ret 0xb848
0x0000000000475f1c : dec dword ptr [rax - 0x77] ; ret 0xefeb
0x000000000046fe3a : dec dword ptr [rax - 0x77] ; ret 0xf41
0x000000000040581f : dec dword ptr [rax - 0x77] ; ret 0xf748
0x0000000000469a63 : dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000481b5a : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x481b70 ; ret
0x000000000040476f : dec dword ptr [rax - 0x7d] ; ret
0x0000000000454681 : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000452d6b : dec dword ptr [rax - 0x7d] ; ret 0x4804
0x0000000000405d6b : dec dword ptr [rax - 0x7d] ; ret 0x4901
0x0000000000456954 : dec dword ptr [rax - 0x7d] ; ret 0x8801
0x000000000048e137 : dec dword ptr [rax - 0x7d] ; ret 0xe902
0x0000000000459458 : dec dword ptr [rax - 0x7d] ; rol byte ptr [rcx], 0x83 ; ret 0x4801
0x000000000044b700 : dec dword ptr [rax - 0x7f] ; ret
0x00000000004348fc : dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000047711d : dec dword ptr [rax - 9] ; fmul dword ptr [rcx + 0x21] ; ret
0x000000000048eb34 : dec dword ptr [rax - 9] ; ret
0x0000000000461ca4 : dec dword ptr [rbp + 0x63] ; ret 0x20be
0x0000000000467eed : dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000045c4f6 : dec dword ptr [rbp - 0x7b] ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424133 : dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x0000000000400df4 : dec dword ptr [rbx + 0x2bb00115] ; add bh, dh ; ret 0
0x0000000000422e4d : dec dword ptr [rbx + 0x90c2454] ; ret 0xbae9
0x000000000045062f : dec dword ptr [rbx + rcx*4 + 0x25] ; int1 ; ret 0x26
0x0000000000471c28 : dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x00000000004711bb : dec dword ptr [rbx - 0x3b7cb7fa] ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000004604e3 : dec dword ptr [rcx + 0x39] ; ret
0x0000000000461bff : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000047c469 : dec dword ptr [rcx + 0x39] ; ret 0x860f
0x000000000046b385 : dec dword ptr [rcx + 0x63] ; ret
0x000000000046af07 : dec dword ptr [rcx + 0x63] ; ret 0x8545
0x00000000004021ad : dec dword ptr [rcx + 0x63] ; test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000047c6e5 : dec dword ptr [rcx + rax - 0x28] ; call rax
0x0000000000481a7d : dec dword ptr [rcx + rcx*4 + 0x2d] ; ret
0x000000000045825a : dec dword ptr [rcx + rcx*4 - 0x11] ; call r12
0x000000000044f169 : dec dword ptr [rcx + rcx*4 - 1] ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004583b1 : dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x000000000045868f : dec dword ptr [rcx + rcx*4 - 9] ; call rdx
0x000000000045db96 : dec dword ptr [rcx - 0x2f42763f] ; idiv bh ; call rax
0x0000000000489567 : dec dword ptr [rcx - 0x73] ; or byte ptr [rax - 0x77], r9b ; ret
0x000000000040e25f : dec dword ptr [rcx - 0x75] ; add byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000460447 : dec dword ptr [rcx - 0x77] ; ret
0x000000000047c7b0 : dec dword ptr [rcx - 0x77] ; ret 0x13e9
0x00000000004047b1 : dec dword ptr [rcx - 0x77] ; ret 0x149
0x000000000047d150 : dec dword ptr [rcx - 0x77] ; ret 0x9be9
0x000000000046aed4 : dec dword ptr [rcx - 0x77] ; ret 0xff31
0x000000000041c306 : dec dword ptr [rcx - 0x7b] ; ret
0x000000000046024f : dec dword ptr [rcx - 0x7d] ; ret
0x000000000049655b : dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x000000000046074b : dec dword ptr [rdi + rcx + 0x48] ; ret 0x958b
0x0000000000450c0b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000045326f : dec dword ptr [rdi] ; test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x00000000004464d0 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa2f : dec dword ptr [rdi] ; test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000047d8aa : dec dword ptr [rdi] ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004213dc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x00000000004188db : dec dword ptr [rdi] ; xchg eax, ebp ; sal bh, 0xd8 ; ret
0x0000000000495817 : dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004940ef : dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000494a2f : dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x000000000049657b : dec ecx ; jae 0x49657e ; call qword ptr [rax]
0x0000000000442481 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000480e48 : div bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004737a2 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000047e815 : div byte ptr [rbx + rax + 0x48] ; mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x00000000004587d1 : div byte ptr [rsp + rcx - 0x7d] ; inc byte ptr [rbx] ; je 0x4587e9 ; ret
0x0000000000465f36 : div eax ; add r9d, eax ; mov eax, r9d ; ret
0x000000000046fef6 : div ebp ; mov rbp, rax ; jmp 0x46fec5
0x0000000000448308 : div ecx ; mov eax, eax ; ret
0x00000000004482ef : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000046fef5 : div r13 ; mov rbp, rax ; jmp 0x46fec6
0x0000000000465f35 : div r8d ; add r9d, eax ; mov eax, r9d ; ret
0x000000000042b9c7 : enter -0x23b, -0x29 ; ret 0xc085
0x000000000047e770 : enter -0x3eb8, -8 ; add cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000446644 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x00000000004838ab : enter -0x72b8, 0x41 ; adc byte ptr [rdi], cl ; sahf ; ret 0x3948
0x000000000044233e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000044247e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x000000000042b7a7 : enter -0x73b, 0x77 ; ret
0x000000000047e87a : enter -0x76b8, -0x38 ; ret
0x000000000042c174 : enter -2, -1 ; ret
0x0000000000494501 : enter -7, -0x80 ; leave ; stc ; call rax
0x000000000046f48c : enter 0x117f, 1 ; clc ; mov rdx, r8 ; jmp 0x46f466
0x00000000004408c9 : enter 0x148, -8 ; vzeroupper ; ret
0x000000000046bdbc : enter 0x1b9, 0 ; add byte ptr [rax], al ; jmp rax
0x0000000000484671 : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000440c2e : enter 0x2948, -0x30 ; vzeroupper ; ret
0x0000000000425d2d : enter 0x31c3, -0x40 ; ret
0x0000000000446c30 : enter 0x357e, 0x48 ; movsxd rax, ecx ; ret
0x00000000004af5e4 : enter 0x3d, 0 ; pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004b2fe4 : enter 0x77, 0 ; pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004a963c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b45e4 : enter 0x8d, 0 ; sub dl, ch ; cld ; jmp qword ptr [rcx]
0x000000000042d416 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000440291 : enter 0xf66, -0x15 ; ret
0x000000000048d253 : fadd dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rbx + rbx*8 - 0xd], dh ; ret
0x000000000040fbd8 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040f757 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000465f23 : fadd qword ptr [rcx + rcx*4 - 0x38] ; ret
0x000000000042cf61 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000490064 : fbstp dword ptr [rbp - 0x17] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004a8c78 : fcmovb st(0), st(3) ; ret
0x0000000000440d4b : fcmovnb st(0), st(5) ; std ; xlatb ; ret
0x000000000045ec16 : fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000048d259 : fcomi st(3) ; ret
0x0000000000410579 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000410356 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a511 : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004a99f9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004a7c60 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000488558 : fdiv dword ptr [rbp + 0x11] ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048863f : fdiv dword ptr [rbp + 0x12] ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000494375 : fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494395 : fdiv st(1), st(0) ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x0000000000494499 : fdiv st(1), st(0) ; jmp qword ptr [rax]
0x00000000004943b5 : fdiv st(1), st(0) ; jmp rax
0x000000000048aea9 : fdiv st(3) ; ret
0x000000000049449d : fdivp st(1) ; call qword ptr [rax]
0x0000000000494399 : fdivp st(1) ; jmp rax
0x00000000004af5f8 : fdivr qword ptr [rip - 0x69ac0000] ; clc ; jmp qword ptr [rsi]
0x00000000004a6fb5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000446648 : fdivr st(7) ; ret
0x000000000040eff8 : fiadd dword ptr [rbp + 0x450f48c9] ; ret 0x8348
0x0000000000459775 : fiadd dword ptr [rbx] ; add byte ptr [rax + 0x63], cl ; ret
0x00000000004a9846 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004881b5 : fidivr dword ptr [rax + 1] ; ret
0x000000000049585c : fidivr word ptr [rip + 0x3dd4fffb] ; sti ; call rsp
0x0000000000424791 : fild word ptr [r9] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000464d12 : fild word ptr [rbp - 0x77] ; ret 0x8b4c
0x0000000000424792 : fild word ptr [rcx] ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000419d7c : fimul dword ptr [rax + 0x21] ; ret 0x8948
0x0000000000455419 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000480e37 : fimul dword ptr [rax + 0x39] ; ret 0x7472
0x00000000004658ad : fimul dword ptr [rax + 0x39] ; ret 0xe57f
0x000000000042a4f6 : fimul dword ptr [rax + rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046c22d : fimul dword ptr [rax - 0x3f] ; clc ; add cl, byte ptr [rax + 0x29] ; ret 0xb8
0x0000000000450daf : fimul word ptr [rax + 1] ; ret
0x00000000004844be : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x484518
0x00000000004882be : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x488318
0x0000000000421b31 : fimul word ptr [rcx + rcx*4 - 0x11] ; call 0x41dd76
0x00000000004167be : fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000470e90 : fistp word ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x00000000004589e7 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004834b1 : fisttp dword ptr [rax - 0x77] ; ret
0x00000000004666fc : fisttp dword ptr [rax - 0x7b] ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x000000000047f606 : fisttp dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret
0x000000000047807e : fisttp dword ptr [rax - 0x7d] ; ret
0x000000000048c680 : fisttp dword ptr [rbx + 0x63] ; add al, 0x99 ; add rax, r9 ; jmp rax
0x00000000004834cb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x00000000004550f7 : fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047d724 : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x0000000000420fcb : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret 0xd020
0x0000000000405d8e : fisttp qword ptr [rax - 0x7d] ; ret 0x4401
0x0000000000457d4a : fisttp qword ptr [rdi] ; ret 0xc389
0x0000000000480e42 : fisttp word ptr [rax - 0x77] ; ret 0x5de8
0x00000000004018e3 : fisttp word ptr [rax - 0x7d] ; ret
0x000000000048354f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000043f38d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000042d331 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d031 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494e2c : fisubr dword ptr [rcx] ; cli ; ljmp ptr [rdx + 0x29] ; cli ; call qword ptr [rax]
0x00000000004837c4 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x149
0x00000000004a7ca1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000473652 : fld st(5) ; std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000414503 : fldcw word ptr [rdx + 0x2a] ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000042b3d9 : fldenv dword ptr [rsi + 0xf] ; je 0x42b436 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6b7 : fldenv dword ptr [rsi + 0xf] ; je 0x42b714 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042d3b1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2d1 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x000000000046871c : fldpi ; stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000484564 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000041ae7f : fmul dword ptr [rax + 0x39] ; ret
0x0000000000412258 : fmul dword ptr [rax - 0x77] ; ret
0x000000000040e071 : fmul dword ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489ab4 : fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000477120 : fmul dword ptr [rcx + 0x21] ; ret
0x0000000000469100 : fmul dword ptr [rdi] ; ret
0x0000000000486d42 : fmul qword ptr [rax - 0x77] ; ret
0x0000000000424ae9 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000045f80f : fmul qword ptr [rdi] ; lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000457f48 : fmul qword ptr [rdi] ; ret 0xc389
0x000000000048f6a2 : fmulp st(4) ; and al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000042464f : fnsave dword ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004565ad : fnsave dword ptr [rdx + 0x68] ; mov rdx, rax ; jmp 0x456574
0x000000000040dae9 : fpatan ; ret
0x00000000004af639 : fprem ; call qword ptr [rax]
0x000000000042d131 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004a7987 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x00000000004a7d00 : fstp st(0) ; ret 0xde5d
0x0000000000449638 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, 0xffffffffffffffff ; ret
0x00000000004496c8 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x000000000042d431 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004411b4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000446a5b : fsub qword ptr [rsi + 0xf] ; jmp 0x446a27
0x000000000042d231 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004403ac : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000449c74 : fsubr st(3) ; ret 0xf66
0x00000000004a99d8 : fucom st(5) ; loop 0x4a9a31 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047a2b1 : fucomi st(3) ; ret 0x1f0f
0x0000000000463333 : fucompi st(0) ; call rax
0x000000000048b551 : fucompi st(1) ; ret
0x0000000000494431 : fyl2xp1 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x000000000044d4a3 : hlt ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x00000000004948dc : hlt ; add eax, 0x574fffa ; cli ; jmp rsp
0x000000000044ad31 : hlt ; call r15
0x00000000004a7d88 : hlt ; jmp 0x4a7d5d
0x00000000004b09b2 : hlt ; jmp qword ptr [rbx]
0x00000000004b3cda : hlt ; jmp qword ptr [rcx]
0x0000000000434d3a : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9ee : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000446153 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000400a5a : hlt ; nop dword ptr [rax + rax] ; ret
0x0000000000461228 : hlt ; pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a7ec3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000446157 : hlt ; sub eax, edx ; ret
0x0000000000476408 : hlt ; xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000045db9c : idiv bh ; call rax
0x000000000045ede4 : idiv bh ; inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000045e8f6 : idiv bh ; jmp qword ptr [rax]
0x0000000000450c06 : idiv byte ptr [rdx - 1] ; cmovs eax, edx ; ret
0x00000000004949dd : idiv cl ; jmp rax
0x000000000045deb6 : idiv edi ; call qword ptr [rax]
0x000000000045dd9e : idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x000000000046a8a1 : idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469afd : idiv edi ; inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x0000000000495101 : idiv edx ; call rax
0x0000000000495109 : idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x00000000004950fd : idiv edx ; inc eax ; idiv edx ; call rax
0x0000000000478b47 : imul al ; cmp edi, dword ptr [rcx - 8] ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b2141 : imul eax, dword ptr [rax], 0xfb93ac00 ; jmp qword ptr [rax]
0x0000000000444cb1 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000004681e2 : imul eax, dword ptr [rcx], 0xc7480000 ; ret 0xffe0
0x00000000004ad3e7 : imul ecx, dword ptr [rsi], 0x18 ; ret
0x0000000000495f79 : imul edi, ebx, 0xfb6934ff ; call rax
0x0000000000495f65 : imul edi, ebx, 0xfb6bf0ff ; jmp qword ptr [rax]
0x0000000000404944 : imul edi, edx, -1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041834e : imul esp, dword ptr [rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000044412c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000440e3c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000044c393 : in al, 0x80 ; cli ; cmp eax, 0x83497174 ; ret
0x000000000045e490 : in al, 0xf ; lahf ; ret
0x0000000000434d1a : in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000447dce : in al, 0xf3 ; ret
0x000000000041a647 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; call qword ptr [rdi]
0x000000000041fb85 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; int1 ; ret 2
0x000000000046fba7 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; lahf ; ret 0xfffd
0x000000000044fb20 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; push rsi ; ret
0x0000000000412d83 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000421684 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x2a7
0x000000000045e934 : in al, dx ; add dword ptr [rax - 0x93b43], eax ; jmp qword ptr [rax]
0x000000000045e771 : in al, dx ; add dword ptr [rbp - 0x7b], eax ; in al, 0xf ; lahf ; ret
0x0000000000414b71 : in al, dx ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042f9ea : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043511a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000041ee6f : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000042a8e4 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048de39 : in al, dx ; sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048a8b4 : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004b1ae4 : in al, dx ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000494a01 : in al, dx ; stc ; jmp rax
0x0000000000477fbd : in al, dx ; sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x00000000004a941e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93b1 ; ret 0x48f
0x00000000004a941d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93b2 ; ret 0x48f
0x0000000000497444 : in al, dx ; xor ah, bh ; call rsp
0x00000000004a7b23 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000484822 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004a6db9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x000000000048c37a : in eax, 0x83 ; call qword ptr [rcx]
0x00000000004636fd : in eax, 0xdf ; loopne 0x46368e ; ret
0x00000000004a99d9 : in eax, 0xe2 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000474913 : in eax, 0xf ; je 0x474938 ; add rax, 2 ; ret
0x0000000000448289 : in eax, 0xf0 ; cmovne rax, rdx ; pop rbx ; ret
0x0000000000434d9a : in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004943c9 : in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x00000000004944ad : in eax, 0xf9 ; call qword ptr [rax - 0x2f000641]
0x0000000000494389 : in eax, 0xf9 ; call rax
0x00000000004a8ea1 : in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004247db : in eax, 2 ; cmovne rax, rdx ; ret
0x0000000000466ca8 : in eax, dx ; add al, 0x84 ; ror byte ptr [rdi], 0x84 ; ret 0x17
0x0000000000469e38 : in eax, dx ; add dword ptr [rax - 0x91743], eax ; jmp qword ptr [rax]
0x000000000044a7ea : in eax, dx ; jne 0x44a807 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b355 : in eax, dx ; jne 0x44b37f ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b388 : in eax, dx ; jne 0x44b3d8 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3b4 : in eax, dx ; jne 0x44b438 ; mov rdi, qword ptr [rbp] ; call r12
0x00000000004900af : in eax, dx ; jne 0x490091 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000490302 : in eax, dx ; jne 0x4902ef ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490ebc : in eax, dx ; jne 0x490ea7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000446972 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000042f7fa : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000043519a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000460e2f : in eax, dx ; pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000416562 : in eax, dx ; ret
0x00000000004949c5 : in eax, dx ; stc ; jmp rax
0x0000000000469a61 : in eax, dx ; std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000446ac2 : in eax, dx ; sub rax, 1 ; ret
0x0000000000446dd8 : inc bl ; cmp dl, 1 ; jb 0x446dea ; mov byte ptr [rdi], cl ; ret
0x0000000000416b52 : inc byte ptr [rbp + 0x738948c9] ; cmp byte ptr [rdi], cl ; ret 0x389
0x000000000044a97c : inc byte ptr [rbp - 0x60f0be13] ; ret 0x8545
0x00000000004587d5 : inc byte ptr [rbx] ; je 0x4587e5 ; ret
0x000000000047f2b8 : inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049420b : inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x0000000000494547 : inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000494c57 : inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a3f : inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000496557 : inc dword ptr [rax + 0x4ffffb75] ; jae 0x496562 ; call qword ptr [rdi]
0x00000000004941ab : inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494033 : inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x000000000049475f : inc dword ptr [rax + 0xf] ; cli ; call rax
0x000000000049496f : inc dword ptr [rax + 3] ; cli ; jmp rax
0x000000000049441b : inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000494497 : inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494433 : inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x00000000004943af : inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004944df : inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000495057 : inc dword ptr [rax - 0x2f000556] ; stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x0000000000494323 : inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000494337 : inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x00000000004944f3 : inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x00000000004942ef : inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x000000000049423f : inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494313 : inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x0000000000495047 : inc dword ptr [rax - 0x5b] ; cli ; call qword ptr [rax - 0x1f00055a]
0x0000000000495017 : inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x00000000004941a3 : inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000494ff7 : inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x00000000004a3af7 : inc dword ptr [rax - 0x7f000351] ; scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x000000000046a58d : inc dword ptr [rax - 0x91743] ; jmp qword ptr [rax]
0x000000000045ee25 : inc dword ptr [rax - 0x93b43] ; jmp qword ptr [rax]
0x0000000000494537 : inc dword ptr [rax] ; adc al, 0xfa ; call qword ptr [rax + 0x20fffa13]
0x000000000049474f : inc dword ptr [rax] ; adc edx, edi ; call qword ptr [rax + 0x20fffa10]
0x000000000045ede6 : inc dword ptr [rax] ; add byte ptr [rax], al ; add cl, ch ; ret 0xfffa
0x000000000044822f : inc dword ptr [rax] ; add byte ptr [rax], al ; cmove rax, rcx ; pop rbx ; ret
0x000000000042d947 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000493f77 : inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x000000000049510b : inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495077 : inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000495153 : inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000494c47 : inc dword ptr [rax] ; cmp dl, bh ; call qword ptr [rax + 0x20fffa37]
0x00000000004943b3 : inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000494397 : inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004941b7 : inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942df : inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000494043 : inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x0000000000494f7f : inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000493fff : inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000495133 : inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x0000000000494193 : inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x00000000004550f4 : inc dword ptr [rbp + 0x31] ; fisttp dword ptr [rcx - 0x7d] ; ret
0x000000000047bd2f : inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004826ac : inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000402740 : inc dword ptr [rbp - 0x7aa48740] ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000400927 : inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000494de3 : inc dword ptr [rbx + rbp] ; cli ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x00000000004946bb : inc dword ptr [rbx + rdx - 6] ; call rsp
0x000000000040d4bb : inc dword ptr [rbx - 0x2f7cfe08] ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048e3a9 : inc dword ptr [rbx - 0x38b7f808] ; ret 0xffff
0x0000000000459850 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000048c5a3 : inc dword ptr [rbx - 0x7bf0bf1e] ; ret
0x000000000045eda4 : inc dword ptr [rbx - 0x8f743] ; call qword ptr [rax]
0x00000000004482ed : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000044825b : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000047f2b9 : inc dword ptr [rcx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460172 : inc dword ptr [rcx + 0x29] ; ret 0x8545
0x0000000000460db1 : inc dword ptr [rcx + 0xf] ; mov esi, 0x3d8d48c7 ; ret
0x0000000000480ff2 : inc dword ptr [rcx + rbp - 0x40] ; ret
0x00000000004525ae : inc dword ptr [rcx - 0x77] ; ret
0x0000000000455896 : inc dword ptr [rcx - 0x77] ; ret 0x5be9
0x0000000000459853 : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x0000000000469aff : inc dword ptr [rcx - 1] ; push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004ab75b : inc dword ptr [rcx] ; adc esi, edi ; call qword ptr [rcx + rdx]
0x00000000004945f3 : inc dword ptr [rdx + 0x14] ; cli ; call rdx
0x0000000000494bb3 : inc dword ptr [rdx + rdi - 6] ; call rsp
0x0000000000494823 : inc dword ptr [rdx] ; add eax, 0x472fffa ; cli ; jmp rdx
0x0000000000494b1b : inc dword ptr [rdx] ; cli ; call qword ptr [rdx + 0x22fffa35]
0x000000000043fb6d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x000000000049458f : inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x0000000000494a87 : inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x000000000048e182 : inc dword ptr [rsi*2 + 0x8b80f] ; add byte ptr [rax], al ; ret
0x000000000049457f : inc dword ptr [rsi] ; adc edi, edx ; call qword ptr [rsi + 0x26fffa12]
0x0000000000494a77 : inc dword ptr [rsi] ; cmp bh, dl ; call qword ptr [rsi + 0x26fffa39]
0x0000000000493f6f : inc eax ; and ecx, edi ; jmp rax
0x0000000000495127 : inc eax ; clc ; cli ; jmp rax
0x0000000000494f6f : inc eax ; cli ; call rax
0x00000000004950ff : inc eax ; idiv edx ; call rax
0x00000000004941cb : inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x000000000049514b : inc eax ; stc ; cli ; jmp rax
0x0000000000493f8f : inc eax ; sub bh, cl ; jmp rax
0x0000000000494eab : inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x00000000004942f3 : inc eax ; wait ; stc ; call qword ptr [rax]
0x0000000000494a5f : inc eax ; xor eax, 0x3550fffa ; cli ; jmp rax
0x00000000004ab747 : inc ebp ; adc dh, bh ; call rax
0x000000000042c29c : inc ebp ; std ; xlatb ; ret 0xe883
0x0000000000471f8c : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000446649 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000495807 : inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x00000000004634f0 : insb byte ptr [rdi], dx ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x3e8
0x00000000004248cb : insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x000000000042b064 : insb byte ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000403f96 : insb byte ptr [rdi], dx ; and al, 0x68 ; je 0x403fe1 ; xor edi, edi ; call 0x4201b9
0x000000000048e9db : insb byte ptr [rdi], dx ; and al, 8 ; jmp 0x48e9f7
0x00000000004a99de : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x000000000045d535 : insb byte ptr [rdi], dx ; ret 0x4c40
0x00000000004245e0 : insb byte ptr [rdi], dx ; xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x0000000000453266 : insd dword ptr [rdi], dx ; add al, 0 ; add bh, dh ; ret 0xf800
0x0000000000409ecf : insd dword ptr [rdi], dx ; add al, 0 ; add byte ptr [rbx - 0x7bf0fe08], al ; ret 4
0x00000000004244db : insd dword ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000485427 : insd dword ptr [rdi], dx ; and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000490132 : insd dword ptr [rdi], dx ; js 0x4901af ; ret 0x8b48
0x00000000004a99df : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004a7d8d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004a8c9f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000450dc5 : int 0x19
0x00000000004681da : int 0x80
0x0000000000474336 : int1 ; call rbx
0x0000000000491027 : int1 ; clc ; push rbx ; ret
0x0000000000495075 : int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x0000000000456472 : int1 ; je 0x456621 ; mov rdx, rax ; jmp 0x456439
0x0000000000456877 : int1 ; je 0x456621 ; mov rdx, rax ; jmp 0x45683e
0x00000000004568ee : int1 ; je 0x456621 ; mov rdx, rax ; jmp 0x4568b5
0x0000000000446d5b : int1 ; jl 0x446dac ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d7c : int1 ; jl 0x446dcd ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d8f : int1 ; jl 0x446de0 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e64 : int1 ; jl 0x446eb5 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446ebc : int1 ; jl 0x446f0d ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f59 : int1 ; jl 0x446faa ; adc dword ptr [rsi + 7], edx ; ret
0x00000000004481e5 : int1 ; jmp rcx
0x0000000000471ceb : int1 ; jne 0x471ce6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047e7b7 : int1 ; jne 0x47e794 ; ret
0x0000000000448309 : int1 ; mov eax, eax ; ret
0x0000000000434b8b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbf : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000446123 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004482f0 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000046112b : int1 ; pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000450633 : int1 ; ret 0x26
0x00000000004a93b6 : int1 ; ret 0x5803
0x000000000041fb8b : int1 ; ret 2
0x0000000000446127 : int1 ; sub eax, edx ; ret
0x0000000000400926 : iretd ; inc dword ptr [rbx + 0x438d01c1] ; call rbx
0x0000000000405d9d : ja 0x405d7e ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004138d8 : ja 0x41390a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000438a93 : ja 0x438a97 ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000444277 : ja 0x44427d ; ret
0x0000000000444293 : ja 0x44429d ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d4 : ja 0x4442e3 ; mov qword ptr [rdi], rcx ; ret
0x0000000000444359 : ja 0x44436d ; ret
0x00000000004443af : ja 0x4443c7 ; ret
0x0000000000444431 : ja 0x44444d ; ret
0x0000000000444897 : ja 0x4448a1 ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000004448b3 : ja 0x4448c1 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444904 : ja 0x444917 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004449e9 : ja 0x444a01 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444a5f : ja 0x444a7b ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444ae1 : ja 0x444b01 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000447064 : ja 0x447095 ; jb 0x447076 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473c4 : ja 0x44740a ; jb 0x4473d6 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447814 : ja 0x447872 ; jb 0x447826 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447de3 : ja 0x447e00 ; jb 0x447def ; mov byte ptr [rdi], cl ; ret
0x0000000000447f51 : ja 0x447f88 ; jb 0x447f60 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000448119 : ja 0x44815e ; jb 0x448128 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004496bb : ja 0x4496c3 ; ret
0x0000000000449709 : ja 0x449713 ; ret
0x0000000000449914 : ja 0x449973 ; ret
0x00000000004499aa : ja 0x4499b3 ; ret
0x00000000004499e7 : ja 0x449a43 ; ret
0x0000000000449a7d : ja 0x449a8b ; ret
0x0000000000449aad : ja 0x449abb ; ret
0x0000000000449cb7 : ja 0x449cfb ; ret
0x0000000000449d2d : ja 0x449d3b ; ret
0x000000000044a486 : ja 0x44a493 ; ret
0x000000000044c870 : ja 0x44c89d ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000044d595 : ja 0x44d5e9 ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000045b013 : ja 0x45b023 ; ret
0x0000000000465f22 : ja 0x465f05 ; mov eax, r9d ; ret
0x0000000000471c25 : ja 0x471c3d ; cli ; dec dword ptr [rbx - 0x14f3db8c] ; ret 0x5590
0x0000000000474df9 : ja 0x474dc7 ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047567b : ja 0x475683 ; ret
0x00000000004756cf : ja 0x4756db ; ret
0x00000000004759f0 : ja 0x475a1b ; ret
0x0000000000482f4e : ja 0x482fa0 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048dd3d : ja 0x48dd46 ; sbb eax, eax ; ret
0x00000000004a4e45 : ja 0x4a4e46 ; jmp qword ptr [rax]
0x00000000004a4e49 : ja 0x4a4e4a ; jmp qword ptr [rbx]
0x00000000004a9424 : ja 0x4a93ab ; ret 0x48f
0x00000000004b09b0 : ja 0x4b09b0 ; hlt ; jmp qword ptr [rbx]
0x00000000004b2fe5 : ja 0x4b2fed ; add byte ptr [rax + 0x14], bl ; cld ; jmp qword ptr [rax]
0x000000000041889d : jae 0x4188c5 ; movzx eax, byte ptr [rax] ; ret
0x00000000004190b3 : jae 0x4190b8 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044917e : jae 0x449180 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044962d : jae 0x449632 ; ret
0x000000000044a6bd : jae 0x44a6c2 ; ret
0x000000000044a6ed : jae 0x44a6f2 ; ret
0x000000000044a71d : jae 0x44a722 ; ret
0x000000000044bdc0 : jae 0x44bdc5 ; ret
0x000000000044bded : jae 0x44bdf2 ; ret
0x000000000044c0f4 : jae 0x44c0e3 ; ret
0x000000000045adbe : jae 0x45ae05 ; xor eax, eax ; pop rbx ; ret
0x00000000004755fd : jae 0x475602 ; ret
0x000000000047fa3b : jae 0x47f9e5 ; xor eax, eax ; ret
0x00000000004881b4 : jae 0x488197 ; mov eax, 1 ; ret
0x000000000048866d : jae 0x488672 ; ret
0x000000000048ecc6 : jae 0x48ecd9 ; mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000049655d : jae 0x49655c ; call qword ptr [rdi]
0x000000000049655c : jae 0x49655d ; call qword ptr [rdi]
0x000000000049657d : jae 0x49657c ; call qword ptr [rax]
0x00000000004a79e2 : jae 0x4a79c4 ; jo 0x4a7a60 ; mov ebp, 0xfb67d10d ; ret
0x00000000004a887e : jae 0x4a8859 ; push rsi ; pop rdx ; je 0x4a884e ; ret 0xacfc
0x00000000004ad142 : jae 0x4ad150 ; ret
0x00000000004b1455 : jae 0x4b1453 ; call qword ptr [rdx]
0x00000000004b1454 : jae 0x4b1454 ; call qword ptr [rdx]
0x00000000004b14d5 : jae 0x4b14d3 ; jmp rax
0x000000000041dd27 : jb 0x41dd11 ; mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000042457a : jb 0x4245fc ; sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000042dfca : jb 0x42dfda ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e11a : jb 0x42e12a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e26a : jb 0x42e27a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3ba : jb 0x42e3ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e50a : jb 0x42e51a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e65a : jb 0x42e66a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7aa : jb 0x42e7ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8fa : jb 0x42e90a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea4a : jb 0x42ea5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb9a : jb 0x42ebaa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ecea : jb 0x42ecfa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee3a : jb 0x42ee4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef8a : jb 0x42ef9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0da : jb 0x42f0ea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f22a : jb 0x42f23a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043099a : jb 0x4309aa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430aea : jb 0x430afa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c3a : jb 0x430c4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d8a : jb 0x430d9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430eda : jb 0x430eea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043102a : jb 0x43103a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043117a : jb 0x43118a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312ca : jb 0x4312da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043141a : jb 0x43142a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043156a : jb 0x43157a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316ba : jb 0x4316ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043180a : jb 0x43181a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043195a : jb 0x43196a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aaa : jb 0x431aba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bfa : jb 0x431c0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000043866e : jb 0x43867a ; mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000446dc5 : jb 0x446dd4 ; mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000446dd0 : jb 0x446de3 ; mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x0000000000446ddd : jb 0x446de5 ; mov byte ptr [rdi], cl ; ret
0x0000000000446fe4 : jb 0x446fed ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447066 : jb 0x447074 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447065 : jb 0x447075 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004473c6 : jb 0x4473d4 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447816 : jb 0x447824 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000447de5 : jb 0x447ded ; mov byte ptr [rdi], cl ; ret
0x0000000000447f53 : jb 0x447f5e ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x000000000044811b : jb 0x448126 ; mov byte ptr [rdi], cl ; vzeroupper ; ret
0x00000000004565ae : jb 0x45661c ; mov rdx, rax ; jmp 0x456573
0x0000000000494828 : jb 0x494831 ; cli ; jmp rdx
0x0000000000496525 : jb 0x496524 ; jmp rdx
0x0000000000496521 : jb 0x496524 ; ljmp ptr [rdx] ; jb 0x496528 ; jmp rdx
0x00000000004b3cd8 : jb 0x4b3ca5 ; hlt ; jmp qword ptr [rcx]
0x000000000040f341 : jbe 0x40f301 ; mov r11d, 1 ; jmp 0x40f316
0x00000000004108ff : jbe 0x410952 ; add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042b4d6 : jbe 0x42b515 ; add rax, rdi ; ret
0x000000000042b4e6 : jbe 0x42b517 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b4f6 : jbe 0x42b517 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b506 : jbe 0x42b517 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000042b917 : jbe 0x42b988 ; add rax, rdi ; vzeroupper ; ret
0x0000000000455fe2 : jbe 0x455fdc ; ret
0x000000000045d0b9 : jbe 0x45d079 ; mov r11d, 1 ; jmp 0x45d08e
0x0000000000481b5f : jbe 0x481b6b ; ret
0x0000000000494124 : jbe 0x4940bf ; stc ; call qword ptr [rsi]
0x00000000004a4e29 : jbe 0x4a4e2a ; jmp qword ptr [rbx]
0x00000000004b2e45 : jbe 0x4b2e4d ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x000000000040040e : je 0x400414 ; call rax
0x0000000000400a89 : je 0x400aa0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000400acb : je 0x400ae0 ; pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000403f99 : je 0x403fde ; xor edi, edi ; call 0x4201b6
0x000000000040596e : je 0x40597e ; add dword ptr [rax - 9], ecx ; ror byte ptr [rax + 1], 1 ; ret
0x000000000041244d : je 0x412478 ; cmp byte ptr [rax + 0x29], cl ; ret
0x00000000004129a8 : je 0x4129af ; ret
0x0000000000416711 : je 0x416740 ; or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129a9
0x0000000000416b95 : je 0x416ba3 ; ret
0x000000000041901c : je 0x419021 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422992 : je 0x4229be ; sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x0000000000422e83 : je 0x422e96 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000424542 : je 0x42450d ; ret
0x000000000042a2c3 : je 0x42a28d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b1aa : je 0x42b1b2 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000042b3dc : je 0x42b433 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042b6ba : je 0x42b711 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000042c085 : je 0x42c097 ; sbb eax, eax ; or eax, 1 ; ret
0x000000000042d6a7 : je 0x42d6b1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043d0e3 : je 0x43d0ad ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043ec73 : je 0x43ec3d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000440451 : je 0x440469 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000440a74 : je 0x440a7e ; bsf eax, edx ; ret
0x0000000000440a74 : je 0x440a7f ; bsf eax, edx ; ret
0x0000000000440b1d : je 0x440b35 ; bsf rax, rdx ; ret
0x0000000000440b1d : je 0x440b36 ; bsf rax, rdx ; ret
0x0000000000440abc : je 0x440b49 ; bsf rax, rdx ; ret
0x00000000004470f3 : je 0x447114 ; ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000044879e : je 0x4487ac ; xor eax, eax ; ret
0x0000000000448799 : je 0x4487b9 ; cmp eax, 2 ; je 0x4487b1 ; xor eax, eax ; ret
0x00000000004487ed : je 0x4487d3 ; ret
0x0000000000449fe7 : je 0x44a012 ; adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x2044
0x000000000044a54a : je 0x44a551 ; ret
0x000000000044bec9 : je 0x44bece ; ret
0x000000000044bf2d : je 0x44bf32 ; ret
0x000000000044c77c : je 0x44c78f ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000044d4a8 : je 0x44d4b3 ; ret
0x000000000044d4c4 : je 0x44d4d9 ; mov dword ptr [rip + 0x26b5ec], edx ; pop rbx ; ret
0x0000000000451545 : je 0x451573 ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000451cff : je 0x451d2e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000451fef : je 0x45201e ; mov rdi, qword ptr [rsp + 0x38] ; call r12
0x0000000000452337 : je 0x452366 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452576 : je 0x4525a5 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000452bde : je 0x452c0c ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453776 : je 0x4537a5 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000454802 : je 0x454831 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004552fb : je 0x45532a ; mov rdi, qword ptr [rsp + 0x38] ; call r15
0x00000000004556a3 : je 0x4556d2 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000455ae7 : je 0x455b16 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f22 : je 0x455f50 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004564e4 : je 0x456513 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456473 : je 0x456620 ; mov rdx, rax ; jmp 0x456438
0x0000000000456878 : je 0x456620 ; mov rdx, rax ; jmp 0x45683d
0x00000000004568ef : je 0x456620 ; mov rdx, rax ; jmp 0x4568b4
0x0000000000456813 : je 0x456842 ; mov rdi, qword ptr [rsp + 0x38] ; call r14
0x0000000000456d27 : je 0x456d56 ; mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000457162 : je 0x457190 ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004587d7 : je 0x4587e3 ; ret
0x00000000004587d2 : je 0x4587e8 ; cmp esi, 3 ; je 0x4587e8 ; ret
0x000000000045912a : je 0x459130 ; call rsi
0x0000000000459226 : je 0x45922c ; call rax
0x000000000045a62b : je 0x45a631 ; call rax
0x000000000045abee : je 0x45abfb ; ret
0x0000000000462fb1 : je 0x462de4 ; jmp 0x462f82
0x0000000000468d6c : je 0x468d97 ; and byte ptr [rax + 1], cl ; ret
0x0000000000470b66 : je 0x470bb6 ; add esp, 0x20 ; pop rbx ; ret
0x0000000000470b65 : je 0x470bb7 ; add esp, 0x20 ; pop rbx ; ret
0x00000000004719bc : je 0x4719c3 ; ret
0x00000000004719d9 : je 0x4719e6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471a13 : je 0x471a75 ; pop rbp ; pop r12 ; ret
0x0000000000471a9f : je 0x471b01 ; pop rbp ; pop r12 ; ret
0x0000000000471c2a : je 0x471c54 ; or al, 0xeb ; ret 0x5590
0x00000000004738ac : je 0x4738d5 ; bsf rax, rdx ; ret
0x00000000004738ac : je 0x4738d6 ; bsf rax, rdx ; ret
0x000000000047383c : je 0x4738e9 ; bsf rax, rdx ; ret
0x0000000000473d4b : je 0x473d53 ; ret
0x000000000047432e : je 0x47435d ; sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x0000000000474458 : je 0x474465 ; test edx, edx ; jne 0x474457 ; ret
0x00000000004748f9 : je 0x474919 ; mov cl, dl ; and cl, 0xf ; je 0x474929 ; ret
0x0000000000474900 : je 0x474922 ; ret
0x0000000000474915 : je 0x474936 ; add rax, 2 ; ret
0x0000000000475dd2 : je 0x475ed1 ; xor eax, eax ; leave ; ret
0x000000000047e816 : je 0x47e823 ; mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x0000000000480fed : je 0x480f3f ; sub eax, r8d ; ret
0x0000000000485122 : je 0x485136 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485628 : je 0x485653 ; or byte ptr [rax + 1], cl ; ret
0x000000000048721d : je 0x487262 ; shl rdx, 5 ; add rdx, rax ; jmp 0x487239
0x0000000000487de6 : je 0x487df3 ; ret
0x000000000048ac2d : je 0x48ac58 ; adc byte ptr [rcx - 0x77], cl ; ret
0x000000000048d1c8 : je 0x48d1b2 ; add rsp, 0x18 ; ret
0x000000000048d1b1 : je 0x48d1d6 ; add rsp, 0x18 ; ret
0x000000000048d258 : je 0x48d238 ; ret
0x000000000048d299 : je 0x48d2a6 ; mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000048f58a : je 0x48f593 ; ret
0x000000000048f5c3 : je 0x48f5d4 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5d9 ; ret
0x000000000048f69a : je 0x48f6a3 ; ret
0x0000000000490e33 : je 0x490e3e ; call rax
0x00000000004948e0 : je 0x4948ea ; cli ; jmp rsp
0x0000000000494de8 : je 0x494e17 ; cli ; jmp rsp
0x00000000004a4e05 : je 0x4a4e06 ; call qword ptr [rax]
0x00000000004a4e1d : je 0x4a4e1e ; jmp qword ptr [rbx]
0x00000000004a4e19 : je 0x4a4e1e ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4e85 : je 0x4a4e86 ; jmp qword ptr [rbx]
0x00000000004a7b48 : je 0x4a7b13 ; xor al, 0xd8 ; ret
0x00000000004a7d87 : je 0x4a7d84 ; jmp 0x4a7d5e
0x00000000004a8882 : je 0x4a884a ; ret 0xacfc
0x00000000004b2c4d : je 0x4b2c55 ; add byte ptr [rax - 4], dl ; sti ; jmp qword ptr [rbx]
0x00000000004b2c65 : je 0x4b2c6d ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x00000000004b2c64 : je 0x4b2c6e ; add byte ptr [rax - 4], ch ; sti ; jmp qword ptr [rbx]
0x0000000000416b92 : jg 0x416bd2 ; add byte ptr [rcx + rcx - 0xd], dh ; ret
0x000000000042fba9 : jg 0x42fbfc ; ret
0x000000000042fc2f : jg 0x42fc7a ; ret
0x000000000042fda9 : jg 0x42fdfc ; ret 0x894c
0x000000000042fe2f : jg 0x42fe7a ; ret 0x894c
0x0000000000432579 : jg 0x4325cc ; ret
0x00000000004325ff : jg 0x43264a ; ret
0x0000000000432779 : jg 0x4327cc ; ret 0x894c
0x00000000004327ff : jg 0x43284a ; ret 0x894c
0x0000000000434b68 : jg 0x434bb9 ; loope 0x434b67 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bdf : jg 0x434c2a ; ret 0xff2
0x0000000000434bf8 : jg 0x434c49 ; loop 0x434bf7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c6f : jg 0x434cba ; ret
0x0000000000434c88 : jg 0x434cd9 ; jrcxz 0x434c87 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d18 : jg 0x434d69 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434d98 : jg 0x434de9 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e18 : jg 0x434e69 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e98 : jg 0x434ee9 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434f18 : jg 0x434f69 ; call 0x4fc25f1a
0x0000000000434f98 : jg 0x434fe9 ; jmp 0x4fc25f9a
0x0000000000435118 : jg 0x435169 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435198 : jg 0x4351e9 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435228 : jg 0x435279 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004352a8 : jg 0x4352f9 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043531c : jg 0x435327 ; ret
0x0000000000435376 : jg 0x435389 ; ret
0x0000000000435371 : jg 0x4353c1 ; psllq mm1, qword ptr [rdi] ; jg 0x43538e ; ret
0x00000000004353e6 : jg 0x4353f9 ; ret
0x0000000000435456 : jg 0x435469 ; ret
0x0000000000435451 : jg 0x4354a1 ; or eax, 0xf7f0ff3 ; ret
0x00000000004354c6 : jg 0x4354d9 ; ret
0x00000000004354c1 : jg 0x435511 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435536 : jg 0x435549 ; ret
0x0000000000435531 : jg 0x435581 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355a6 : jg 0x4355b9 ; ret
0x00000000004355a1 : jg 0x4355f1 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435616 : jg 0x435629 ; ret
0x0000000000435611 : jg 0x435661 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435686 : jg 0x435699 ; ret
0x0000000000435681 : jg 0x4356d1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x00000000004356f6 : jg 0x435709 ; ret
0x0000000000435766 : jg 0x435779 ; ret
0x00000000004357d6 : jg 0x4357e9 ; ret
0x00000000004357d1 : jg 0x435821 ; add eax, 0xf7f0ff3 ; ret
0x0000000000435846 : jg 0x435859 ; ret
0x0000000000435841 : jg 0x435891 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004358b6 : jg 0x4358c9 ; ret
0x00000000004358b1 : jg 0x435901 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435926 : jg 0x435939 ; ret
0x0000000000435921 : jg 0x435971 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435996 : jg 0x4359a9 ; ret
0x0000000000435991 : jg 0x4359e1 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000437688 : jg 0x4376d9 ; loope 0x437687 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004376ff : jg 0x43774a ; ret 0xff2
0x0000000000437718 : jg 0x437769 ; loop 0x437717 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043778f : jg 0x4377da ; ret
0x00000000004377a8 : jg 0x4377f9 ; jrcxz 0x4377a7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437838 : jg 0x437889 ; in al, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004378b8 : jg 0x437909 ; in eax, 0xf3 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437938 : jg 0x437989 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004379b8 : jg 0x437a09 ; out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437a38 : jg 0x437a89 ; call 0x4fc28a3a
0x0000000000437ab8 : jg 0x437b09 ; jmp 0x4fc28aba
0x0000000000437c38 : jg 0x437c89 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437cb8 : jg 0x437d09 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437d48 : jg 0x437d99 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437dc8 : jg 0x437e19 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000437e3c : jg 0x437e47 ; ret
0x0000000000437e96 : jg 0x437ea9 ; ret
0x0000000000437e91 : jg 0x437ee1 ; psllq mm1, qword ptr [rdi] ; jg 0x437eae ; ret
0x0000000000437f06 : jg 0x437f19 ; ret
0x0000000000437f76 : jg 0x437f89 ; ret
0x0000000000437f71 : jg 0x437fc1 ; or eax, 0xf7f0ff3 ; ret
0x0000000000437fe6 : jg 0x437ff9 ; ret
0x0000000000437fe1 : jg 0x438031 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438056 : jg 0x438069 ; ret
0x0000000000438051 : jg 0x4380a1 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000004380c6 : jg 0x4380d9 ; ret
0x00000000004380c1 : jg 0x438111 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438136 : jg 0x438149 ; ret
0x0000000000438131 : jg 0x438181 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004381a6 : jg 0x4381b9 ; ret
0x00000000004381a1 : jg 0x4381f1 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438216 : jg 0x438229 ; ret
0x0000000000438286 : jg 0x438299 ; ret
0x00000000004382f6 : jg 0x438309 ; ret
0x00000000004382f1 : jg 0x438341 ; add eax, 0xf7f0ff3 ; ret
0x0000000000438366 : jg 0x438379 ; ret
0x0000000000438361 : jg 0x4383b1 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x00000000004383d6 : jg 0x4383e9 ; ret
0x00000000004383d1 : jg 0x438421 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438446 : jg 0x438459 ; ret
0x0000000000438441 : jg 0x438491 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004384b6 : jg 0x4384c9 ; ret
0x00000000004384b1 : jg 0x438501 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000438614 : jg 0x438625 ; vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x0000000000438628 : jg 0x438639 ; vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x0000000000438a9a : jg 0x438a96 ; ret
0x0000000000444346 : jg 0x444351 ; ret
0x0000000000444356 : jg 0x444364 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000044436a : jg 0x444379 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444389 : jg 0x444397 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444399 : jg 0x4443a7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000004443a9 : jg 0x4443ba ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000004443ca : jg 0x4443d9 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443ea : jg 0x4443f9 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000044440a : jg 0x444419 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044442a : jg 0x44443c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044446d : jg 0x44447f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044448d : jg 0x44449f ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000004444ab : jg 0x4444bb ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444cb : jg 0x4444db ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444eb : jg 0x4444fb ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000044450b : jg 0x44451b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004449d6 : jg 0x4449e5 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004449e6 : jg 0x4449f8 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444a19 : jg 0x444a2b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000444a39 : jg 0x444a4b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444b5f : jg 0x444bbf ; or eax, 0x1c478d48 ; ret
0x0000000000446da7 : jg 0x446db7 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000446d9d : jg 0x446dbd ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447234 : jg 0x44726c ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447302 : jg 0x44733a ; movups xmmword ptr [r11], xmm8 ; ret
0x00000000004473da : jg 0x4473eb ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000044756b : jg 0x447595 ; vzeroupper ; ret
0x0000000000447612 : jg 0x44761c ; vzeroupper ; ret
0x000000000044769e : jg 0x4476c8 ; vzeroupper ; ret
0x000000000044772e : jg 0x447738 ; vzeroupper ; ret
0x0000000000447842 : jg 0x447853 ; vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447a26 : jg 0x447a50 ; vzeroupper ; ret
0x0000000000447a25 : jg 0x447a51 ; vzeroupper ; ret
0x0000000000447aec : jg 0x447af6 ; vzeroupper ; ret
0x0000000000447aeb : jg 0x447af7 ; vzeroupper ; ret
0x0000000000447bbf : jg 0x447be9 ; vzeroupper ; ret
0x0000000000447bbe : jg 0x447bea ; vzeroupper ; ret
0x0000000000447c92 : jg 0x447c9c ; vzeroupper ; ret
0x0000000000447c91 : jg 0x447c9d ; vzeroupper ; ret
0x0000000000447cfc : jg 0x447d07 ; ret
0x0000000000447d4c : jg 0x447d57 ; ret
0x0000000000447e54 : jg 0x447e62 ; vzeroupper ; ret
0x0000000000447ea4 : jg 0x447eb2 ; vzeroupper ; ret
0x0000000000447f63 : jg 0x447f71 ; vzeroupper ; ret
0x0000000000447fe1 : jg 0x447fef ; vzeroupper ; ret
0x0000000000447fe0 : jg 0x447ff0 ; vzeroupper ; ret
0x0000000000448041 : jg 0x44804f ; vzeroupper ; ret
0x0000000000448040 : jg 0x448050 ; vzeroupper ; ret
0x000000000044812b : jg 0x448139 ; vzeroupper ; ret
0x0000000000448139 : jg 0x448147 ; vzeroupper ; ret
0x0000000000448190 : jg 0x4481cd ; ret 0x2b77
0x00000000004482ab : jg 0x448278 ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000448307 : jg 0x448305 ; int1 ; mov eax, eax ; ret
0x00000000004540f8 : jg 0x454085 ; ret 0xdb76
0x00000000004540f8 : jg 0x454089 ; ret 0xdb76
0x000000000045f0f2 : jg 0x45f10b ; test byte ptr [rip - 0x7c000011], al ; ret
0x00000000004696e2 : jg 0x4696fb ; test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000046ab5a : jg 0x46ab73 ; test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000046ac57 : jg 0x46ac70 ; test byte ptr [rax - 0x7c000019], ah ; ret
0x000000000046c79d : jg 0x46c751 ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000046f48d : jg 0x46f4a6 ; add eax, edi ; mov rdx, r8 ; jmp 0x46f465
0x000000000047f4a7 : jg 0x47f4b9 ; test rdi, rdi ; jne 0x47f488 ; ret
0x000000000048aa78 : jg 0x48aa82 ; add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000040df0a : jge 0x40df13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a815 : jge 0x44a81a ; call r12
0x000000000044a83d : jge 0x44a842 ; call r12
0x000000000044ad2d : jge 0x44acdd ; mov r12d, r14d ; call r15
0x000000000044b38d : jge 0x44b392 ; call r12
0x000000000044b3b9 : jge 0x44b3be ; call r12
0x000000000044b3ed : jge 0x44b3f2 ; call r12
0x000000000044b41d : jge 0x44b422 ; call r12
0x000000000044b445 : jge 0x44b44a ; call r12
0x000000000044b475 : jge 0x44b47a ; call r12
0x000000000048d612 : jge 0x48d60f ; leave ; ret
0x000000000048d790 : jge 0x48d793 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048d8dc : jge 0x48d8d9 ; leave ; ret
0x000000000048d928 : jge 0x48d92b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dab7 : jge 0x48daba ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048dc17 : jge 0x48dc14 ; leave ; ret
0x000000000048dc68 : jge 0x48dc6b ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000040113f : jl 0x40116d ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000404a46 : jl 0x404a71 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000040d438 : jl 0x40d463 ; or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x0000000000417062 : jl 0x41707e ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000041eaab : jl 0x41eaa5 ; ret 0x7508
0x0000000000438594 : jl 0x4385e3 ; adc dword ptr [rcx - 1], edi ; ret
0x00000000004385d0 : jl 0x43861f ; adc dword ptr [rcx - 1], ebx ; ret
0x00000000004387ce : jl 0x43881d ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438935 : jl 0x438984 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000438a97 : jl 0x438ae6 ; adc dword ptr [rdi - 8], edi ; ret
0x0000000000446d5c : jl 0x446dab ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d7d : jl 0x446dcc ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446d90 : jl 0x446ddf ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446e65 : jl 0x446eb4 ; adc dword ptr [rsi - 1], edx ; ret
0x0000000000446ebd : jl 0x446f0c ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000446f5a : jl 0x446fa9 ; adc dword ptr [rsi + 7], edx ; ret
0x0000000000447910 : jl 0x44792f ; cld ; vzeroupper ; ret
0x000000000044a8f2 : jl 0x44a920 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000450e31 : jl 0x450e5f ; and byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000451256 : jl 0x451284 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000453198 : jl 0x4531c6 ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000045377b : jl 0x4537a5 ; call r15
0x00000000004541ca : jl 0x4541f8 ; cmp byte ptr [rax - 0x75], cl ; and al, 0x18 ; call rax
0x0000000000455aec : jl 0x455b16 ; call r15
0x0000000000455f27 : jl 0x455f50 ; call rbx
0x0000000000455fdd : jl 0x45600a ; add byte ptr [rsi + rsi*2 - 0xa], sil ; ret
0x000000000045670d : jl 0x456737 ; or al, 0xe9 ; ret
0x0000000000456d2c : jl 0x456d56 ; call r15
0x0000000000457167 : jl 0x457190 ; call rbx
0x000000000045721d : jl 0x45724a ; add byte ptr [rdx + rdi*2 - 0xa], sil ; ret
0x000000000045b207 : jl 0x45b232 ; and byte ptr [rax + 1], cl ; ret
0x000000000045b67e : jl 0x45b6a9 ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000045b9c6 : jl 0x45b9f1 ; xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x00000000004673ab : jl 0x4673d8 ; add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x0000000000468a95 : jl 0x468ac0 ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047b6a5 : jl 0x47b6d0 ; or byte ptr [rax - 0x7d], cl ; ret 0x101
0x00000000004826b5 : jl 0x4826e3 ; sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x00000000004947f0 : jl 0x4947f8 ; cli ; jmp qword ptr [rdx]
0x00000000004aa8b4 : jl 0x4aa85f ; std ; jmp rbx
0x00000000004b14d4 : jl 0x4b154c ; cli ; jmp rax
0x0000000000440abe : jle 0x440ac7 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000440abe : jle 0x440ac8 ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000446c31 : jle 0x446c6d ; movsxd rax, ecx ; ret
0x0000000000458822 : jle 0x458835 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000403b94 : jmp 0x403bbe
0x0000000000404943 : jmp 0x4043ba
0x000000000040f349 : jmp 0x40f30e
0x00000000004147f2 : jmp 0x4147b8
0x0000000000416344 : jmp 0x41636e
0x000000000041d861 : jmp 0x41d798
0x0000000000440294 : jmp 0x44025a
0x00000000004403e8 : jmp 0x4403ad
0x00000000004404ac : jmp 0x440472
0x00000000004405f8 : jmp 0x4405bd
0x000000000044691e : jmp 0x4468e4
0x00000000004469ef : jmp 0x4469b5
0x0000000000446a5e : jmp 0x446a24
0x00000000004494c3 : jmp 0x449351
0x0000000000449841 : jmp 0x44979e
0x0000000000449bd1 : jmp 0x449b31
0x0000000000449c75 : jmp 0x449c3a
0x0000000000449d1b : jmp 0x449ce0
0x000000000045d0c1 : jmp 0x45d086
0x000000000045d15e : jmp 0x45d122
0x000000000045fc0e : jmp 0x45de64
0x000000000045f4a3 : jmp 0x45f4a8
0x0000000000462fb7 : jmp 0x462f7c
0x000000000046a8d8 : jmp 0x46a89e
0x000000000046f204 : jmp 0x46f1c9
0x000000000046f203 : jmp 0x46f1ca
0x000000000046fefb : jmp 0x46fec0
0x00000000004725b3 : jmp 0x472579
0x0000000000475811 : jmp 0x475763
0x0000000000478a12 : jmp 0x47886d
0x000000000047a2b2 : jmp 0x47a277
0x00000000004844c2 : jmp 0x484514
0x0000000000485c3a : jmp 0x485c00
0x00000000004882c2 : jmp 0x488314
0x000000000048e9de : jmp 0x48e9f4
0x00000000004a704a : jmp 0x4a7089
0x00000000004a7d89 : jmp 0x4a7d5c
0x00000000004a8d80 : jmp 0x4a8d14
0x00000000004a8d7f : jmp 0x4a8d15
0x0000000000434f9a : jmp 0x4fc25f98
0x0000000000434f99 : jmp 0x4fc25f99
0x0000000000437aba : jmp 0x4fc28ab8
0x0000000000437ab9 : jmp 0x4fc28ab9
0x0000000000482f51 : jmp 0xffffffffc357b8a6
0x000000000047ba99 : jmp 0xffffffffeb097d29
0x0000000000475593 : jmp 0xfffffffff6791823
0x0000000000494017 : jmp qword ptr [rax + 0x10fff95a]
0x00000000004947a7 : jmp qword ptr [rax + 0x10fffa04]
0x000000000049472f : jmp qword ptr [rax + 0x10fffa0d]
0x0000000000494ff3 : jmp qword ptr [rax + 0x40fffa8a]
0x00000000004a3e67 : jmp qword ptr [rax + 0x8fffcb6]
0x00000000004949ef : jmp qword ptr [rax - 0x1f00061a]
0x000000000040e311 : jmp qword ptr [rax]
0x00000000004a4e0b : jmp qword ptr [rbx]
0x00000000004956fb : jmp qword ptr [rcx - 0x2b0004c3]
0x0000000000492733 : jmp qword ptr [rcx]
0x00000000004956f3 : jmp qword ptr [rdi]
0x00000000004947f7 : jmp qword ptr [rdx + 0x12fffa0a]
0x00000000004697b5 : jmp qword ptr [rdx + rax*8]
0x000000000049273f : jmp qword ptr [rdx - 0x29000907]
0x000000000049462b : jmp qword ptr [rdx]
0x0000000000448449 : jmp qword ptr [rsi + 0xf]
0x000000000044c8be : jmp qword ptr [rsi]
0x0000000000424999 : jmp r10
0x0000000000480160 : jmp r11
0x000000000042d99d : jmp r9
0x0000000000494ffb : jmp rax
0x0000000000480161 : jmp rbx
0x0000000000422502 : jmp rcx
0x000000000040d54e : jmp rdi
0x000000000040d265 : jmp rdx
0x0000000000459f27 : jmp rsi
0x00000000004946e3 : jmp rsp
0x000000000040058d : jne 0x400594 ; ret
0x0000000000403b92 : jne 0x403ba6 ; jmp 0x403bc0
0x0000000000405dbc : jne 0x405dd0 ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000040dae8 : jne 0x40dac6 ; ret
0x000000000040dbdb : jne 0x40dc05 ; add rsp, 0x118 ; ret
0x000000000040f752 : jne 0x40f765 ; add rsp, 0xd8 ; ret
0x00000000004148c5 : jne 0x4148d3 ; ret
0x0000000000416342 : jne 0x416356 ; jmp 0x416370
0x00000000004164e8 : jne 0x41653c ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000416561 : jne 0x416553 ; ret
0x000000000041747e : jne 0x417473 ; ret
0x0000000000417ab1 : jne 0x417a77 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417afc : jne 0x417af5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000418416 : jne 0x41840b ; ret
0x000000000041a070 : jne 0x41a07f ; add rsp, 0x20 ; pop rbx ; ret
0x000000000041f74c : jne 0x41f713 ; ret
0x0000000000422bfa : jne 0x422b81 ; ret
0x0000000000422f07 : jne 0x422ef6 ; sub rax, 0x10 ; ret
0x0000000000425fec : jne 0x425fd6 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042b487 : jne 0x42b4e4 ; xor eax, eax ; ret
0x000000000042b457 : jne 0x42b508 ; xor eax, eax ; ret
0x000000000042b903 : jne 0x42b927 ; xor eax, eax ; vzeroupper ; ret
0x000000000042c03a : jne 0x42c045 ; vzeroupper ; ret
0x000000000042c134 : jne 0x42c046 ; ret
0x000000000042c27f : jne 0x42c049 ; vzeroupper ; ret
0x000000000042d8ed : jne 0x42d917 ; xor eax, eax ; ret
0x000000000042cee1 : jne 0x42d91b ; xor eax, eax ; ret
0x000000000042cf09 : jne 0x42d927 ; xor eax, eax ; ret
0x0000000000444cc5 : jne 0x444c56 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000444c97 : jne 0x444c56 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444c96 : jne 0x444c57 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000446424 : jne 0x446638 ; xor eax, eax ; ret
0x0000000000446629 : jne 0x446649 ; xor eax, eax ; ret
0x00000000004464d1 : jne 0x44664d ; xor eax, eax ; ret
0x0000000000446641 : jne 0x44664e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000446751 : jne 0x446742 ; ret
0x0000000000446801 : jne 0x4467f2 ; ret
0x0000000000446971 : jne 0x446966 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000446ac1 : jne 0x446ab6 ; sub rax, 1 ; ret
0x0000000000447dcd : jne 0x447db6 ; ret
0x0000000000447f34 : jne 0x447f1c ; vzeroupper ; ret
0x00000000004480f7 : jne 0x4480d7 ; vzeroupper ; ret
0x00000000004488cf : jne 0x4488fb ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000449687 : jne 0x44969f ; add rsp, 0x28 ; ret
0x00000000004498b7 : jne 0x449901 ; add rsp, 0x58 ; ret
0x0000000000449c71 : jne 0x449c3e ; neg eax ; jmp 0x449c3e
0x0000000000449c47 : jne 0x449c99 ; add rsp, 0x68 ; ret
0x000000000044a5b6 : jne 0x44a5cd ; add rsp, 0x28 ; ret
0x000000000044a7eb : jne 0x44a806 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044a811 : jne 0x44a857 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a839 : jne 0x44a877 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b356 : jne 0x44b37e ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b389 : jne 0x44b3d7 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3b5 : jne 0x44b437 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b441 : jne 0x44b4a8 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b471 : jne 0x44b4d9 ; mov rdi, qword ptr [r13] ; call r12
0x000000000044be72 : jne 0x44be69 ; pop rdx ; pop r10 ; ret
0x000000000044f16f : jne 0x44f103 ; call rsi
0x000000000045ad2f : jne 0x45ad3c ; add rsp, 0x18 ; ret
0x000000000045af77 : jne 0x45afcc ; add rsp, 0x148 ; ret
0x0000000000468992 : jne 0x4689a5 ; add rsp, 0xd8 ; ret
0x0000000000470aa1 : jne 0x470a93 ; ret
0x0000000000471cec : jne 0x471ce5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004737a3 : jne 0x4737ae ; xor rax, rax ; ret
0x0000000000473ba3 : jne 0x473bd8 ; mov rax, r8 ; vzeroupper ; ret
0x000000000047445c : jne 0x474453 ; ret
0x0000000000474463 : jne 0x47446e ; xor rax, rax ; ret
0x00000000004746fb : jne 0x4746b6 ; mov rax, rdx ; ret
0x000000000047587c : jne 0x4758c9 ; add rsp, 0x58 ; ret
0x00000000004758ff : jne 0x475912 ; movzx eax, al ; add rsp, 0x58 ; ret
0x00000000004759ae : jne 0x4759d1 ; add rsp, 0x38 ; ret
0x000000000047e7ca : jne 0x47e770 ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000047e7b8 : jne 0x47e793 ; ret
0x000000000047f457 : jne 0x47f471 ; mov rax, qword ptr [rip + 0x23cf50] ; ret
0x000000000047f4ac : jne 0x47f483 ; ret
0x0000000000480f69 : jne 0x480f41 ; movsx eax, cl ; neg eax ; ret
0x0000000000481d5a : jne 0x481d69 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000481e55 : jne 0x481e89 ; add rsp, 0x38 ; ret
0x0000000000481f15 : jne 0x481f44 ; add rsp, 0x68 ; ret
0x0000000000482076 : jne 0x4820b4 ; add rsp, 0x78 ; ret
0x0000000000482345 : jne 0x482374 ; add rsp, 0x68 ; ret
0x0000000000484381 : jne 0x4843c1 ; leave ; ret
0x0000000000484821 : jne 0x48480d ; mov rax, rsi ; ret
0x00000000004848a5 : jne 0x484885 ; mov rax, rsi ; ret
0x000000000048500d : jne 0x48501a ; add rsp, 0x38 ; ret
0x00000000004850f0 : jne 0x48510a ; add rsp, 0x38 ; ret
0x0000000000487806 : jne 0x487830 ; ret
0x0000000000487805 : jne 0x487831 ; ret
0x00000000004878bb : jne 0x4878c2 ; pop rbx ; ret
0x000000000048844b : jne 0x488462 ; add rsp, 0x38 ; ret
0x0000000000488559 : jne 0x488573 ; add rsp, 0x40 ; pop rbx ; ret
0x0000000000488640 : jne 0x48865b ; add rsp, 0x50 ; pop rbx ; ret
0x000000000048b029 : jne 0x48b04c ; xor eax, eax ; ret
0x000000000048b011 : jne 0x48b051 ; mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048d240 : jne 0x48d261 ; mov rax, qword ptr [rax] ; ret
0x000000000048d2af : jne 0x48d2ba ; mov qword ptr [rax], rdx ; ret
0x000000000048d60e : jne 0x48d607 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d8d8 : jne 0x48d8d1 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048dc13 : jne 0x48dc0c ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048e164 : jne 0x48e183 ; ret
0x000000000048e184 : jne 0x48e19c ; mov eax, 8 ; ret
0x000000000048e1af : jne 0x48e1de ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048e1c9 : jne 0x48e1e2 ; xor eax, eax ; ret
0x000000000048f00f : jne 0x48f03e ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f029 : jne 0x48f042 ; xor eax, eax ; ret
0x000000000048f5c9 : jne 0x48f5d3 ; ret
0x000000000048f5e4 : jne 0x48f5f3 ; ret
0x000000000048f814 : jne 0x48f823 ; ret
0x000000000048fa99 : jne 0x48fabc ; xor eax, eax ; ret
0x0000000000490065 : jne 0x490058 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004900b0 : jne 0x490090 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004901f5 : jne 0x4901db ; pop rbx ; ret
0x0000000000490303 : jne 0x4902ee ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490ebd : jne 0x490ea6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491041 : jne 0x491058 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496559 : jne 0x49655c ; dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x00000000004b2dfd : jne 0x4b2e05 ; add al, ah ; add al, 0xfc ; jmp rdx
0x00000000004001c6 : jno 0x400214 ; adc dword ptr [rbx], ebx ; stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x000000000042d19e : jno 0x42d1ad ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000438590 : jno 0x438599 ; vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x00000000004387ca : jno 0x4387d3 ; vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x0000000000438931 : jno 0x438942 ; vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x0000000000438a96 : jno 0x438b1a ; adc qword ptr [rdi - 8], rdi ; ret
0x0000000000482e44 : jno 0x482e96 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004248a1 : jnp 0x4248d4 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004248a1 : jnp 0x4248d5 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a7865 : jnp 0x4a7822 ; ret
0x000000000042453f : jns 0x424547 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x0000000000438597 : jns 0x43859a ; ret
0x00000000004387d1 : jns 0x4387d4 ; ret
0x0000000000438938 : jns 0x438943 ; ret
0x000000000044b3b6 : jns 0x44b406 ; mov edi, dword ptr [rbp] ; call r12
0x0000000000478b4a : jns 0x478b49 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000048aefe : jns 0x48af0b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048d1ae : jns 0x48d1f1 ; add byte ptr [rbp + rbx + 0x48], dh ; add esp, 0x18 ; ret
0x000000000048df1e : jns 0x48df2b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x000000000048fb1e : jns 0x48fb2b ; mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x00000000004a696e : jns 0x4a6904 ; ret 0xf869
0x00000000004a696d : jns 0x4a6905 ; ret 0xf869
0x00000000004a8d7e : jns 0x4a8dd5 ; jmp 0x4a8d16
0x00000000004146e4 : jo 0x414735 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000414714 : jo 0x414765 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000044a35d : jo 0x44a361 ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c102 : jo 0x44c126 ; ret
0x0000000000453070 : jo 0x45307a ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000470b1a : jo 0x470b32 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000473e16 : jo 0x473e78 ; pop rbp ; pop r12 ; ret
0x000000000047402d : jo 0x47408f ; pop rbp ; pop r12 ; ret
0x0000000000482234 : jo 0x48229a ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000493f6c : jo 0x493f7f ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000494004 : jo 0x49405c ; stc ; jmp rax
0x0000000000494270 : jo 0x49422a ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494494 : jo 0x494477 ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494938 : jo 0x494947 ; cli ; jmp rax
0x0000000000494ea0 : jo 0x494ed0 ; cli ; jmp rax
0x0000000000495f8c : jo 0x496000 ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000496541 : jo 0x496540 ; call rbx
0x000000000049656d : jo 0x49656c ; call rbx
0x0000000000496579 : jo 0x49657c ; dec ecx ; jae 0x496580 ; call qword ptr [rax]
0x00000000004a79e4 : jo 0x4a7a5e ; mov ebp, 0xfb67d10d ; ret
0x00000000004aea7c : jo 0x4aea83 ; ret 0xa01
0x00000000004af610 : jo 0x4af5cd ; clc ; call qword ptr [rax]
0x00000000004afa80 : jo 0x4afa0a ; stc ; call qword ptr [rbx]
0x0000000000457222 : jp 0x45721c ; ret
0x0000000000468a54 : jp 0x468a54 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004af92d : jp 0x4af92a ; call rsp
0x0000000000434c8a : jrcxz 0x434c85 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434c89 : jrcxz 0x434c86 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377aa : jrcxz 0x4377a5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004377a9 : jrcxz 0x4377a6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044bec3 : jrcxz 0x44be88 ; cmp r11d, 0xa ; je 0x44bed4 ; ret
0x00000000004682df : jrcxz 0x4682e5 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x00000000004682de : jrcxz 0x4682e6 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x0000000000490304 : jrcxz 0x490366 ; pop rbp ; pop r12 ; ret
0x0000000000494385 : jrcxz 0x494382 ; call rax
0x00000000004944a9 : jrcxz 0x4944a6 ; jmp rax
0x00000000004a67c5 : jrcxz 0x4a681f ; ret
0x00000000004aa8c8 : jrcxz 0x4aa873 ; std ; jmp rbx
0x000000000040e9a5 : js 0x40e9c9 ; call rdx
0x00000000004719b9 : js 0x4719f1 ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x0000000000478c20 : js 0x478c1f ; dec dword ptr [rax - 0x77] ; ret
0x000000000047bd32 : js 0x47bd45 ; pop rbx ; ret
0x000000000048d466 : js 0x48d473 ; add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000048d473 : js 0x48d47f ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000490133 : js 0x4901ae ; ret 0x8b48
0x00000000004a4e09 : js 0x4a4e0a ; jmp qword ptr [rbx]
0x00000000004ab268 : js 0x4ab269 ; std ; call rax
0x00000000004ab267 : js 0x4ab26a ; std ; call rax
0x00000000004ab266 : js 0x4ab26b ; std ; call rax
0x00000000004abcc8 : js 0x4abc60 ; cmc ; call qword ptr [rdx]
0x00000000004af778 : js 0x4af7c4 ; stc ; jmp qword ptr [rbx]
0x00000000004b2e48 : js 0x4b2e58 ; cld ; jmp qword ptr [rax]
0x000000000046b2e3 : lahf ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret
0x000000000045584b : lahf ; add dword ptr [rax], eax ; add al, ch ; pushfq ; ret 0xfffa
0x0000000000456475 : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb2eb
0x000000000041f13f : lahf ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004a8ea3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000047e7cb : lahf ; mov eax, dword ptr [rdx + 4] ; ret
0x000000000043f8cd : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045eb8f : lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000044aacb : lahf ; ret
0x0000000000418dbf : lahf ; ret 0x3949
0x0000000000418e72 : lahf ; ret 0x48e9
0x000000000044a981 : lahf ; ret 0x8545
0x00000000004a66fd : lahf ; ret 0x871e
0x0000000000448189 : lahf ; ret 0xea81
0x000000000048c821 : lahf ; ret 0xf45
0x000000000046fbad : lahf ; ret 0xfffd
0x000000000041f8d9 : lahf ; sub dword ptr [rax], eax ; ret
0x000000000043ff5d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000495813 : lcall ptr [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004a4e03 : lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4e1b : lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4e17 : lcall ptr [rax + 0x74] ; std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004941af : lcall ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x000000000041ac62 : lcall ptr [rbx + 0x48] ; mov eax, edi ; pop rbp ; pop r12 ; ret
0x00000000004194c0 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000412025 : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000411dab : lcall ptr [rbx + 0x5d] ; ret
0x000000000047fdf6 : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004106de : lcall ptr [rbx - 0x77] ; rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x000000000049651f : lcall ptr [rdi + 0x72] ; sti ; ljmp ptr [rdx] ; jb 0x49652a ; jmp rdx
0x0000000000494ba7 : lcall ptr [rsi + 0x2efffa34] ; xor al, 0xfa ; call rsp
0x00000000004945e7 : lcall ptr [rsi + rcx + 0xe2cfffa] ; cli ; call rdx
0x00000000004aa8bf : lcall ptr [rsi - 0x594b0003] ; std ; jmp rbx
0x0000000000435316 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000417b0b : lea eax, dword ptr [r8 - 1] ; ret
0x000000000048af1c : lea eax, dword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4b4 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000042b4c4 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000042b494 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x0000000000417b0c : lea eax, dword ptr [rax - 1] ; ret
0x00000000004734cd : lea eax, dword ptr [rcx + rsi] ; ret
0x0000000000446974 : lea eax, dword ptr [rcx - 1] ; ret
0x00000000004449ec : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000444a01 : lea eax, dword ptr [rdi + 0x11] ; ret
0x0000000000444a1f : lea eax, dword ptr [rdi + 0x12] ; ret
0x0000000000444a3f : lea eax, dword ptr [rdi + 0x13] ; ret
0x0000000000444a62 : lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000444a81 : lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000444aa1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000444ac1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000444ae4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000444b09 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000444b27 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000444b47 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x0000000000444b63 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x0000000000444b83 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x0000000000444ba3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000444bc3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000044493d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000044495d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000044497f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000044499f : lea eax, dword ptr [rdi + 0xd] ; ret
0x00000000004449bf : lea eax, dword ptr [rdi + 0xe] ; ret
0x00000000004449d9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x0000000000444887 : lea eax, dword ptr [rdi + 1] ; ret
0x000000000044489a : lea eax, dword ptr [rdi + 2] ; ret
0x00000000004448a5 : lea eax, dword ptr [rdi + 3] ; ret
0x00000000004448b8 : lea eax, dword ptr [rdi + 4] ; ret
0x00000000004448cd : lea eax, dword ptr [rdi + 5] ; ret
0x00000000004448eb : lea eax, dword ptr [rdi + 6] ; ret
0x00000000004448f7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000044490a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000044491f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000042b4e9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000042b4f9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000042b3f3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000473715 : lea eax, dword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440457 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000446cca : lea eax, dword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004733c9 : lea eax, dword ptr [rdi + rsi] ; ret
0x0000000000444873 : lea eax, dword ptr [rdi] ; ret
0x0000000000443e5d : lea eax, dword ptr [rdx + 0xa] ; ret
0x0000000000443e7d : lea eax, dword ptr [rdx + 0xb] ; ret
0x0000000000443e9f : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000443ebf : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000443edf : lea eax, dword ptr [rdx + 0xe] ; ret
0x0000000000443d6f : lea eax, dword ptr [rdx + 0xf] ; ret
0x0000000000443d97 : lea eax, dword ptr [rdx + 1] ; ret
0x0000000000443dad : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000443dc5 : lea eax, dword ptr [rdx + 3] ; ret
0x0000000000443ddb : lea eax, dword ptr [rdx + 4] ; ret
0x0000000000443ded : lea eax, dword ptr [rdx + 5] ; ret
0x0000000000443e0b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000443d17 : lea eax, dword ptr [rdx + 7] ; ret
0x0000000000443e1d : lea eax, dword ptr [rdx + 8] ; ret
0x0000000000443e3d : lea eax, dword ptr [rdx + 9] ; ret
0x0000000000417afe : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004482a3 : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000422e86 : lea eax, dword ptr [rdx - 0x10] ; ret
0x0000000000443d85 : lea eax, dword ptr [rdx] ; ret
0x00000000004248f8 : lea eax, dword ptr [rip + 0x1bb12] ; cmove rax, rdx ; ret
0x0000000000423998 : lea eax, dword ptr [rip + 0x1d0a2] ; cmove rax, rdx ; ret
0x00000000004244af : lea eax, dword ptr [rip + 0x221ab] ; cmove rax, rdx ; ret
0x0000000000424838 : lea eax, dword ptr [rip + 0x22732] ; cmovne rax, rdx ; ret
0x00000000004246f8 : lea eax, dword ptr [rip + 0x22862] ; cmovne rax, rdx ; ret
0x0000000000424598 : lea eax, dword ptr [rip + 0x229d2] ; cmovne rax, rdx ; ret
0x000000000042489f : lea eax, dword ptr [rip + 0x22a7b] ; cmovne rax, rdx ; ret
0x000000000042475f : lea eax, dword ptr [rip + 0x22bab] ; cmovne rax, rdx ; ret
0x00000000004245ff : lea eax, dword ptr [rip + 0x22d1b] ; cmovne rax, rdx ; ret
0x000000000042487e : lea eax, dword ptr [rip + 0x22ecc] ; cmovne rax, rdx ; ret
0x000000000042473e : lea eax, dword ptr [rip + 0x22ffc] ; cmovne rax, rdx ; ret
0x00000000004245de : lea eax, dword ptr [rip + 0x2316c] ; cmovne rax, rdx ; ret
0x000000000042391f : lea eax, dword ptr [rip + 0x231db] ; cmovne rax, rdx ; ret
0x000000000042466a : lea eax, dword ptr [rip + 0x23660] ; cmovne rax, rdx ; ret
0x000000000042464d : lea eax, dword ptr [rip + 0x237dd] ; cmovne rax, rdx ; ret
0x000000000042469e : lea eax, dword ptr [rip + 0x2390c] ; cmovne rax, rdx ; ret
0x000000000044d491 : lea eax, dword ptr [rip + 0x26ce69] ; ret
0x00000000004851af : lea eax, dword ptr [rip + 0x5b] ; cmovne rax, rdx ; ret
0x00000000004248c8 : lea eax, dword ptr [rip + 0x6c52] ; cmove rax, rdx ; ret
0x00000000004244d8 : lea eax, dword ptr [rip + 0x6d12] ; cmove rax, rdx ; ret
0x000000000042453c : lea eax, dword ptr [rip + 0x79ee] ; je 0x424513 ; ret
0x00000000004728e8 : lea eax, dword ptr [rip + 0x9f2] ; cmove rax, rdx ; ret
0x0000000000473cf8 : lea eax, dword ptr [rip + 0xa22] ; cmove rax, rdx ; ret
0x00000000004728b8 : lea eax, dword ptr [rip + 0xee2] ; cmove rax, rdx ; ret
0x000000000045f811 : lea ebp, dword ptr [rdx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0x63], cl ; ret
0x000000000040e031 : lea ebx, dword ptr [rdi + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004a6fb1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000473ecb : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000474066 : lea ecx, dword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000472304 : lea ecx, dword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x000000000042da00 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000044410e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000468ed4 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000422e96 : lea ecx, dword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x00000000004844c0 : lea ecx, dword ptr [rdx] ; jmp 0x484516
0x00000000004882c0 : lea ecx, dword ptr [rdx] ; jmp 0x488316
0x0000000000475af7 : lea ecx, dword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x0000000000472110 : lea ecx, dword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047202b : lea ecx, dword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473fee : lea ecx, dword ptr [rsp + 0x20] ; call rbx
0x00000000004741dc : lea ecx, dword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473ec6 : lea ecx, dword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000044c77f : lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000418421 : lea edx, dword ptr [rax + 0x60] ; mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000471e87 : lea edx, dword ptr [rax + rdx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000042dad4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000424996 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x000000000042dec8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x00000000004245b3 : lea edx, dword ptr [rip + 0x11407] ; cmovne rax, rdx ; ret
0x00000000004238ff : lea edx, dword ptr [rip + 0x1d62b] ; cmovne rax, rdx ; ret
0x000000000042478f : lea edx, dword ptr [rip + 0x1df4b] ; cmovne rax, rdx ; ret
0x0000000000424524 : lea edx, dword ptr [rip + 0x209c6] ; cmovne rax, rdx ; ret
0x0000000000423898 : lea edx, dword ptr [rip + 0x21332] ; cmovne rax, rdx ; ret
0x00000000004238cf : lea edx, dword ptr [rip + 0x272b] ; cmovne rax, rdx ; ret
0x000000000047442a : lea edx, dword ptr [rip + 0x30] ; cmovne rax, rdx ; ret
0x00000000004239d9 : lea edx, dword ptr [rip + 0x50d1] ; cmovne rax, rdx ; ret
0x0000000000424853 : lea edx, dword ptr [rip + 0xe697] ; cmovne rax, rdx ; ret
0x0000000000424713 : lea edx, dword ptr [rip + 0xe7b7] ; cmovne rax, rdx ; ret
0x000000000048dd91 : lea esi, dword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000046b85d : lea esi, dword ptr [rip + 0x24b5bd] ; jmp rax
0x0000000000446fef : lea esi, dword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000047e2e6 : lea esp, dword ptr [rbx + rdi*8 - 0x76b30001] ; ret 0x2948
0x0000000000424995 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000048dd90 : lea r14, qword ptr [rbx + rcx*8] ; mov rsi, qword ptr [r14] ; call r12
0x000000000042d9ff : lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000472303 : lea r9, qword ptr [rbp - 0x40] ; mov rdi, r15 ; call r12
0x00000000004844bf : lea r9, qword ptr [rdx] ; jmp 0x484517
0x00000000004882bf : lea r9, qword ptr [rdx] ; jmp 0x488317
0x000000000047210f : lea r9, qword ptr [rsp + 0x10] ; mov rdi, r12 ; call rbx
0x000000000047202a : lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x0000000000473fed : lea r9, qword ptr [rsp + 0x20] ; call rbx
0x00000000004741db : lea r9, qword ptr [rsp + 0x30] ; mov rdi, rbp ; call rbx
0x0000000000473ec5 : lea r9, qword ptr [rsp + 0x38] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x000000000048af1b : lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000042b4b3 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000042b4c3 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000042b493 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x00000000004734cc : lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000446973 : lea rax, qword ptr [rcx - 1] ; ret
0x00000000004449eb : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444a00 : lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000444a1e : lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000444a3e : lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444a61 : lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000444a80 : lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000444aa0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000444ac0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000444ae3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000444b08 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444b26 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000444b46 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000444b62 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000444b82 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x0000000000444ba2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000444bc2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044493c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000044495c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044497e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000044499e : lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004449be : lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000004449d8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444886 : lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444899 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000004448a4 : lea rax, qword ptr [rdi + 3] ; ret
0x00000000004448b7 : lea rax, qword ptr [rdi + 4] ; ret
0x00000000004448cc : lea rax, qword ptr [rdi + 5] ; ret
0x00000000004448ea : lea rax, qword ptr [rdi + 6] ; ret
0x00000000004448f6 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444909 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000044491e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000042b4e8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b4f8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b3f2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000473714 : lea rax, qword ptr [rdi + rax - 0x20] ; vzeroupper ; ret
0x0000000000440456 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000446cc9 : lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x00000000004733c8 : lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000444872 : lea rax, qword ptr [rdi] ; ret
0x0000000000443e5c : lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443e7c : lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443e9e : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443ebe : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443ede : lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000443d6e : lea rax, qword ptr [rdx + 0xf] ; ret
0x0000000000443d96 : lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443dac : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000443dc4 : lea rax, qword ptr [rdx + 3] ; ret
0x0000000000443dda : lea rax, qword ptr [rdx + 4] ; ret
0x0000000000443dec : lea rax, qword ptr [rdx + 5] ; ret
0x0000000000443e0a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000443d16 : lea rax, qword ptr [rdx + 7] ; ret
0x0000000000443e1c : lea rax, qword ptr [rdx + 8] ; ret
0x0000000000443e3c : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000422e85 : lea rax, qword ptr [rdx - 0x10] ; ret
0x0000000000443d84 : lea rax, qword ptr [rdx] ; ret
0x000000000044d490 : lea rax, qword ptr [rip + 0x26ce69] ; ret
0x000000000040e030 : lea rbx, qword ptr [r15 + rax] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044410d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000473eca : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000474065 : lea rcx, qword ptr [rax + 4] ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000422e95 : lea rcx, qword ptr [rdx - 8] ; cmovne rax, rcx ; ret
0x0000000000475af6 : lea rcx, qword ptr [rsi + rcx*4] ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000044c77e : lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x000000000042dad3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000042dec7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x000000000046b85c : lea rsi, qword ptr [rip + 0x24b5bd] ; jmp rax
0x0000000000446fee : lea rsi, qword ptr [rsi + rcx - 1] ; std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004579ba : leave ; call r15
0x000000000049657c : leave ; jae 0x49657d ; call qword ptr [rax]
0x0000000000446750 : leave ; jne 0x446743 ; ret
0x0000000000446800 : leave ; jne 0x4467f3 ; ret
0x0000000000446ac0 : leave ; jne 0x446ab7 ; sub rax, 1 ; ret
0x00000000004746fa : leave ; jne 0x4746b7 ; mov rax, rdx ; ret
0x0000000000446cc8 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000048aed0 : leave ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000046bd79 : leave ; movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000400bc4 : leave ; ret
0x0000000000438c83 : leave ; ret 5
0x0000000000449053 : leave ; shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000494505 : leave ; stc ; call rax
0x0000000000473fea : leave ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000049436f : ljmp ptr [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000494e2f : ljmp ptr [rdx + 0x29] ; cli ; call qword ptr [rax]
0x0000000000496523 : ljmp ptr [rdx] ; jb 0x496526 ; jmp rdx
0x00000000004945eb : ljmp ptr [rsi + rcx] ; cli ; call rdx
0x0000000000494bab : ljmp ptr [rsi] ; xor al, 0xfa ; call rsp
0x000000000042c6ee : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047f2b7 : lock inc dword ptr [r9 + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410060 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004460d0 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000042a524 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004a963d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004b17c8 : lodsb al, byte ptr [rsi] ; pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x0000000000494329 : lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x00000000004b2144 : lodsb al, byte ptr [rsi] ; xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004240c7 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000421b2e : loop 0x421b81 ; mov esi, ebx ; mov rdi, r13 ; call 0x41dd79
0x0000000000425fed : loop 0x426025 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000434bfa : loop 0x434bf5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434bf9 : loop 0x434bf6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043771a : loop 0x437715 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437719 : loop 0x437716 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044826f : loop 0x448289 ; movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000044c113 : loop 0x44c166 ; mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x0000000000468ed9 : loop 0x468f20 ; call qword ptr [rdx + rax*8]
0x00000000004728ba : loop 0x4728d1 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x00000000004728ba : loop 0x4728d2 ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000487221 : loop 0x48722c ; add rdx, rax ; jmp 0x487235
0x000000000048d1c9 : loop 0x48d218 ; add esp, 0x18 ; ret
0x0000000000494098 : loop 0x49402c ; stc ; jmp rdx
0x00000000004a99da : loop 0x4a9a2f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000434b6a : loope 0x434b65 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434b69 : loope 0x434b66 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043768a : loope 0x437685 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437689 : loope 0x437686 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000444dfb : loope 0x444e05 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004487ee : loope 0x4487e5 ; ret
0x000000000044e16e : loope 0x44e17b ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x00000000004748fe : loope 0x474913 ; je 0x474924 ; ret
0x000000000047cacb : loope 0x47cad1 ; dec dword ptr [rcx - 0x77] ; ret
0x0000000000482e47 : loope 0x482e99 ; mov dword ptr [rdi], ecx ; ret
0x0000000000482e78 : loope 0x482ecb ; mov dword ptr [rdi - 8], ecx ; ret
0x0000000000482eed : loope 0x482f40 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004901f6 : loope 0x490255 ; ret
0x0000000000490ebe : loope 0x490f20 ; pop rbp ; pop r12 ; ret
0x0000000000494381 : loope 0x49437e ; call rax
0x00000000004944a5 : loope 0x4944a2 ; jmp rax
0x000000000040f837 : loopne 0x40f89d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000041ca7c : loopne 0x41ca90 ; xchg eax, esp ; ret 0x3de9
0x00000000004223ff : loopne 0x422465 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000042df21 : loopne 0x42df38 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df20 : loopne 0x42df39 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e071 : loopne 0x42e088 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e070 : loopne 0x42e089 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c1 : loopne 0x42e1d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e1c0 : loopne 0x42e1d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e311 : loopne 0x42e328 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e310 : loopne 0x42e329 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e461 : loopne 0x42e478 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e460 : loopne 0x42e479 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b1 : loopne 0x42e5c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e5b0 : loopne 0x42e5c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e701 : loopne 0x42e718 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e700 : loopne 0x42e719 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e84f : loopne 0x42e866 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e84e : loopne 0x42e867 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a1 : loopne 0x42e9b8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042e9a0 : loopne 0x42e9b9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf1 : loopne 0x42eb08 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eaf0 : loopne 0x42eb09 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec41 : loopne 0x42ec58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ec40 : loopne 0x42ec59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed91 : loopne 0x42eda8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042ed90 : loopne 0x42eda9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee1 : loopne 0x42eef8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042eee0 : loopne 0x42eef9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f031 : loopne 0x42f048 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f030 : loopne 0x42f049 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f181 : loopne 0x42f198 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042f180 : loopne 0x42f199 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f1 : loopne 0x430908 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004308f0 : loopne 0x430909 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a41 : loopne 0x430a58 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430a40 : loopne 0x430a59 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b91 : loopne 0x430ba8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430b90 : loopne 0x430ba9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce1 : loopne 0x430cf8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430ce0 : loopne 0x430cf9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e31 : loopne 0x430e48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430e30 : loopne 0x430e49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f81 : loopne 0x430f98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000430f80 : loopne 0x430f99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310d1 : loopne 0x4310e8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004310d0 : loopne 0x4310e9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043121f : loopne 0x431236 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000043121e : loopne 0x431237 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431371 : loopne 0x431388 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431370 : loopne 0x431389 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c1 : loopne 0x4314d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004314c0 : loopne 0x4314d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431611 : loopne 0x431628 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431610 : loopne 0x431629 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431761 : loopne 0x431778 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431760 : loopne 0x431779 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b1 : loopne 0x4318c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004318b0 : loopne 0x4318c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a01 : loopne 0x431a18 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431a00 : loopne 0x431a19 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b51 : loopne 0x431b68 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000431b50 : loopne 0x431b69 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004481dd : loopne 0x4481f7 ; movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x000000000044bf28 : loopne 0x44bf3d ; cmp eax, 4 ; je 0x44bf37 ; ret
0x000000000044e172 : loopne 0x44e1d5 ; pop r12 ; ret
0x00000000004636ff : loopne 0x46368c ; ret
0x000000000046d86a : loopne 0x46d870 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000046ed99 : loopne 0x46edfd ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000046f575 : loopne 0x46f5d9 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000048281d : loopne 0x482826 ; sub eax, 1 ; ret
0x0000000000493f74 : loopne 0x493f9f ; stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x000000000049404c : loopne 0x4940ba ; stc ; call rax
0x0000000000494264 : loopne 0x494223 ; stc ; jmp rax
0x0000000000494264 : loopne 0x494227 ; stc ; jmp rax
0x0000000000494268 : loopne 0x494229 ; stc ; jmp rax
0x00000000004944a4 : loopne 0x49448a ; stc ; jmp rax
0x00000000004944a8 : loopne 0x494490 ; stc ; jmp rax
0x00000000004944ac : loopne 0x49449a ; stc ; call qword ptr [rax - 0x2f000641]
0x00000000004944a1 : loopne 0x49449e ; jmp rax
0x00000000004950b0 : loopne 0x4950ab ; cli ; push rax ; cli ; call qword ptr [rax]
0x0000000000495150 : loopne 0x495152 ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x00000000004a6fb4 : loopne 0x4a6f94 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2e00 : loopne 0x4b2e09 ; cld ; jmp rdx
0x00000000004b2dfc : loopne 0x4b2e7a ; add byte ptr [rax], al ; loopne 0x4b2e0d ; cld ; jmp rdx
0x00000000004946b8 : mov ah, 0x13 ; cli ; inc dword ptr [rbx + rdx - 6] ; call rsp
0x00000000004a69ca : mov ah, 0x13 ; ret
0x000000000049213a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rax
0x000000000049189a : mov ah, 0x24 ; cwde ; add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x00000000004956f0 : mov ah, 0x3d ; sti ; jmp qword ptr [rdi]
0x00000000004b14d0 : mov ah, 0x5c ; add byte ptr [rax], al ; jl 0x4b1550 ; cli ; jmp rax
0x00000000004a6e70 : mov ah, 0xa5 ; ret
0x00000000004aa8c4 : mov ah, 0xa6 ; std ; jmp rbx
0x00000000004b074c : mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x00000000004adcb1 : mov ah, 0xf6 ; call qword ptr [rdx]
0x00000000004942d9 : mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004941b5 : mov ah, 0xf9 ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004941d5 : mov ah, 0xf9 ; push rax ; mov ch, 0xf9 ; call rax
0x00000000004a67c4 : mov ah, bl ; push rsi ; ret
0x0000000000458422 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000048b016 : mov al, 0 ; add byte ptr [rax], al ; ret
0x00000000004579b4 : mov al, 0 ; add byte ptr [rax], al ; xor r9d, r9d ; call r15
0x0000000000494544 : mov al, 0x12 ; cli ; inc dword ptr [rax + 0x12] ; cli ; call rax
0x0000000000400df8 : mov al, 0x2b ; add bh, dh ; ret 0
0x0000000000494c54 : mov al, 0x36 ; cli ; inc dword ptr [rax + 0x36] ; cli ; call rax
0x0000000000494a3c : mov al, 0x39 ; cli ; inc dword ptr [rax + 0x39] ; cli ; call rax
0x0000000000494f6c : mov al, 0x45 ; cli ; inc eax ; cli ; call rax
0x0000000000493ff4 : mov al, 0x4d ; stc ; jmp qword ptr [rax]
0x00000000004b0fcc : mov al, 0x57 ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x00000000004941a0 : mov al, 0x95 ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x000000000044081f : mov al, 0xc5 ; std ; xlatb ; ret
0x000000000047bd2c : mov al, 0xe9 ; cld ; inc dword ptr [rbp + 0x5b0e78c0] ; ret
0x00000000004a8c76 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x000000000049475c : mov al, 0xf ; cli ; inc dword ptr [rax + 0xf] ; cli ; call rax
0x00000000004950a4 : mov al, 0xf2 ; cli ; inc eax ; cli ; call rax
0x00000000004950d0 : mov al, 0xf3 ; cli ; call rax
0x00000000004950fc : mov al, 0xf7 ; cli ; inc eax ; idiv edx ; call rax
0x000000000049496c : mov al, 3 ; cli ; inc dword ptr [rax + 3] ; cli ; jmp rax
0x000000000046370b : mov al, byte ptr [rbx - 0x76ffffe6] ; ret 0xc389
0x00000000004425f6 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000442614 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443d80 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004425d0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000491586 : mov al, byte ptr [rdx - 0x76b7ffde] ; ret 0x8348
0x00000000004425e0 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000435931 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000457b8f : mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000444c98 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004a7ca4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x0000000000413469 : mov bh, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x0000000000424715 : mov bh, 0xe7 ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000049425d : mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049423d : mov bh, 0xf9 ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x000000000048f797 : mov bh, 0xff ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000487e3c : mov bh, 0xff ; nop ; add rsp, 8 ; ret
0x00000000004a93b3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000494ff5 : mov bh, dl ; inc dword ptr [rax - 0x74] ; cli ; jmp rax
0x000000000044658e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004746fc : mov bl, 0x48 ; mov eax, edx ; ret
0x000000000045a422 : mov bl, 0x4c ; add edi, ebx ; jmp rdi
0x00000000004a8d83 : mov bl, 0x8e ; ret 0xdcd9
0x0000000000415c03 : mov bl, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004adbd9 : mov bl, 0xf6 ; call qword ptr [rsi]
0x0000000000494275 : mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004941f5 : mov bl, 0xf9 ; call rax
0x000000000044e42a : mov byte ptr [r8 - 0x7d], r9b ; ret 0x4830
0x000000000044c0ea : mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044e42b : mov byte ptr [rax - 0x7d], cl ; ret 0x4830
0x000000000044bc8f : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000400d94 : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004af358 : mov byte ptr [rbp - 9], dl ; jmp qword ptr [rbx]
0x000000000046ec87 : mov byte ptr [rcx + 0xf], 0x4f ; ret
0x0000000000459f23 : mov byte ptr [rcx + rax - 0x3a], cl ; jmp rsi
0x000000000048aed4 : mov byte ptr [rcx + rax - 0x40], cl ; jmp rax
0x0000000000405d9f : mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000045eaa3 : mov byte ptr [rcx], cl ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004449e8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000444358 : mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444a5e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000004443ae : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444ae0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000444430 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000444896 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444276 : mov byte ptr [rdi + 2], dh ; ret
0x00000000004448b2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444292 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d3 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042f54b : mov byte ptr [rdi - 1], dl ; ret
0x0000000000412a50 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x0000000000438672 : mov byte ptr [rdi], cl ; ret
0x0000000000447f55 : mov byte ptr [rdi], cl ; vzeroupper ; ret
0x0000000000444870 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000444250 : mov byte ptr [rdi], dh ; ret
0x00000000004359a3 : mov byte ptr [rdi], dl ; ret
0x0000000000443da9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x00000000004425f9 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000443dd7 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x0000000000442617 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x0000000000443d82 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x00000000004425d2 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000048ba40 : mov byte ptr [rip + 0x230769], 8 ; ret
0x0000000000400b06 : mov byte ptr [rip + 0x2ba7d3], 1 ; pop rbp ; ret
0x000000000041dd29 : mov byte ptr [rsi + rbx], cl ; mov rax, rsi ; pop rbx ; ret
0x000000000048481f : mov byte ptr [rsi], al ; jne 0x48480f ; mov rax, rsi ; ret
0x00000000004848a3 : mov byte ptr [rsi], al ; jne 0x484887 ; mov rax, rsi ; ret
0x00000000004a67c2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004a7b03 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000040f342 : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x40f315
0x000000000045d0ba : mov ch, 0x41 ; mov ebx, 1 ; jmp 0x45d08d
0x00000000004a8e9f : mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004a984a : mov ch, 0xab ; ret
0x0000000000471497 : mov ch, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x00000000004add51 : mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004941d9 : mov ch, 0xf9 ; call rax
0x0000000000494259 : mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494279 : mov ch, 0xf9 ; push rax ; mov dh, 0xf9 ; call rax
0x00000000004a3d41 : mov ch, 0xfc ; jmp rsp
0x000000000042d266 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000490e71 : mov cl, 0x22 ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000403b97 : mov cl, 0x35 ; ret
0x0000000000494271 : mov cl, 0xf9 ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x0000000000494291 : mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x000000000045ab27 : mov cl, byte ptr [rax + 0x39] ; ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000043ae55 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000424994 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x00000000004a8c72 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000042c0b4 : mov cl, byte ptr [rsi + rdx - 1] ; sub eax, ecx ; ret
0x0000000000438670 : mov cl, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x00000000004748fb : mov cl, dl ; and cl, 0xf ; je 0x474927 ; ret
0x00000000004a8f2c : mov cs, edi ; ret 0x8b36
0x0000000000468192 : mov cs, word ptr [rdx - 0x77000000] ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000043f3de : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x0000000000444270 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000048494a : mov dh, 0 ; add byte ptr [rax], al ; add rsp, 0x30 ; pop rbx ; ret
0x000000000048e0ff : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416812 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412cff : mov dh, 0 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004188a0 : mov dh, 0 ; ret
0x000000000049458c : mov dh, 0x11 ; cli ; inc dword ptr [rsi + 0x11] ; cli ; call rsi
0x00000000004359a1 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000042bc04 : mov dh, 0x16 ; sub eax, edx ; ret
0x000000000040dae4 : mov dh, 0x17 ; test dl, dl ; jne 0x40daca ; ret
0x00000000004197b2 : mov dh, 0x25 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000494a84 : mov dh, 0x38 ; cli ; inc dword ptr [rsi + 0x38] ; cli ; call rsi
0x000000000046ec9c : mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000040da09 : mov dh, 0x40 ; or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x0000000000456952 : mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x00000000004695bb : mov dh, 0x46 ; or al, 0x83 ; ret
0x0000000000446161 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446151 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446121 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000446141 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446131 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000045e199 : mov dh, 0x47 ; or al, 0x83 ; ret
0x00000000004a7c62 : mov dh, 0x4e ; ret 0x474c
0x0000000000446165 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000446155 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000446125 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000446135 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000463428 : mov dh, 0x67 ; or al, 0x89 ; ret 0xc689
0x0000000000405f3a : mov dh, 0x73 ; add dword ptr [rax - 0x77], ecx ; ret
0x000000000040eea4 : mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000478d8f : mov dh, 0x87 ; adc eax, 0x89000003 ; ret 0xe8c0
0x0000000000475902 : mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048c146 : mov dh, 0xc0 ; movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x000000000046ea18 : mov dh, 0xc0 ; movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x000000000048849d : mov dh, 0xc0 ; neg eax ; ret
0x0000000000484d6a : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e901 : mov dh, 0xc0 ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000448241 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000415612 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004a8ea4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048aecf : mov dh, 0xc9 ; movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000042bc2a : mov dh, 0xd2 ; sub eax, edx ; ret
0x000000000048c67f : mov dh, 0xdb ; movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x0000000000447069 : mov dh, 0xe ; mov byte ptr [rdi], cl ; ret
0x0000000000425d41 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0c4 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000049427d : mov dh, 0xf9 ; call rax
0x00000000004941b9 : mov dh, 0xf9 ; jmp rax
0x000000000040d545 : mov dh, 0xfa ; movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x0000000000416821 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d11 : mov dh, 2 ; ret
0x000000000042c0c1 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc01 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d44 : mov dh, 7 ; sub eax, ecx ; ret
0x00000000004487ec : mov dh, byte ptr [rcx - 0xd] ; ret
0x0000000000494d20 : mov dl, 0x2b ; cli ; jmp qword ptr [rdx]
0x000000000041885e : mov dl, 0x34 ; sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040ea4d : mov dl, 0x6b ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000413852 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x00000000004131d8 : mov dl, 0x6b ; add byte ptr [rax - 0x77], cl ; ret 0x294d
0x000000000044c812 : mov dl, 0xf5 ; add byte ptr es:[rbx + rcx*4 + 0x1d], cl ; ret
0x00000000004941d1 : mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494211 : mov dl, 0xf9 ; call rax
0x00000000004941b1 : mov dl, 0xf9 ; jmp qword ptr [rax]
0x00000000004942d5 : mov dl, 0xf9 ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x00000000004941f1 : mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x000000000042f5d0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000046258d : mov ds, word ptr [rax + rax + 0x63490000] ; ret 0x8944
0x0000000000438666 : mov dword ptr [r9 - 2], ecx ; ret
0x0000000000438651 : mov dword ptr [r9 - 4], ecx ; ret
0x000000000044c081 : mov dword ptr [rax + 0x10], ecx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470ad9 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b19 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b18 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c0e7 : mov dword ptr [rax + 0x20], ecx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c101 : mov dword ptr [rax + 0x20], esi ; ret
0x0000000000470add : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000471b9a : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000450b3f : mov dword ptr [rax + 0x50], ecx ; mov dword ptr [rax + 0x54], edx ; ret
0x0000000000450b42 : mov dword ptr [rax + 0x54], edx ; ret
0x0000000000417535 : mov dword ptr [rax + 8], 0 ; ret
0x000000000044c085 : mov dword ptr [rax + 8], edx ; ret
0x000000000046603d : mov dword ptr [rax], 0x16 ; mov eax, edx ; ret
0x000000000040f232 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x000000000041dd5a : mov dword ptr [rax], 0xc ; mov rax, rsi ; ret
0x0000000000484f2d : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000484e7d : mov dword ptr [rax], edx ; add rsp, 8 ; ret
0x000000000041a862 : mov dword ptr [rax], edx ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000484f21 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000048d2b2 : mov dword ptr [rax], edx ; ret
0x0000000000471e8b : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047c7a1 : mov dword ptr [rbp - 0x100], ebx ; call r10
0x00000000004697af : mov dword ptr [rbp - 0x910], esi ; jmp qword ptr [rdx + rax*8]
0x000000000047d141 : mov dword ptr [rbp - 0xe0], ebx ; call r10
0x0000000000458812 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b27 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481d9e : mov dword ptr [rbx + 0x10], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f0f : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047fa8e : mov dword ptr [rbx + 0x10], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c33 : mov dword ptr [rbx + 0x18], 0 ; jmp 0x485c07
0x0000000000481cd3 : mov dword ptr [rbx + 0x18], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884c5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x0000000000488599 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x000000000045adbd : mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x0000000000416bcd : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004166b1 : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000471d4a : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041834d : mov dword ptr [rbx + 0x60], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004146e2 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000470b64 : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000471a11 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000458827 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004856f3 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000416b5c : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048a4f9 : mov dword ptr [rbx], eax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000416bd0 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412a25 : mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471b1b : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000410021 : mov dword ptr [rcx + 0x130], edx ; ret
0x0000000000400d4e : mov dword ptr [rcx + rax*2], 0x72f2a30f ; ret 0xfe83
0x0000000000450e95 : mov dword ptr [rcx - 0x7d], 0x940f07fc ; ret 0x1f0f
0x0000000000438667 : mov dword ptr [rcx - 2], ecx ; ret
0x0000000000438652 : mov dword ptr [rcx - 4], ecx ; ret
0x0000000000438641 : mov dword ptr [rcx - 8], ecx ; ret
0x0000000000449d14 : mov dword ptr [rcx], eax ; mov eax, 0xffffffff ; jmp 0x449ce7
0x000000000044963a : mov dword ptr [rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x0000000000419294 : mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x00000000004449fd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000444a3b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x0000000000444abd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000004443ab : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000044442d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044436d : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444470 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000444490 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444451 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000444b23 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000444473 : mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000416593 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000444b05 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444b43 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000444455 : mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000419291 : mov dword ptr [rdi + 0x24], ebp ; mov dword ptr [rdi + 0x10], eax ; pop rbx ; pop rbp ; ret
0x000000000047b745 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000047b717 : mov dword ptr [rdi + 0x308], eax ; ret
0x00000000004165c3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d2f1 : mov dword ptr [rdi + 0x98], esi ; ret
0x0000000000444a7d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004443cd : mov dword ptr [rdi + 0xe], ecx ; ret
0x0000000000444a1b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000444a9d : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000044438b : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004357e5 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435628 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358c8 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x0000000000435775 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x00000000004355b8 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004448e7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000435705 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435548 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442b7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000004448c9 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004354d8 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442a9 : mov dword ptr [rdi + 4], edx ; ret
0x000000000044497b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435468 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044431b : mov dword ptr [rdi + 5], edx ; ret
0x000000000044499b : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004353f8 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000044432b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000444939 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004449bb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435388 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x00000000004442f9 : mov dword ptr [rdi + 7], edx ; ret
0x000000000048476e : mov dword ptr [rdi + 8], eax ; mov eax, 2 ; ret
0x0000000000416597 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000482f84 : mov dword ptr [rdi + 8], ecx ; ret
0x0000000000444959 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000044491b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000484424 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000004442eb : mov dword ptr [rdi + 8], edx ; ret
0x0000000000447dfb : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], cx ; ret
0x0000000000447095 : mov dword ptr [rdi + rdx - 2], ecx ; mov word ptr [rdi], si ; ret
0x0000000000447df3 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000447f75 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000447085 : mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x0000000000447deb : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447077 : mov dword ptr [rdi + rdx - 8], ecx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d29c : mov dword ptr [rdi + rsi*8], edx ; ret
0x000000000042f295 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482eef : mov dword ptr [rdi - 0x10], ecx ; ret
0x000000000042f61c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e38 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fc : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db8 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9ec : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d38 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbbd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca9 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fdbd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c19 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b89 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f99d : mov dword ptr [rdi - 2], ecx ; ret
0x000000000042f7b5 : mov dword ptr [rdi - 2], edx ; ret
0x000000000042f999 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fd79 : mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f44f : mov dword ptr [rdi - 4], edx ; ret
0x000000000042fd76 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff76 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430176 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f299 : mov dword ptr [rdi - 8], ecx ; ret
0x000000000042f2d7 : mov dword ptr [rdi - 8], edx ; ret
0x000000000042f44c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f548 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f494 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb8 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000482e74 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482f7e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x00000000004687ba : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004448b5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000444907 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000444894 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000444274 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004448e5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004442b5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000444937 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004442f7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444957 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000444307 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000446dc7 : mov dword ptr [rdi], ecx ; mov dword ptr [rsi - 4], ecx ; ret
0x0000000000444318 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444328 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444338 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004442a6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004442e8 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000446dd3 : mov dword ptr [rdi], ecx ; mov word ptr [rsi - 2], cx ; ret
0x000000000043538c : mov dword ptr [rdi], ecx ; ret
0x0000000000447f6f : mov dword ptr [rdi], ecx ; vzeroupper ; ret
0x0000000000444884 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004448a2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004448f4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435694 : mov dword ptr [rdi], edx ; ret
0x000000000043864f : mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x00000000004845f6 : mov dword ptr [rdi], esi ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000043863e : mov dword ptr [rdi], esi ; mov qword ptr [r9 - 8], rcx ; ret
0x0000000000438663 : mov dword ptr [rdi], esi ; mov word ptr [r9 - 2], cx ; ret
0x000000000044707c : mov dword ptr [rdi], esi ; ret
0x0000000000412ba5 : mov dword ptr [rdx + 0x130], edi ; pop rbx ; ret
0x0000000000443e07 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x0000000000442637 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000443de9 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442629 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x0000000000443e9b : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000443e19 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x0000000000442649 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000443ebb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000443e39 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000442659 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000443e59 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000443edb : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x0000000000442669 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000443e79 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x0000000000443d6b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004425bb : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x00000000004184c0 : mov dword ptr [rdx + 8], eax ; xor eax, eax ; ret
0x0000000000443d94 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000443dc2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000443d14 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000004496ca : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004845f8 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000484755 : mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000044997a : mov dword ptr [rdx], eax ; mov rax, -1 ; ret
0x0000000000442564 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000484f0d : mov dword ptr [rdx], eax ; pop rbx ; ret
0x0000000000418428 : mov dword ptr [rdx], eax ; ret
0x00000000004901ef : mov dword ptr [rip + 0x22bafb], ebx ; jne 0x4901e1 ; pop rbx ; ret
0x0000000000484a58 : mov dword ptr [rip + 0x23760a], eax ; ret
0x000000000047f365 : mov dword ptr [rip + 0x23d045], eax ; ret
0x000000000045abe8 : mov dword ptr [rip + 0x25feca], edx ; je 0x45ac01 ; ret
0x000000000044d4c6 : mov dword ptr [rip + 0x26b5ec], edx ; pop rbx ; ret
0x000000000041f8d6 : mov dword ptr [rip + 0x299f84], eax ; ret
0x00000000004197fc : mov dword ptr [rip + 0x2a005e], eax ; ret
0x00000000004192f7 : mov dword ptr [rip + 0x2a04f3], eax ; ret
0x000000000041930e : mov dword ptr [rip + 0x2a04f8], eax ; ret
0x00000000004192cf : mov dword ptr [rip + 0x2a0513], eax ; ret
0x00000000004192af : mov dword ptr [rip + 0x2a052b], eax ; ret
0x00000000004191a5 : mov dword ptr [rip + 0x2a069d], eax ; ret
0x0000000000419195 : mov dword ptr [rip + 0x2a06a5], eax ; ret
0x0000000000419183 : mov dword ptr [rip + 0x2a06a7], edx ; ret
0x0000000000419145 : mov dword ptr [rip + 0x2a06ad], eax ; ret
0x0000000000419135 : mov dword ptr [rip + 0x2a06c5], eax ; ret
0x0000000000419324 : mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x0000000000446dd6 : mov dword ptr [rsi - 2], ecx ; ret
0x0000000000446dc9 : mov dword ptr [rsi - 4], ecx ; ret
0x0000000000478931 : mov dword ptr [rsi], 0xffffffff ; xor eax, eax ; ret
0x000000000048d2de : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000047f4d2 : mov dword ptr [rsi], eax ; ret
0x000000000047e819 : mov dword ptr [rsi], edi ; mov rax, rcx ; ret
0x000000000045d15a : mov dword ptr [rsi], edi ; xor eax, eax ; jmp 0x45d126
0x000000000041ca9a : mov dword ptr [rsp + 0x10], ebx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041cb57 : mov dword ptr [rsp + 0x10], edx ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000045122c : mov dword ptr [rsp + 0x50], eax ; call 0x44d506
0x000000000041ca9f : mov dword ptr [rsp + 8], eax ; call rcx
0x000000000041132e : mov dword ptr [rsp + 8], ecx ; mov rdi, r15 ; call rax
0x000000000041d0b4 : mov dword ptr [rsp + 8], edx ; call 0x419356
0x000000000041d0b3 : mov dword ptr [rsp + 8], r10d ; call 0x419357
0x0000000000489ca3 : mov dword ptr [rsp], eax ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413402 : mov dword ptr [rsp], ecx ; mov rdi, rbx ; call rax
0x0000000000416715 : mov dword ptr [rsp], edi ; call 0x4129a5
0x000000000046603c : mov dword ptr fs:[rax], 0x16 ; mov eax, edx ; ret
0x000000000040f231 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000475a0c : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000449d13 : mov dword ptr fs:[rcx], eax ; mov eax, 0xffffffff ; jmp 0x449ce8
0x0000000000449639 : mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004496c9 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000447084 : mov dword ptr ss:[rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000042f7b0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000444260 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000400bbf : mov eax, 0 ; leave ; ret
0x00000000004482bb : mov eax, 0x10 ; pop rbx ; ret
0x00000000004235b0 : mov eax, 0x16 ; ret
0x00000000004482c9 : mov eax, 0x20 ; pop rbx ; ret
0x00000000004853d0 : mov eax, 0x27 ; syscall ; ret
0x00000000004adbd4 : mov eax, 0x28000023 ; mov bl, 0xf6 ; call qword ptr [rsi]
0x00000000004482c2 : mov eax, 0x30 ; pop rbx ; ret
0x00000000004482d7 : mov eax, 0x40 ; pop rbx ; ret
0x00000000004a6dbb : mov eax, 0x45155e93 ; ret 0x591c
0x0000000000457be8 : mov eax, 0x5b000000 ; pop r12 ; ret
0x00000000004482d0 : mov eax, 0x60 ; pop rbx ; ret
0x0000000000475620 : mov eax, 0x66 ; syscall ; ret
0x0000000000475640 : mov eax, 0x68 ; syscall ; ret
0x0000000000475630 : mov eax, 0x6b ; syscall ; ret
0x0000000000475650 : mov eax, 0x6c ; syscall ; ret
0x00000000004482ad : mov eax, 0x80 ; pop rbx ; ret
0x0000000000489aaf : mov eax, 0x89000003 ; fmul dword ptr [rbx + rcx*4 + 0x34] ; ret 0xf41
0x0000000000486cc4 : mov eax, 0x89fd8945 ; ret 0xe283
0x00000000004942e1 : mov eax, 0xb9d0fff9 ; stc ; call rax
0x00000000004942c1 : mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000474ec0 : mov eax, 0xc9 ; syscall ; ret
0x000000000044be92 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004583ac : mov eax, 0xff514ee8 ; dec dword ptr [rcx + rcx*4 - 9] ; call rbx
0x0000000000449d16 : mov eax, 0xffffffff ; jmp 0x449ce5
0x0000000000412021 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411da7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x0000000000412f23 : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000411d6b : mov eax, 0xffffffff ; ret
0x0000000000475e81 : mov eax, 1 ; leave ; ret
0x00000000004845d5 : mov eax, 1 ; mov qword ptr [rdi], rsi ; ret
0x0000000000417292 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004868fd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047fde0 : mov eax, 1 ; pop rbx ; ret
0x000000000046871f : mov eax, 1 ; ret
0x0000000000474713 : mov eax, 2 ; ret
0x0000000000474971 : mov eax, 3 ; ret
0x000000000048e15f : mov eax, 4 ; jne 0x48e188 ; ret
0x0000000000474981 : mov eax, 4 ; ret
0x0000000000474991 : mov eax, 5 ; ret
0x00000000004749a1 : mov eax, 6 ; ret
0x00000000004749b1 : mov eax, 7 ; ret
0x00000000004482b4 : mov eax, 8 ; pop rbx ; ret
0x000000000044e950 : mov eax, 8 ; ret
0x00000000004118c1 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x0000000000471fa4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000417478 : mov eax, dword ptr [rax + 0x68] ; test rax, rax ; jne 0x417479 ; ret
0x0000000000481b91 : mov eax, dword ptr [rax + 8] ; ret
0x0000000000459220 : mov eax, dword ptr [rax + rbp*8] ; test rax, rax ; je 0x459232 ; call rax
0x000000000046bdba : mov eax, dword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ac2f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046098d : mov eax, dword ptr [rax + rdi*8] ; jmp rax
0x000000000048af19 : mov eax, dword ptr [rax] ; lea rax, qword ptr [rax + 8] ; mov qword ptr [r10], r8 ; ret
0x000000000048af01 : mov eax, dword ptr [rax] ; mov qword ptr [r10], r8 ; ret
0x000000000047fdf9 : mov eax, dword ptr [rax] ; ret
0x000000000047c6e0 : mov eax, dword ptr [rbp - 0xb8] ; add rax, r11 ; call rax
0x000000000047c501 : mov eax, dword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004166fd : mov eax, dword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f29 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416de9 : mov eax, dword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000451229 : mov eax, dword ptr [rbx] ; mov qword ptr [rsp + 0x50], rax ; call 0x44d509
0x0000000000442634 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000442646 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000442656 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x0000000000442666 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x0000000000442676 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000043d24a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000043eb22 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000443dc0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000442600 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000443d11 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442561 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000443d91 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000004425e1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000047cce6 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x0000000000471dfe : mov eax, dword ptr [rdi + 0x10] ; sar rdx, 2 ; sub eax, edx ; ret
0x0000000000418430 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000418458 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000490e2d : mov eax, dword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e44 ; call rax
0x0000000000471fa1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418781 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000048d271 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048d2c1 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048d301 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048d361 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048d351 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048d311 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000460ecf : mov eax, dword ptr [rdi + rax*8] ; jmp rax
0x0000000000487de1 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x487df8 ; ret
0x0000000000418425 : mov eax, dword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000419321 : mov eax, dword ptr [rdi] ; nop ; mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x000000000048f5c5 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5d7 ; ret
0x000000000048f5e0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f5f7 ; ret
0x000000000048f810 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x48f827 ; ret
0x000000000047e7cc : mov eax, dword ptr [rdx + 4] ; ret
0x00000000004487e7 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d9 ; ret
0x000000000043ae56 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000418411 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x418410 ; ret
0x00000000004855d0 : mov eax, dword ptr [rip + 0x2372ea] ; ret
0x000000000047f4cb : mov eax, dword ptr [rip + 0x23ced7] ; mov qword ptr [rsi], rax ; ret
0x000000000047f45a : mov eax, dword ptr [rip + 0x23cf50] ; ret
0x0000000000457a91 : mov eax, dword ptr [rip + 0x2643e1] ; ret
0x000000000044f591 : mov eax, dword ptr [rip + 0x26d391] ; ret
0x0000000000418761 : mov eax, dword ptr [rip + 0x2a09b9] ; ret
0x000000000048e1b2 : mov eax, dword ptr [rsi + 0x10] ; ret
0x000000000048b041 : mov eax, dword ptr [rsi + 0xa8] ; ret
0x000000000048b014 : mov eax, dword ptr [rsi + 0xb0] ; ret
0x000000000048b031 : mov eax, dword ptr [rsi + 0xb8] ; ret
0x000000000048e1d1 : mov eax, dword ptr [rsi + 8] ; ret
0x000000000046bd7f : mov eax, dword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f19 : mov eax, dword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461579 : mov eax, dword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000047100f : mov eax, dword ptr [rsi] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000048d336 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a8f6 : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401143 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x000000000045319c : mov eax, dword ptr [rsp + 0x20] ; call rax
0x0000000000449cea : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000449c6d : mov eax, dword ptr [rsp + 0xc] ; jne 0x449c42 ; neg eax ; jmp 0x449c42
0x000000000040df0d : mov eax, dword ptr [rsp + 8] ; call rax
0x0000000000486d6f : mov eax, dword ptr [rsp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000048aaaa : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000047fdf8 : mov eax, dword ptr fs:[rax] ; ret
0x000000000041a9d0 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004227af : mov eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004482f2 : mov eax, eax ; ret
0x0000000000474d34 : mov eax, eax ; shr rax, 2 ; vzeroupper ; ret
0x0000000000473b71 : mov eax, eax ; vzeroupper ; ret
0x00000000004100cb : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044b2d4 : mov eax, ebp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101e3 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040fc9e : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000411d12 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000484563 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000488557 : mov eax, ebx ; jne 0x488575 ; add rsp, 0x40 ; pop rbx ; ret
0x000000000048863e : mov eax, ebx ; jne 0x48865d ; add rsp, 0x50 ; pop rbx ; ret
0x0000000000410578 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410355 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a510 : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x0000000000412b2b : mov eax, ebx ; pop rbx ; ret
0x0000000000484427 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000465f25 : mov eax, ecx ; ret
0x0000000000412a23 : mov eax, edi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac65 : mov eax, edi ; pop rbp ; pop r12 ; ret
0x0000000000412a54 : mov eax, edi ; ret
0x000000000041a865 : mov eax, edx ; add rsp, 8 ; ret
0x00000000004106e0 : mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465fee : mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000410789 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ff71 : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000004482f6 : mov eax, edx ; pop rbx ; ret
0x000000000041a871 : mov eax, edx ; ret
0x00000000004827d7 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x0000000000413cfa : mov eax, esi ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046fc64 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041dd2d : mov eax, esi ; pop rbx ; ret
0x000000000041dd61 : mov eax, esi ; ret
0x000000000046ed98 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465f24 : mov eax, r9d ; ret
0x00000000004878b6 : mov ebp, 0x2316 ; jne 0x4878c7 ; pop rbx ; ret
0x0000000000494229 : mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000494209 : mov ebp, 0xbf80fff9 ; stc ; call qword ptr [rax]
0x000000000049f1a4 : mov ebp, 0xc000000f ; sldt word ptr [rax] ; ret
0x00000000004a627d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x0000000000473338 : mov ebp, 0xf80148c0 ; ret
0x00000000004735bc : mov ebp, 0xf80148c6 ; ret
0x00000000004a79e6 : mov ebp, 0xfb67d10d ; ret
0x000000000046926e : mov ebp, 0xfffff730 ; call rax
0x000000000045dd3c : mov ebp, 0xfffff758 ; call rax
0x000000000046c269 : mov ebp, 0xfffffae8 ; add byte ptr [rcx - 0x77], al ; ret 0x1674
0x0000000000465145 : mov ebp, 0xffffff40 ; call rax
0x000000000048d793 : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004004cb : mov ebp, dword ptr [rbx] ; add byte ptr [rsi - 0x70], ah ; ret
0x000000000048e9da : mov ebp, dword ptr [rsp + 8] ; jmp 0x48e9f8
0x000000000046fef9 : mov ebp, eax ; jmp 0x46fec2
0x00000000004827dd : mov ebp, ecx ; nop ; jmp rdx
0x000000000044db6d : mov ebx, 0x890026e2 ; ret 0xff25
0x000000000044bec4 : mov ebx, 0xafb8341 ; je 0x44bed3 ; ret
0x0000000000494245 : mov ebx, 0xbd20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004a627b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x00000000004248fb : mov ebx, 0xf480001 ; ret 0x66c3
0x000000000040f344 : mov ebx, 1 ; jmp 0x40f313
0x000000000045d0bc : mov ebx, 1 ; jmp 0x45d08b
0x000000000045a626 : mov ebx, edi ; test rax, rax ; je 0x45a636 ; call rax
0x000000000047576c : mov ecx, 0x48000000 ; add esp, 0x78 ; ret
0x0000000000494261 : mov ecx, 0xbae0fff9 ; stc ; jmp rax
0x0000000000494241 : mov ecx, 0xbb20fff9 ; stc ; jmp qword ptr [rax]
0x00000000004942e5 : mov ecx, 0xbbd0fff9 ; stc ; call rax
0x00000000004a6279 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x000000000046bdbd : mov ecx, 1 ; jmp rax
0x000000000043864c : mov ecx, dword ptr [rcx - 4] ; mov dword ptr [rdi], esi ; mov dword ptr [r9 - 4], ecx ; ret
0x000000000042d9fe : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x0000000000471f7b : mov ecx, dword ptr [rdx + 0x48] ; cmp ecx, dword ptr [rdx + 0x4c] ; cmove eax, ecx ; ret
0x000000000043ae53 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000042fd73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ff73 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430173 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000444290 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004442d1 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x00000000004357e3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435773 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435703 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x0000000000435625 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355b5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435545 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354d5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435465 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004353f5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435385 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004358c5 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000444271 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000481c87 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c15 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004725b1 : mov ecx, eax ; jmp 0x47257b
0x000000000044e88b : mov ecx, ebp ; call rbx
0x0000000000417210 : mov ecx, edx ; pop rbx ; xor edx, edx ; jmp rax
0x0000000000447052 : mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000041724a : mov ecx, edx ; xor edx, edx ; jmp rax
0x0000000000474335 : mov ecx, esi ; call rbx
0x000000000045f58a : mov edi, 0x440f48c0 ; ret 0xae9
0x0000000000400a8c : mov edi, 0x6babd0 ; jmp rax
0x000000000049420d : mov edi, 0xb210fff9 ; stc ; call rax
0x00000000004941cd : mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x00000000004944b1 : mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x000000000048cfc6 : mov edi, 1 ; call r14
0x000000000048cf1c : mov edi, 1 ; call rax
0x000000000048dc8c : mov edi, 1 ; jmp rax
0x000000000040e9a4 : mov edi, dword ptr [rax + 0x20] ; call rdx
0x000000000044ad2c : mov edi, dword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dd3b : mov edi, dword ptr [rbp - 0x8a8] ; call rax
0x000000000046926d : mov edi, dword ptr [rbp - 0x8d0] ; call rax
0x0000000000465144 : mov edi, dword ptr [rbp - 0xc0] ; call rax
0x000000000048d611 : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x000000000044a814 : mov edi, dword ptr [rbp] ; call r12
0x000000000040df09 : mov edi, dword ptr [rbp] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044a7ee : mov edi, dword ptr [rbx] ; call r12
0x000000000047c8cf : mov edi, dword ptr [rbx] ; mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000047f4a6 : mov edi, dword ptr [rdi + 8] ; test rdi, rdi ; jne 0x47f489 ; ret
0x00000000004a7ca6 : mov edi, dword ptr [rdx] ; ret
0x000000000048eeee : mov edi, dword ptr [rsp + 0x10] ; call r14
0x00000000004826b4 : mov edi, dword ptr [rsp + 0x18] ; mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000450f65 : mov edi, dword ptr [rsp + 0x20] ; call r15
0x0000000000450e30 : mov edi, dword ptr [rsp + 0x20] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000451841 : mov edi, dword ptr [rsp + 0x30] ; call r14
0x0000000000451a19 : mov edi, dword ptr [rsp + 0x30] ; call rbx
0x0000000000451d03 : mov edi, dword ptr [rsp + 0x38] ; call r12
0x000000000045233b : mov edi, dword ptr [rsp + 0x38] ; call r14
0x00000000004552ff : mov edi, dword ptr [rsp + 0x38] ; call r15
0x0000000000451549 : mov edi, dword ptr [rsp + 0x38] ; call rbx
0x0000000000451255 : mov edi, dword ptr [rsp + 0x38] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045377a : mov edi, dword ptr [rsp + 0x40] ; call r15
0x0000000000455f26 : mov edi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000453197 : mov edi, dword ptr [rsp + 0x40] ; mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040113e : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000416e1b : mov edi, dword ptr [rsp + 8] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x000000000044a8f1 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000416726 : mov edi, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dddc : mov edi, dword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x0000000000423614 : mov edi, eax ; call rcx
0x00000000004741a8 : mov edi, ebp ; add r15, r12 ; call 0x400497
0x0000000000468a50 : mov edi, ebp ; call 0x4004b1
0x0000000000421b33 : mov edi, ebp ; call 0x41dd74
0x0000000000489b4e : mov edi, ebp ; call qword ptr [r14]
0x00000000004018de : mov edi, ebp ; call qword ptr [r15 + rbx*8]
0x0000000000489c22 : mov edi, ebp ; call qword ptr [rax]
0x0000000000489cfe : mov edi, ebp ; call qword ptr [rcx]
0x000000000045825c : mov edi, ebp ; call r12
0x000000000048eccc : mov edi, ebp ; call r14
0x0000000000422996 : mov edi, ebp ; call rax
0x00000000004741e1 : mov edi, ebp ; call rbx
0x0000000000474332 : mov edi, ebp ; mov r9, r14 ; call rbx
0x000000000040df99 : mov edi, ebp ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000044eb8e : mov edi, ebx ; call r14
0x0000000000413406 : mov edi, ebx ; call rax
0x00000000004167bd : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470e8f : mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000047f423 : mov edi, ecx ; and eax, dword ptr [rax] ; add rsp, 8 ; ret
0x0000000000472308 : mov edi, edi ; call r12
0x0000000000411333 : mov edi, edi ; call rax
0x000000000044f16b : mov edi, edi ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x00000000004848a1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x484889 ; mov rax, rsi ; ret
0x00000000004583b3 : mov edi, esi ; call rbx
0x0000000000458691 : mov edi, esi ; call rdx
0x000000000041d0b1 : mov edi, esi ; mov dword ptr [rsp + 8], r10d ; call 0x419359
0x000000000048dce4 : mov edi, esp ; call r15
0x0000000000472030 : mov edi, esp ; call rbx
0x00000000004481f6 : mov edx, 0 ; cmove rax, rdx ; pop rbx ; ret
0x0000000000412ba6 : mov edx, 0x130 ; pop rbx ; ret
0x000000000045588d : mov edx, 0x180 ; call 0x401af7
0x000000000045584a : mov edx, 0x19f ; call 0x401af7
0x0000000000455869 : mov edx, 0x1be ; call 0x401af7
0x00000000004558b4 : mov edx, 0x22f ; call 0x401af7
0x000000000045582b : mov edx, 0x309 ; call 0x401af7
0x000000000044bd36 : mov edx, 0x64 ; test eax, eax ; cmove eax, edx ; ret
0x000000000040498c : mov edx, 0x8949ffff ; ret 0x149
0x00000000004942c5 : mov edx, 0xbc20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494265 : mov edx, 0xbce0fff9 ; stc ; jmp rax
0x00000000004ab744 : mov edx, 0xc5fffe10 ; adc dh, bh ; call rax
0x00000000004a715e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d0fde
0x00000000004901f2 : mov edx, 0xe1750022 ; pop rbx ; ret
0x0000000000450c07 : mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x000000000047e74c : mov edx, 1 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000045868a : mov edx, dword ptr [rbp - 0x98] ; mov rdi, r14 ; call rdx
0x000000000048dde0 : mov edx, dword ptr [rbp] ; call r12
0x0000000000484f09 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000043eb1f : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000043d24d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000484f1d : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048ecc9 : mov edx, dword ptr [rdi] ; mov rdi, r13 ; call r14
0x00000000004442b2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x00000000004442a3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x00000000004442f3 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444303 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000042f7b1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042fb70 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f401 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004448a0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000435850 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000004448f1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435691 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x0000000000444881 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000444261 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004826b9 : mov edx, dword ptr [rsp + 0x10] ; call rdx
0x000000000048cf19 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000423619 : mov edx, eax ; jmp 0x4235cc
0x000000000045647a : mov edx, eax ; jmp 0x456431
0x00000000004565b1 : mov edx, eax ; jmp 0x456570
0x000000000045687f : mov edx, eax ; jmp 0x456836
0x00000000004568f6 : mov edx, eax ; jmp 0x4568ad
0x000000000046f492 : mov edx, eax ; jmp 0x46f460
0x0000000000475f1e : mov edx, eax ; jmp 0x475f12
0x0000000000489b49 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c1d : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489cf9 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b03 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000447d18 : mov edx, edi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x0000000000455d29 : mov es, edx ; add eax, 0x29480000 ; ret 0x349
0x0000000000453272 : mov es, word ptr [rax + rax] ; add bh, dh ; ret 0
0x0000000000475af9 : mov es, word ptr [rbx] ; add al, 0x11 ; ret
0x0000000000460db4 : mov esi, 0x3d8d48c7 ; ret
0x0000000000450b3c : mov esi, 0x48891b52 ; push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x000000000044fcf2 : mov esi, 0x83480147 ; ret
0x00000000004a627e : mov esi, 0xc2c1c0bf ; ret
0x0000000000448184 : mov esi, 0xf000000 ; lahf ; ret 0xea81
0x0000000000460f1c : mov esi, 1 ; jmp rax
0x000000000046effc : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000044a788 : mov esi, 2 ; jmp rax
0x000000000044a79b : mov esi, 3 ; pop rbp ; pop r12 ; jmp rax
0x0000000000459124 : mov esi, dword ptr [rax + rsi*8] ; test rsi, rsi ; je 0x459136 ; call rsi
0x000000000048d60d : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000044f16e : mov esi, dword ptr [rbp - 0x70] ; call rsi
0x000000000048eeeb : mov esi, dword ptr [rdi] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x000000000048dd95 : mov esi, dword ptr [rsi] ; call r12
0x0000000000447083 : mov esi, dword ptr [rsi] ; mov dword ptr [rdi + rdx - 4], ecx ; mov dword ptr [rdi], esi ; ret
0x000000000044e886 : mov esi, dword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422991 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x0000000000451a14 : mov esi, dword ptr [rsp + 0x38] ; mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451544 : mov esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000455f21 : mov esi, dword ptr [rsp + 0x48] ; mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x00000000004203a9 : mov esi, dword ptr [rsp + 0x68] ; call rax
0x0000000000400589 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400598 ; ret
0x0000000000423611 : mov esi, ebp ; mov rdi, rax ; call rcx
0x0000000000421fc2 : mov esi, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x0000000000421b30 : mov esi, ebx ; mov rdi, r13 ; call 0x41dd77
0x000000000048dc8a : mov esi, edi ; mov edi, 1 ; jmp rax
0x000000000045dd38 : mov esi, edi ; mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000047e7b3 : mov esi, edx ; cmp rcx, rsi ; jne 0x47e798 ; ret
0x0000000000465141 : mov esi, esi ; mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000048dce1 : mov esi, esi ; mov rdi, r12 ; call r15
0x0000000000489b4c : mov esi, esp ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c20 : mov esi, esp ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489cfc : mov esi, esp ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b06 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000470e8c : mov esi, esp ; mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040d2db : mov esp, 0x24448b48 ; sub byte ptr [rax - 0x7d], cl ; ret
0x000000000042b491 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000042b4c1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4b1 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000004abcd8 : mov esp, 0x84000004 ; xchg eax, ebx ; cmc ; call rsp
0x00000000004047af : mov esp, 0x8949ffff ; ret 0x149
0x0000000000417ab2 : mov esp, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x000000000045175d : mov esp, 0x9824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000497454 : mov esp, 0xa4fffc30 ; xor ah, bh ; call rsp
0x0000000000451bdf : mov esp, 0xa824 ; add byte ptr [rax + 0xf], cl ; ret
0x0000000000440bd3 : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x000000000046fe04 : mov esp, 0xd824 ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000042b57b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000042b4a1 : mov esp, 0xf80148c0 ; ret
0x000000000042b992 : mov esp, 0xf80148c0 ; vzeroupper ; ret
0x00000000004007e6 : mov esp, eax ; call 0x448178
0x00000000004006af : mov esp, eax ; call 0x448638
0x00000000004827da : mov esp, eax ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d797 : mov esp, ecx ; ret
0x000000000044ad30 : mov esp, esi ; call r15
0x00000000004529ed : mov fs, word ptr [rbx] ; add eax, 0x29480000 ; ret 0x349
0x0000000000456f6d : mov gs, esi ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x000000000048af03 : mov qword ptr [r10], r8 ; ret
0x0000000000438640 : mov qword ptr [r9 - 8], rcx ; ret
0x000000000044c080 : mov qword ptr [rax + 0x10], rcx ; mov qword ptr [rax + 8], rdx ; ret
0x0000000000470ad8 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000470b18 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b17 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000044c0e6 : mov qword ptr [rax + 0x20], rcx ; mov byte ptr [rax + 0x28], 1 ; ret
0x000000000044c100 : mov qword ptr [rax + 0x20], rsi ; ret
0x0000000000470adc : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000471b99 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x0000000000417534 : mov qword ptr [rax + 8], 0 ; ret
0x000000000044c084 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000484f2c : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000484e7c : mov qword ptr [rax], rdx ; add rsp, 8 ; ret
0x0000000000484f20 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048d2b1 : mov qword ptr [rax], rdx ; ret
0x0000000000471e8a : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047c7a0 : mov qword ptr [rbp - 0x100], r11 ; call r10
0x000000000047d140 : mov qword ptr [rbp - 0xe0], r11 ; call r10
0x0000000000458811 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000412b26 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000481d9d : mov qword ptr [rbx + 0x10], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000412f0e : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000047fa8d : mov qword ptr [rbx + 0x10], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000485c32 : mov qword ptr [rbx + 0x18], 0 ; jmp 0x485c08
0x0000000000481cd2 : mov qword ptr [rbx + 0x18], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x00000000004884c4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x0000000000488598 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x00000000004166b0 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000041834c : mov qword ptr [rbx + 0x60], rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004856f2 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a4f8 : mov qword ptr [rbx], rax ; pop rax ; pop rdx ; pop rbx ; ret
0x0000000000410020 : mov qword ptr [rcx + 0x130], rdx ; ret
0x0000000000482ffe : mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000444abc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000044442c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000044440c : mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000044446f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000044448f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000444450 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000416592 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000047b744 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000047b716 : mov qword ptr [rdi + 0x308], rax ; ret
0x00000000004165c2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048d2f0 : mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000444a7c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004443cc : mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000444a9c : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000004443ec : mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000435627 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004355b7 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000435547 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004354d7 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044497a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000435467 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044431a : mov qword ptr [rdi + 5], rdx ; ret
0x000000000044499a : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x00000000004353f7 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044432a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000004449ba : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000435387 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000044433a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000484423 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000482f83 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000048476d : mov qword ptr [rdi + 8], rax ; mov eax, 2 ; ret
0x0000000000416596 : mov qword ptr [rdi + 8], rax ; ret
0x0000000000447dea : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rcx ; ret
0x0000000000447076 : mov qword ptr [rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x000000000048d29b : mov qword ptr [rdi + rsi*8], rdx ; ret
0x000000000042f294 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000482eee : mov qword ptr [rdi - 0x10], r9 ; ret
0x000000000042f61b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434e37 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f7fb : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434db7 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f9eb : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434d37 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042fbbc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434ca8 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042fdbc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434c18 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000042ffbc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000434b88 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000482e79 : mov qword ptr [rdi - 8], r9 ; ret
0x000000000042f298 : mov qword ptr [rdi - 8], rcx ; ret
0x000000000042f2d6 : mov qword ptr [rdi - 8], rdx ; ret
0x000000000042f44b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f547 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f493 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000434eb7 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004687b9 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000482e48 : mov qword ptr [rdi], r9 ; ret
0x0000000000444906 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004442f6 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000444306 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000444317 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000444327 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000444337 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x00000000004442e7 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000043538b : mov qword ptr [rdi], rcx ; ret
0x0000000000447f6e : mov qword ptr [rdi], rcx ; vzeroupper ; ret
0x00000000004448f3 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000435693 : mov qword ptr [rdi], rdx ; ret
0x000000000043863d : mov qword ptr [rdi], rsi ; mov qword ptr [r9 - 8], rcx ; ret
0x000000000044707b : mov qword ptr [rdi], rsi ; ret
0x0000000000412ba4 : mov qword ptr [rdx + 0x130], rdi ; pop rbx ; ret
0x0000000000443e9a : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000044268a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000443eba : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x00000000004426aa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000443eda : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004426ca : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x0000000000443d6a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004425ba : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x00000000004184bf : mov qword ptr [rdx + 8], rax ; xor eax, eax ; ret
0x0000000000443d13 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000442563 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000484f0c : mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000418427 : mov qword ptr [rdx], rax ; ret
0x0000000000484a57 : mov qword ptr [rip + 0x23760a], rax ; ret
0x000000000047f364 : mov qword ptr [rip + 0x23d045], rax ; ret
0x000000000041f8d5 : mov qword ptr [rip + 0x299f84], rax ; ret
0x00000000004197fb : mov qword ptr [rip + 0x2a005e], rax ; ret
0x00000000004192f6 : mov qword ptr [rip + 0x2a04f3], rax ; ret
0x00000000004192ce : mov qword ptr [rip + 0x2a0513], rax ; ret
0x00000000004192ae : mov qword ptr [rip + 0x2a052b], rax ; ret
0x00000000004191a4 : mov qword ptr [rip + 0x2a069d], rax ; ret
0x0000000000419194 : mov qword ptr [rip + 0x2a06a5], rax ; ret
0x0000000000419182 : mov qword ptr [rip + 0x2a06a7], rdx ; ret
0x0000000000419144 : mov qword ptr [rip + 0x2a06ad], rax ; ret
0x0000000000419134 : mov qword ptr [rip + 0x2a06c5], rax ; ret
0x0000000000478930 : mov qword ptr [rsi], -1 ; xor eax, eax ; ret
0x000000000047f4d1 : mov qword ptr [rsi], rax ; ret
0x000000000047e818 : mov qword ptr [rsi], rdi ; mov rax, rcx ; ret
0x000000000045d159 : mov qword ptr [rsi], rdi ; xor eax, eax ; jmp 0x45d127
0x000000000045122b : mov qword ptr [rsp + 0x50], rax ; call 0x44d507
0x000000000041ca9e : mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041132d : mov qword ptr [rsp + 8], rcx ; mov rdi, r15 ; call rax
0x0000000000489ca2 : mov qword ptr [rsp], r8 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000413401 : mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x0000000000416714 : mov qword ptr [rsp], rdi ; call 0x4129a6
0x000000000045ac15 : mov qword ptr fs:[rdx], rax ; ret
0x0000000000447075 : mov qword ptr ss:[rdi + rdx - 8], rcx ; mov qword ptr [rdi], rsi ; ret
0x00000000004a715d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d0fdf
0x000000000040f343 : mov r11d, 1 ; jmp 0x40f314
0x000000000045d0bb : mov r11d, 1 ; jmp 0x45d08c
0x00000000004007e5 : mov r12, rax ; call 0x448179
0x00000000004006ae : mov r12, rax ; call 0x448639
0x000000000044ad2f : mov r12d, r14d ; call r15
0x000000000048d60c : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048d610 : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x000000000048af00 : mov r8, qword ptr [r8] ; mov qword ptr [r10], r8 ; ret
0x0000000000458421 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x3d], cl ; jmp rdx
0x000000000044e88a : mov r9, r13 ; call rbx
0x0000000000474334 : mov r9, r14 ; call rbx
0x00000000004179c0 : mov rax, -1 ; ret
0x0000000000474950 : mov rax, 1 ; ret
0x0000000000474960 : mov rax, 2 ; ret
0x0000000000474970 : mov rax, 3 ; ret
0x0000000000474980 : mov rax, 4 ; ret
0x0000000000474990 : mov rax, 5 ; ret
0x00000000004749a0 : mov rax, 6 ; ret
0x00000000004749b0 : mov rax, 7 ; ret
0x0000000000486d6e : mov rax, qword ptr [r12] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047cce5 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004118c0 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000471fa3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000481b90 : mov rax, qword ptr [rax + 8] ; ret
0x000000000045921f : mov rax, qword ptr [rax + rbp*8] ; test rax, rax ; je 0x459233 ; call rax
0x000000000046bdb9 : mov rax, qword ptr [rax + rcx*8] ; mov ecx, 1 ; jmp rax
0x000000000045ac2e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000046098c : mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x000000000048d242 : mov rax, qword ptr [rax] ; ret
0x000000000047c500 : mov rax, qword ptr [rbx + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004166fc : mov rax, qword ptr [rbx + 0x18] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000484f28 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000416de8 : mov rax, qword ptr [rbx + 0x40] ; add rsp, 0x20 ; pop rbx ; jmp rax
0x0000000000442560 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000490e2c : mov rax, qword ptr [rdi + 0x20] ; test rax, rax ; je 0x490e45 ; call rax
0x0000000000471fa0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000418780 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048d270 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048d2c0 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048d300 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048d360 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048d350 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048d310 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000460ece : mov rax, qword ptr [rdi + rax*8] ; jmp rax
0x0000000000487de0 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x487df9 ; ret
0x0000000000418424 : mov rax, qword ptr [rdi] ; mov qword ptr [rdx], rax ; ret
0x0000000000418410 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x418411 ; ret
0x000000000047f459 : mov rax, qword ptr [rip + 0x23cf50] ; ret
0x0000000000457a90 : mov rax, qword ptr [rip + 0x2643e1] ; ret
0x000000000044f590 : mov rax, qword ptr [rip + 0x26d391] ; ret
0x0000000000418760 : mov rax, qword ptr [rip + 0x2a09b9] ; ret
0x000000000048e1b1 : mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048b040 : mov rax, qword ptr [rsi + 0xa8] ; ret
0x000000000048b013 : mov rax, qword ptr [rsi + 0xb0] ; ret
0x000000000048b030 : mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e1d0 : mov rax, qword ptr [rsi + 8] ; ret
0x000000000046bd7e : mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000460f18 : mov rax, qword ptr [rsi + rax*8] ; mov esi, 1 ; jmp rax
0x0000000000461578 : mov rax, qword ptr [rsi + rax*8] ; xor esi, esi ; jmp rax
0x000000000048d335 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x000000000044a8f5 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401142 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000045319b : mov rax, qword ptr [rsp + 0x20] ; call rax
0x000000000040df0c : mov rax, qword ptr [rsp + 8] ; call rax
0x000000000048aaa9 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x000000000046ed97 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000044acbd : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a9cf : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004227ae : mov rax, r8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000473b70 : mov rax, r8 ; vzeroupper ; ret
0x000000000044b2d3 : mov rax, rbp ; pop rbx ; pop rbp ; jmp rax
0x00000000004101e2 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000413e36 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048d46a : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x0000000000414881 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000410354 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044a50f : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000412b2a : mov rax, rbx ; pop rbx ; ret
0x000000000047e81b : mov rax, rcx ; ret
0x0000000000412a22 : mov rax, rdi ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041ac64 : mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000412a53 : mov rax, rdi ; ret
0x000000000041a864 : mov rax, rdx ; add rsp, 8 ; ret
0x00000000004753fa : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041a21c : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000004482f5 : mov rax, rdx ; pop rbx ; ret
0x000000000041a870 : mov rax, rdx ; ret
0x000000000041dd2c : mov rax, rsi ; pop rbx ; ret
0x000000000041dd60 : mov rax, rsi ; ret
0x000000000048d792 : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048e9d9 : mov rbp, qword ptr [rsp + 8] ; jmp 0x48e9f9
0x00000000004827dc : mov rbp, r9 ; nop ; jmp rdx
0x000000000046fef8 : mov rbp, rax ; jmp 0x46fec3
0x000000000045a625 : mov rbx, rdi ; test rax, rax ; je 0x45a637 ; call rax
0x00000000004442d0 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000481c86 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000481c14 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x58 ; jmp qword ptr [rax]
0x00000000004725b0 : mov rcx, rax ; jmp 0x47257c
0x0000000000447051 : mov rcx, rdx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044b3eb : mov rdi, qword ptr [r13] ; call r12
0x000000000040df08 : mov rdi, qword ptr [r13] ; mov rax, qword ptr [rsp + 8] ; call rax
0x000000000040e9a3 : mov rdi, qword ptr [rax + 0x20] ; call rdx
0x000000000044ad2b : mov rdi, qword ptr [rbp - 0x58] ; mov r12d, r14d ; call r15
0x000000000045dd3a : mov rdi, qword ptr [rbp - 0x8a8] ; call rax
0x000000000046926c : mov rdi, qword ptr [rbp - 0x8d0] ; call rax
0x0000000000465143 : mov rdi, qword ptr [rbp - 0xc0] ; call rax
0x000000000044a813 : mov rdi, qword ptr [rbp] ; call r12
0x000000000044a7ed : mov rdi, qword ptr [rbx] ; call r12
0x000000000048eeed : mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000450f64 : mov rdi, qword ptr [rsp + 0x20] ; call r15
0x0000000000451840 : mov rdi, qword ptr [rsp + 0x30] ; call r14
0x0000000000451a18 : mov rdi, qword ptr [rsp + 0x30] ; call rbx
0x0000000000451d02 : mov rdi, qword ptr [rsp + 0x38] ; call r12
0x000000000045233a : mov rdi, qword ptr [rsp + 0x38] ; call r14
0x00000000004552fe : mov rdi, qword ptr [rsp + 0x38] ; call r15
0x0000000000451548 : mov rdi, qword ptr [rsp + 0x38] ; call rbx
0x0000000000453779 : mov rdi, qword ptr [rsp + 0x40] ; call r15
0x0000000000455f25 : mov rdi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000416725 : mov rdi, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000048dddb : mov rdi, qword ptr [rsp] ; mov rdx, qword ptr [rbp] ; call r12
0x000000000048dce3 : mov rdi, r12 ; call r15
0x000000000047202f : mov rdi, r12 ; call rbx
0x00000000004741a7 : mov rdi, r13 ; add r15, r12 ; call 0x400498
0x0000000000421b32 : mov rdi, r13 ; call 0x41dd75
0x000000000045825b : mov rdi, r13 ; call r12
0x000000000048eccb : mov rdi, r13 ; call r14
0x0000000000492140 : mov rdi, r13 ; call rax
0x000000000040df98 : mov rdi, r13 ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004583b2 : mov rdi, r14 ; call rbx
0x0000000000458690 : mov rdi, r14 ; call rdx
0x0000000000472307 : mov rdi, r15 ; call r12
0x0000000000411332 : mov rdi, r15 ; call rax
0x000000000044f16a : mov rdi, r15 ; mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x0000000000423613 : mov rdi, rax ; call rcx
0x0000000000422995 : mov rdi, rbp ; call rax
0x00000000004741e0 : mov rdi, rbp ; call rbx
0x0000000000474331 : mov rdi, rbp ; mov r9, r14 ; call rbx
0x000000000044eb8d : mov rdi, rbx ; call r14
0x0000000000413405 : mov rdi, rbx ; call rax
0x00000000004167bc : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000470e8e : mov rdi, rbx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000048cf18 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x000000000048ecc8 : mov rdx, qword ptr [r15] ; mov rdi, r13 ; call r14
0x000000000048dddf : mov rdx, qword ptr [rbp] ; call r12
0x0000000000484f08 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000484f1c : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000042f400 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000435690 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004826b8 : mov rdx, qword ptr [rsp + 0x10] ; call rdx
0x0000000000489b48 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c1c : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489cf8 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b02 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000046f491 : mov rdx, r8 ; jmp 0x46f461
0x0000000000423618 : mov rdx, rax ; jmp 0x4235cd
0x0000000000456479 : mov rdx, rax ; jmp 0x456432
0x00000000004565b0 : mov rdx, rax ; jmp 0x456571
0x000000000045687e : mov rdx, rax ; jmp 0x456837
0x00000000004568f5 : mov rdx, rax ; jmp 0x4568ae
0x0000000000475f1d : mov rdx, rax ; jmp 0x475f13
0x0000000000447d17 : mov rdx, rdi ; rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000048dd94 : mov rsi, qword ptr [r14] ; call r12
0x000000000048eeea : mov rsi, qword ptr [r15] ; mov rdi, qword ptr [rsp + 0x10] ; call r14
0x0000000000459123 : mov rsi, qword ptr [rax + r14*8] ; test rsi, rsi ; je 0x459137 ; call rsi
0x000000000044f16d : mov rsi, qword ptr [rbp - 0x70] ; call rsi
0x000000000044e885 : mov rsi, qword ptr [rsp + 0x18] ; mov r9, r13 ; call rbx
0x0000000000422990 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, rbp ; call rax
0x00000000004203a8 : mov rsi, qword ptr [rsp + 0x68] ; call rax
0x0000000000489b4b : mov rsi, r12 ; mov edi, ebp ; call qword ptr [r14]
0x0000000000489c1f : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000489cfb : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rcx]
0x0000000000489b05 : mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000048dce0 : mov rsi, r14 ; mov rdi, r12 ; call r15
0x0000000000400588 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400599 ; ret
0x0000000000423610 : mov rsi, rbp ; mov rdi, rax ; call rcx
0x0000000000421b2f : mov rsi, rbx ; mov rdi, r13 ; call 0x41dd78
0x000000000048dc89 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x000000000047e7b2 : mov rsi, rdx ; cmp rcx, rsi ; jne 0x47e799 ; ret
0x00000000004827d9 : mov rsp, r8 ; mov rbp, r9 ; nop ; jmp rdx
0x000000000048d796 : mov rsp, rcx ; ret
0x000000000046c8a6 : mov ss, word ptr [rax + rax + 0x63490000] ; ret 0x8948
0x0000000000438665 : mov word ptr [r9 - 2], cx ; ret
0x00000000004449fc : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000044436c : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444b04 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000444454 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000004358c7 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x00000000004448c8 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004442a8 : mov word ptr [rdi + 4], dx ; ret
0x000000000044491a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x00000000004442ea : mov word ptr [rdi + 8], dx ; ret
0x0000000000447dfa : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], cx ; ret
0x0000000000447094 : mov word ptr [rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x000000000042f99c : mov word ptr [rdi - 2], cx ; ret
0x000000000042f7b4 : mov word ptr [rdi - 2], dx ; ret
0x000000000042f998 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000444273 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000446dd2 : mov word ptr [rdi], cx ; mov word ptr [rsi - 2], cx ; ret
0x00000000004358cb : mov word ptr [rdi], cx ; ret
0x0000000000447f84 : mov word ptr [rdi], cx ; vzeroupper ; ret
0x0000000000444883 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000435933 : mov word ptr [rdi], dx ; ret
0x0000000000438662 : mov word ptr [rdi], si ; mov word ptr [r9 - 2], cx ; ret
0x0000000000447099 : mov word ptr [rdi], si ; ret
0x0000000000443de8 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x0000000000442628 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x0000000000443d93 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x00000000004425e3 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000446dd5 : mov word ptr [rsi - 2], cx ; ret
0x00000000004047db : mov word ptr [rsp + rcx*4], fs ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x149
0x0000000000447093 : mov word ptr ss:[rdi + rdx - 2], cx ; mov word ptr [rdi], si ; ret
0x0000000000447567 : movabs al, byte ptr [0x77f8c5237f7ec1c4] ; ret
0x000000000042df22 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042df1e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dfcc : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000444340 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bbd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044450d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000043559f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043552f : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354bf : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043544f : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b5d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000004444ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004353df : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004444cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043536f : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000004444ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043598f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043591f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358af : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043583f : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357cf : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043575f : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356ef : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043567f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000043560f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447d6d : movdqu xmmword ptr [rdi + rdx - 0x20], xmm0 ; ret
0x0000000000434afb : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x0000000000434b6b : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449d4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444354 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000444397 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444387 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444408 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443c8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443e8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444368 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000444509 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444a9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444c9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444e9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043531a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000435374 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444341 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000444bbe : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000044450e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000004355a0 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435530 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004354c0 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435450 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b5e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000004444ae : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000004353e0 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b7e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004444ce : movq qword ptr [rdi + 0xe], mm2 ; ret
0x0000000000435370 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000444b9e : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000004444ee : movq qword ptr [rdi + 0xf], mm2 ; ret
0x0000000000435990 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435920 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004358b0 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435840 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004357d0 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435760 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004356f0 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435680 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000435610 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000447cf5 : movq qword ptr [rdi + rdx - 0x10], mm0 ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000447d6e : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000434afc : movq qword ptr [rdi - 0x10], mm0 ; ret
0x0000000000434b6c : movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004352a7 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435227 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435197 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435117 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435097 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000435017 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f97 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434f17 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e97 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434e17 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d97 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434d17 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434c87 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434bf7 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000434b67 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x00000000004449d5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000444355 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004443a8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000444398 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000444388 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444409 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000004443c9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004443e9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000444369 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000044450a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000004444aa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000004444ca : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000004444ea : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043531b : movq qword ptr [rdi], mm0 ; ret
0x0000000000435375 : movq qword ptr [rdi], mm1 ; ret
0x00000000004578dc : movsb byte ptr [rdi], byte ptr [rsi] ; and al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000446ff5 : movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x00000000004a7b22 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004a8d7d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4a8dd6 ; jmp 0x4a8d17
0x0000000000446fe7 : movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000497458 : movsb byte ptr [rdi], byte ptr [rsi] ; xor ah, bh ; call rsp
0x000000000047fa3c : movsb byte ptr [rdi], byte ptr [rsi] ; xor eax, eax ; ret
0x0000000000495049 : movsd dword ptr [rdi], dword ptr [rsi] ; cli ; call qword ptr [rax - 0x1f00055a]
0x00000000004a93b5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004a8c71 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046be67 : movsd dword ptr [rdi], dword ptr [rsi] ; or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000482ea2 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004b0149 : movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000048aea4 : movss dword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000480f6b : movsx eax, cl ; neg eax ; ret
0x0000000000481010 : movsx eax, dl ; sub eax, ecx ; ret
0x0000000000424991 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000432f7b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x000000000042d9fb : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048c148 : movsxd rax, dword ptr [r12 + rax*4] ; add rax, r12 ; jmp rax
0x00000000004021ae : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000048ca49 : movsxd rax, dword ptr [r14 + rax*4] ; add rax, r14 ; jmp rax
0x000000000048b0f7 : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x000000000048aed1 : movsxd rax, dword ptr [r8 + rcx*4] ; add rax, r8 ; jmp rax
0x000000000048c681 : movsxd rax, dword ptr [r9 + r11*4] ; add rax, r9 ; jmp rax
0x000000000044d60e : movsxd rax, dword ptr [rbp + rax*4] ; add rax, rbp ; jmp rax
0x000000000044d597 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x000000000047c1dd : movsxd rax, dword ptr [rcx + r12*4] ; add rax, rcx ; jmp rax
0x000000000046eb86 : movsxd rax, dword ptr [rcx + rax*4] ; add rax, rcx ; jmp rax
0x000000000047cb05 : movsxd rax, dword ptr [rdi + r12*4] ; add rax, rdi ; jmp rax
0x000000000046f1b6 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000401f45 : movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x0000000000449333 : movsxd rax, dword ptr [rdx + rbx*4] ; add rax, rdx ; jmp rax
0x000000000046ea1a : movsxd rax, dword ptr [rsi + rax*4] ; add rax, rsi ; jmp rax
0x00000000004481b7 : movsxd rax, dword ptr [rsi + rdi*4] ; add rax, rsi ; jmp rax
0x0000000000448271 : movsxd rax, dword ptr [rsi + rdx*4] ; add rax, rsi ; jmp rax
0x000000000048535d : movsxd rax, ecx ; add rax, rdi ; sub rax, r8 ; ret
0x0000000000446c87 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x0000000000446c34 : movsxd rax, ecx ; ret
0x0000000000446c79 : movsxd rbx, ecx ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000042c32d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000444109 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004481df : movsxd rcx, dword ptr [rsi + rax*4] ; add rcx, rsi ; jmp rcx
0x0000000000446cc7 : movsxd rcx, ecx ; lea rax, qword ptr [rdi + rcx] ; sub rax, rsi ; ret
0x000000000040d547 : movsxd rdi, dword ptr [r10 + rdi*4] ; add rdi, r10 ; jmp rdi
0x000000000045a41f : movsxd rdi, dword ptr [r11 + rsi*4] ; add rdi, r11 ; jmp rdi
0x000000000042dacf : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000040d25e : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x00000000004495a9 : movsxd rdx, eax ; jmp 0x449353
0x0000000000459f20 : movsxd rsi, dword ptr [r8 + r9*4] ; add rsi, r8 ; jmp rsi
0x00000000004460ec : movsxd rsi, esi ; ret 0x7520
0x00000000004471af : movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447236 : movups xmmword ptr [r11], xmm8 ; ret
0x0000000000447237 : movups xmmword ptr [rbx], xmm0 ; ret
0x00000000004471b0 : movups xmmword ptr [rbx], xmm4 ; ret
0x00000000004471ab : movups xmmword ptr [rcx - 0x30], xmm0 ; movups xmmword ptr [r11], xmm4 ; ret
0x00000000004471aa : movups xmmword ptr [rcx - 0x30], xmm8 ; movups xmmword ptr [r11], xmm4 ; ret
0x0000000000447232 : movups xmmword ptr [rdi + 0x30], xmm7 ; movups xmmword ptr [r11], xmm8 ; ret
0x0000000000446f92 : movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000447119 : movups xmmword ptr [rdi + rdx - 0x20], xmm3 ; ret
0x00000000004470f6 : movups xmmword ptr [rdi + rdx - 0x40], xmm7 ; ret
0x0000000000446f8f : movups xmmword ptr [rdi], xmm0 ; movups xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x000000000048aea5 : movups xmmword ptr [rsp - 0x28], xmm0 ; ret
0x0000000000475901 : movzx eax, al ; add rsp, 0x58 ; ret
0x000000000048849c : movzx eax, al ; neg eax ; ret
0x0000000000484d69 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044e900 : movzx eax, al ; xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x0000000000415610 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048e0fe : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416811 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412cfe : movzx eax, byte ptr [rax] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000041889f : movzx eax, byte ptr [rax] ; ret
0x000000000046bd7a : movzx eax, byte ptr [rdi + rax] ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000425d28 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000042c0c0 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000042bc00 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000425d43 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000416820 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000412d10 : movzx eax, byte ptr [rdx] ; ret
0x0000000000415611 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000448240 : movzx eax, cl ; pop rbx ; ret
0x000000000044674a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x446749 ; ret
0x00000000004467fa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x4467f9 ; ret
0x000000000042d1e4 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000447068 : movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000425d40 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000042c0c3 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000040dae3 : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x40dacb ; ret
0x0000000000425f01 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000042a378 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000042c048 : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; vzeroupper ; ret
0x0000000000425d93 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000446114 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000446174 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000446164 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000446154 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000446144 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000446134 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000446124 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x00000000004352c0 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042cf97 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x00000000004460fb : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x00000000004359a0 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042bc03 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042bc29 : movzx edx, dl ; sub eax, edx ; ret
0x0000000000435240 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000435930 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000473407 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000449c73 : neg eax ; jmp 0x449c3c
0x0000000000449637 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004188df : neg eax ; ret
0x0000000000493f48 : nop ; adc bh, cl ; call rax
0x0000000000494754 : nop ; adc dl, bh ; jmp qword ptr [rax]
0x000000000049453c : nop ; adc edi, edx ; jmp qword ptr [rax]
0x00000000004349f7 : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000044b417 : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b428 ; call r12
0x000000000042c64c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b4855 : nop ; add byte ptr [rax], al ; or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x0000000000475b3c : nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000044ea3f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487e3f : nop ; add rsp, 8 ; ret
0x00000000004b3260 : nop ; and edi, esp ; jmp qword ptr [rcx]
0x000000000048574f : nop ; call rax
0x000000000044f170 : nop ; call rsi
0x0000000000494a34 : nop ; cmp bh, dl ; jmp qword ptr [rax]
0x000000000044c0ef : nop ; cmp rcx, qword ptr [rax + 0x10] ; jae 0x44c0e8 ; ret
0x000000000049504c : nop ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cli ; jmp rax
0x0000000000494318 : nop ; cmpsd dword ptr [rsi], dword ptr [rdi] ; stc ; jmp rax
0x00000000004943c8 : nop ; in eax, 0xf9 ; call qword ptr [rax + 0x20fff9e7]
0x00000000004827df : nop ; jmp rdx
0x000000000042f5cf : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000419323 : nop ; mov dword ptr [rip + 0x2a2a6a], eax ; ret
0x000000000042f7af : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x00000000004853cf : nop ; mov eax, 0x27 ; syscall ; ret
0x0000000000474ebf : nop ; mov eax, 0xc9 ; syscall ; ret
0x0000000000416c3f : nop ; mov eax, 0xffffffff ; ret
0x000000000047fddf : nop ; mov eax, 1 ; pop rbx ; ret
0x00000000004944b0 : nop ; mov edi, 0xc3d0fff9 ; stc ; jmp qword ptr [rax]
0x000000000042fb6f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000044489f : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000471e89 : nop ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x00000000004191a3 : nop ; mov qword ptr [rip + 0x2a069d], rax ; ret
0x0000000000419193 : nop ; mov qword ptr [rip + 0x2a06a5], rax ; ret
0x0000000000419143 : nop ; mov qword ptr [rip + 0x2a06ad], rax ; ret
0x0000000000419133 : nop ; mov qword ptr [rip + 0x2a06c5], rax ; ret
0x000000000048d2bf : nop ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048b02f : nop ; mov rax, qword ptr [rsi + 0xb8] ; ret
0x000000000048e1cf : nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000044433f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000046f1ff : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f1ce
0x000000000046f1fe : nop ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f1cf
0x0000000000493f38 : nop ; or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x00000000004943cc : nop ; out 0xf9, eax ; jmp qword ptr [rax]
0x0000000000400b8d : nop ; pop rbp ; ret
0x00000000004b09ac : nop ; push rcx ; add byte ptr [rax], al ; ja 0x4b09b4 ; hlt ; jmp qword ptr [rbx]
0x00000000004004cf : nop ; ret
0x00000000004944e4 : nop ; sar ecx, cl ; jmp rax
0x00000000004940a9 : nop ; stc ; call qword ptr [rax]
0x00000000004940bd : nop ; stc ; call rcx
0x000000000041845f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000494198 : nop ; xchg eax, esp ; stc ; jmp qword ptr [rax]
0x00000000004148af : nop ; xor eax, eax ; ret
0x000000000040ea68 : nop dword ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419df8 : nop dword ptr [rax + rax] ; call rax
0x0000000000485968 : nop dword ptr [rax + rax] ; call rbx
0x000000000044427b : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000400a93 : nop dword ptr [rax + rax] ; pop rbp ; ret
0x00000000004118c8 : nop dword ptr [rax + rax] ; pop rbx ; ret
0x0000000000400a5b : nop dword ptr [rax + rax] ; ret
0x000000000044664b : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000047491c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000004235ad : nop dword ptr [rax] ; mov eax, 0x16 ; ret
0x0000000000471f85 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x000000000041a86c : nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000400ad5 : nop dword ptr [rax] ; pop rbp ; ret
0x000000000044886c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000419ded : nop dword ptr [rax] ; pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000418571 : nop dword ptr [rax] ; ret
0x00000000004147ed : nop dword ptr [rax] ; xor eax, eax ; jmp 0x4147bd
0x0000000000416d75 : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000485967 : nop dword ptr cs:[rax + rax] ; call rbx
0x000000000040ea67 : nop word ptr [rax + rax] ; call qword ptr [rbx]
0x0000000000419df7 : nop word ptr [rax + rax] ; call rax
0x0000000000484cda : nop word ptr [rax + rax] ; pop rbx ; ret
0x0000000000474702 : nop word ptr [rax + rax] ; ret
0x000000000044844a : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x000000000042a4f7 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a525 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000475a22 : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000041dd5c : or al, 0 ; add byte ptr [rax], al ; mov rax, rsi ; ret
0x0000000000473d48 : or al, 0 ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x000000000046be68 : or al, 0 ; add byte ptr [rcx + 1], al ; ret 0x8b48
0x0000000000468ed5 : or al, 0x13 ; add rdx, r12 ; call qword ptr [r10 + rax*8]
0x0000000000425d26 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x000000000041dd2a : or al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000413403 : or al, 0x24 ; mov rdi, rbx ; call rax
0x000000000047fa39 : or al, 0x37 ; jae 0x47f9e7 ; xor eax, eax ; ret
0x00000000004246a0 : or al, 0x39 ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000046f202 : or al, 0x40 ; jmp 0x46f1cb
0x000000000046f201 : or al, 0x40 ; jmp 0x46f1cc
0x00000000004af928 : or al, 0x41 ; add byte ptr [rax], al ; xor al, 0x7a ; stc ; call rsp
0x0000000000449ced : or al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x0000000000416713 : or al, 0x48 ; mov dword ptr [rsp], edi ; call 0x4129a7
0x0000000000401141 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000485123 : or al, 0x5b ; pop rbp ; pop r12 ; ret
0x000000000046ecb3 : or al, 0x7e ; ret 0x8944
0x00000000004587d3 : or al, 0x83 ; inc byte ptr [rbx] ; je 0x4587e7 ; ret
0x000000000045e19b : or al, 0x83 ; ret
0x00000000004af9a4 : or al, 0x83 ; stc ; call qword ptr [rdx]
0x00000000004481e1 : or al, 0x86 ; add rcx, rsi ; jmp rcx
0x000000000046342a : or al, 0x89 ; ret 0xc689
0x000000000044826b : or al, 0x89 ; ret 0xe283
0x0000000000424993 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000043ae54 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000432f7d : or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000042d9fd : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000475af8 : or al, 0x8e ; add eax, dword ptr [rcx + rdx] ; ret
0x000000000042c32f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x000000000044410b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042da01 : or al, 0xb ; jmp r9
0x000000000044410f : or al, 0xb ; jmp rcx
0x00000000004114e8 : or al, 0xe8 ; ret 0xec
0x000000000045670f : or al, 0xe9 ; ret
0x0000000000471c2c : or al, 0xeb ; ret 0x5590
0x00000000004354c3 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000466b8d : or al, 0xf6 ; ret 0xf01
0x0000000000493f35 : or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x0000000000422e51 : or al, 9 ; ret 0xbae9
0x000000000047fc13 : or al, bh ; dec dword ptr [rax - 0x73] ; push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x0000000000473cfb : or al, byte ptr [rax] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042a6d7 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e0c1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a705 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048cfea : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x00000000004ac2a5 : or al, byte ptr [rax] ; add byte ptr [rax], ch ; sub esi, esi ; call qword ptr [rax]
0x00000000004ac2cd : or al, byte ptr [rax] ; add byte ptr [rax], dh ; sub esi, esi ; jmp qword ptr [rax]
0x000000000040760d : or al, byte ptr [rbx - 0x7bf0fd07] ; ret
0x000000000040aa9c : or al, byte ptr [rbx - 0x7bf0fd07] ; ret 0x18
0x000000000044c6a6 : or al, byte ptr [rcx + rcx*8 - 0x7cb7ed8c] ; ret 0x4801
0x00000000004b3f73 : or al, byte ptr [rcx] ; ret
0x000000000040bc77 : or al, ch ; ret
0x000000000040ad78 : or al, ch ; ret 0xffb2
0x000000000041d0b7 : or al, ch ; xchg eax, ebx ; ret 0xffff
0x0000000000493f6d : or bh, cl ; inc eax ; and ecx, edi ; jmp rax
0x0000000000424580 : or bh, dh ; ret 0
0x00000000004947fd : or bh, dl ; call qword ptr [rdx + 0x12fffa09]
0x00000000004947f9 : or bh, dl ; call qword ptr [rdx]
0x0000000000494979 : or bh, dl ; call rax
0x0000000000494939 : or bh, dl ; jmp rax
0x0000000000494935 : or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x000000000041a86a : or bl, al ; nop dword ptr [rax] ; mov rax, rdx ; ret
0x0000000000405dbd : or bl, byte ptr [rbx + 0x31] ; rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x000000000048e9dd : or bl, ch ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000435683 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000044a487 : or bl, dh ; ret
0x000000000044fde6 : or byte ptr [r15], 0x8e ; ret 1
0x00000000004116c1 : or byte ptr [r8 + 0x29], r9b ; ret
0x000000000040e10d : or byte ptr [r8 + 0x39], cl ; ret
0x0000000000451133 : or byte ptr [r8 + 0xf], cl ; ret
0x000000000048476f : or byte ptr [r8 + 2], r15b ; ret
0x000000000041178f : or byte ptr [r8 - 0x3f], r9b ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x000000000047f57a : or byte ptr [r8 - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004425b8 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047fa65 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000478df2 : or byte ptr [r8 - 0x7b], r9b ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004847b4 : or byte ptr [r9 + 0x2b802], r9b ; add byte ptr [rax], al ; ret
0x000000000048ca47 : or byte ptr [r9 + 0x63], r9b ; add al, 0x86 ; add rax, r14 ; jmp rax
0x0000000000442677 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x00000000004116c2 : or byte ptr [rax + 0x29], cl ; ret
0x0000000000412ef5 : or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000040e10e : or byte ptr [rax + 0x39], cl ; ret
0x00000000004529e8 : or byte ptr [rax + 0x39], cl ; ret 0x8e0f
0x0000000000418899 : or byte ptr [rax + 0x39], cl ; sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x00000000004ad13e : or byte ptr [rax + 0xb], cl ; add dh, byte ptr [rbx + 0xa] ; ret
0x0000000000451134 : or byte ptr [rax + 0xf], cl ; ret
0x0000000000419946 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret 0x8948
0x00000000004868fc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047d861 : or byte ptr [rax + 1], cl ; ret
0x0000000000484770 : or byte ptr [rax + 2], bh ; ret
0x0000000000411790 : or byte ptr [rax - 0x3f], cl ; sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004191e3 : or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000044a8f4 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000044b2d2 : or byte ptr [rax - 0x77], cl ; call 0xffffffffe144103b
0x00000000004425bd : or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f57b : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000044a50e : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004167bb : or byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000004425b9 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047f920 : or byte ptr [rax - 0x77], cl ; ret
0x000000000048956a : or byte ptr [rax - 0x77], r9b ; ret
0x00000000004b5824 : or byte ptr [rax - 0x7af80000], ah ; std ; call qword ptr [rbx]
0x000000000047f4a8 : or byte ptr [rax - 0x7b], cl ; push qword ptr [rbp - 0x2e] ; ret
0x0000000000478df3 : or byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x00000000004897be : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x000000000047fa66 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x0000000000489817 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x000000000041ee70 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000045b680 : or byte ptr [rax - 0x7d], cl ; call qword ptr [rbx]
0x000000000044aca2 : or byte ptr [rax - 0x7d], cl ; ret
0x000000000047b6a7 : or byte ptr [rax - 0x7d], cl ; ret 0x101
0x000000000047dd12 : or byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000044c560 : or byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000411da6 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000047269e : or byte ptr [rax], al ; add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000041a50b : or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000042a9a7 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e261 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8e5 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000417537 : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004510da : or byte ptr [rax], al ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x00000000004482b5 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000044e951 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041f746 : or byte ptr [rax], al ; add byte ptr [rcx + rdi - 0x3e], cl ; jne 0x41f719 ; ret
0x000000000042071c : or byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3d83
0x000000000040d25c : or byte ptr [rax], al ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000043f91e : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048d23f : or byte ptr [rbp + 0x1a], dh ; mov rax, qword ptr [rax] ; ret
0x0000000000485b1b : or byte ptr [rbp + 0x39481e04], cl ; ret 0x830f
0x0000000000482bf1 : or byte ptr [rbp + 0x39], cl ; ret 0x8b48
0x0000000000485836 : or byte ptr [rbp + 0x440f4cf6], al ; ret
0x000000000048d2ae : or byte ptr [rbp + 4], dh ; mov qword ptr [rax], rdx ; ret
0x0000000000482873 : or byte ptr [rbp + rcx*4 + 0x24], cl ; ret 0x8d4a
0x000000000041cee2 : or byte ptr [rbp - 0x75], cl ; push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x0000000000492253 : or byte ptr [rbp - 0x77], cl ; ret
0x000000000044a30c : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449e23 : or byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x94 ; ret 0xca21
0x00000000004137c6 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000401ba5 : or byte ptr [rbx + 0x5d], bl ; ret
0x000000000044b15e : or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041de27 : or byte ptr [rbx + 0x94807e0], al ; ret
0x000000000041de26 : or byte ptr [rbx + 0x94807e0], r8b ; ret
0x000000000046f200 : or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f1cd
0x0000000000463107 : or byte ptr [rbx - 0x1776cf3b], al ; pop rbx ; pop rbp ; ret
0x000000000040fd09 : or byte ptr [rbx - 0x76fefbbe], al ; ret 0xe281
0x000000000047b719 : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x000000000048455b : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x00000000004847b5 : or byte ptr [rcx + 0x2b802], cl ; add byte ptr [rax], al ; ret
0x000000000048164d : or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x0000000000479242 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479214 : or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x0000000000410788 : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x0000000000410577 : or byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; pop r13 ; ret
0x000000000048a495 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000046fc63 : or byte ptr [rcx + 0x415d5bf0], cl ; pop rsp ; pop r13 ; ret
0x000000000048ca48 : or byte ptr [rcx + 0x63], cl ; add al, 0x86 ; add rax, r14 ; jmp rax
0x000000000046ec99 : or byte ptr [rcx + 0xf], al ; mov dh, 0x40 ; add dword ptr [rcx - 0x77], eax ; ret 0xe883
0x000000000048835b : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000483550 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000489c1b : or byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rax]
0x0000000000411331 : or byte ptr [rcx + rcx*4 - 1], cl ; call rax
0x0000000000484562 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000044b1cb : or byte ptr [rcx - 0x75], cl ; add al, byte ptr [rbx + 0x94801e0] ; ret 0x8949
0x0000000000442678 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x00000000004209b8 : or byte ptr [rcx - 0x77], cl ; ret
0x000000000040d43a : or byte ptr [rcx - 0x77], cl ; ret 0x8b4c
0x000000000044a966 : or byte ptr [rcx - 0xa], al ; ret
0x000000000041cee6 : or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000041489a : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004a963e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000047bc90 : or byte ptr [rdi + 0x315], 4 ; ret
0x000000000047bbe0 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x0000000000454a07 : or byte ptr [rdi], 0x85 ; rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044fde7 : or byte ptr [rdi], 0x8e ; ret 1
0x00000000004b1724 : or byte ptr [rdi], bl ; add byte ptr [rax - 0x71], bl ; cli ; call qword ptr [rdx]
0x000000000040eea2 : or byte ptr [rdi], cl ; mov dh, 0x73 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000475900 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; add rsp, 0x58 ; ret
0x000000000048849b : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000042dfcb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041afb6 : or byte ptr [rdi], cl ; test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x00000000004831b3 : or byte ptr [rdi], cl ; xchg eax, edx ; ret 0x8949
0x0000000000401201 : or byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd284
0x00000000004b4858 : or byte ptr [rdx], al ; std ; jmp qword ptr [rdx]
0x0000000000466e54 : or byte ptr [rip + 0xf410004], ch ; xchg eax, esp ; ret
0x00000000004940a0 : or byte ptr [rsi - 0x70cf0007], 0xf9 ; jmp qword ptr [rax]
0x00000000004b2e60 : or byte ptr [rsi], 0xfc ; jmp qword ptr [rbx]
0x0000000000494504 : or cl, 0xf9 ; call rax
0x0000000000457b91 : or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x0000000000410c24 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x0000000000410517 : or cl, byte ptr [rax - 0x7d] ; ret
0x0000000000423b22 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x000000000045d58e : or cl, byte ptr [rax - 0x7d] ; ret 0x8d04
0x0000000000486d6d : or cl, byte ptr [rcx - 0x75] ; add al, 0x24 ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047b6b5 : or cl, ch ; ret
0x00000000004355a3 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000048f5e5 : or dh, bl ; ret
0x000000000044cf5c : or dh, dh ; ret 0x8902
0x000000000041ab07 : or dh, dh ; ret 0xf02
0x000000000049480d : or dl, bh ; call qword ptr [rdx + 0x12fffa07]
0x0000000000494809 : or dl, bh ; call qword ptr [rdx]
0x0000000000494989 : or dl, bh ; call rax
0x0000000000494949 : or dl, bh ; jmp rax
0x000000000042071a : or dword ptr [rax + 0xf000008], 0xffffff93 ; ret 0x3d83
0x000000000044d59a : or dword ptr [rax + 1], 0xffffffd8 ; jmp rax
0x000000000040da0b : or dword ptr [rax + rax*8 - 0x38b79f8c], eax ; ret 0xfff0
0x000000000045a78e : or dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000440e3e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004ac1e5 : or dword ptr [rax], eax ; add al, cl ; sub dh, dh ; jmp qword ptr [rax]
0x00000000004728eb : or dword ptr [rax], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000488ba0 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042a8b7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f7cf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a7f5 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000411d67 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000045eaa5 : or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000401f43 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rax, rdx ; jmp rax
0x000000000042d766 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000412f20 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045582c : or dword ptr [rbx], eax ; add byte ptr [rax], al ; call 0x401af6
0x000000000046f3a2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000424527 : or dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000047fdd6 : or dword ptr [rip + 0x23a40b], 1 ; pop rbx ; ret
0x00000000004b3f70 : or eax, 0x10a0303 ; ret
0x00000000004b3fc8 : or eax, 0x1370303 ; ret
0x00000000004945f1 : or eax, 0x1442fffa ; cli ; call rdx
0x0000000000494571 : or eax, 0x1456fffa ; cli ; jmp rsi
0x0000000000444b61 : or eax, 0x1c478d48 ; ret
0x00000000004b3f60 : or eax, 0x34b0303 ; ret
0x00000000004b3f94 : or eax, 0x35b0303 ; ret
0x000000000046f1c2 : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea2a : or eax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000045a89a : or eax, 0x441f0f ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000440452 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x000000000042a407 : or eax, 0x83480000 ; ret 0x4910
0x000000000043dd81 : or eax, 0x83480000 ; ret 0xe910
0x000000000042a435 : or eax, 0x83480000 ; ret 0xeb10
0x0000000000491042 : or eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000474582 : or eax, 0xc2bc0f48 ; shr rax, 2 ; ret
0x000000000049472d : or eax, 0xda0fffa ; cli ; call qword ptr [rax]
0x000000000049eef9 : or eax, 0xdbf0000 ; add byte ptr [rax], al ; ret 0xd
0x00000000004542c5 : or eax, 0xea810000 ; ret 0
0x0000000000493f39 : or eax, 0xed0fff9 ; stc ; call qword ptr [rax]
0x00000000004a8c73 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000435453 : or eax, 0xf7f0ff3 ; ret
0x000000000044963d : or eax, 0xffffffff ; ret
0x000000000042c089 : or eax, 1 ; ret
0x000000000042a5e7 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043df21 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a615 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004ad140 : or eax, dword ptr [rdx] ; jae 0x4ad152 ; ret
0x00000000004b52a2 : or eax, dword ptr [rdx] ; ret 0xe0a
0x0000000000418454 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000403b93 : or ebp, ebx ; and ecx, dword ptr [rdi] ; mov cl, 0x35 ; ret
0x0000000000412a3d : or ebp, edx ; mov dword ptr [rbx], ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046aea1 : or ebx, dword ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000435613 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000004148c6 : or ebx, esi ; ret
0x000000000042339f : or ecx, dword ptr [rax + 0x63] ; ret
0x00000000004137b7 : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000410738 : or ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x0000000000464c86 : or ecx, dword ptr [rax - 0x7d] ; call 0xffffffffc27f9496
0x00000000004242dc : or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004910bf : or ecx, dword ptr [rax - 0x7d] ; ret 0x4810
0x0000000000482a53 : or ecx, dword ptr [rbp + 0x39] ; ret 0x860f
0x0000000000494775 : or edi, edx ; call rax
0x00000000004947f5 : or edi, edx ; jmp qword ptr [rdx + 0x12fffa0a]
0x00000000004b2e49 : or edi, esp ; jmp qword ptr [rax]
0x0000000000494805 : or edx, edi ; call qword ptr [rdx + 0x12fffa08]
0x0000000000494801 : or edx, edi ; call qword ptr [rdx]
0x0000000000494981 : or edx, edi ; call rax
0x0000000000494941 : or edx, edi ; jmp rax
0x0000000000435533 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000045b014 : or esi, ebx ; ret
0x0000000000412f21 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004ac94a : or esp, dword ptr [rsi + rcx + 0x18] ; ret
0x0000000000435682 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435612 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355a2 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x0000000000435532 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x00000000004b52a1 : or r8d, dword ptr [r10] ; ret 0xe0a
0x0000000000457b90 : or r9b, byte ptr [r8 + 0x39] ; ret 0x1176
0x00000000004b3fc7 : or rax, 0x1370303 ; ret
0x00000000004b3f5f : or rax, 0x34b0303 ; ret
0x00000000004b3f93 : or rax, 0x35b0303 ; ret
0x000000000046f1c1 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4404
0x000000000046ea29 : or rax, 0x401f0f08 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000044963c : or rax, 0xffffffffffffffff ; ret
0x00000000004ad13f : or rax, qword ptr [rdx] ; jae 0x4ad153 ; ret
0x00000000004ac949 : or rsp, qword ptr [rsi + r9 + 0x18] ; ret
0x0000000000424856 : out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x0000000000424716 : out 0, eax ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000048dce5 : out 0x41, eax ; call rdi
0x00000000004868a9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470e8d : out 0x48, al ; mov edi, ebx ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000422f08 : out 0x48, eax ; sub eax, 0x10 ; ret
0x0000000000489b4d : out 0x89, al ; out dx, eax ; call qword ptr [r14]
0x00000000004018dd : out 0x89, al ; out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c21 : out 0x89, al ; out dx, eax ; call qword ptr [rax]
0x0000000000489cfd : out 0x89, al ; out dx, eax ; call qword ptr [rcx]
0x0000000000489b07 : out 0x89, al ; out dx, eax ; call rax
0x0000000000494120 : out 0x95, al ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004a7b20 : out 0xcf, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004062e8 : out 0xe8, eax ; ret 0x19e
0x0000000000434e1a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000434e9a : out 0xf3, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004a9848 : out 0xf5, eax ; mov ch, 0xab ; ret
0x00000000004949f1 : out 0xf9, al ; jmp rax
0x00000000004943cd : out 0xf9, eax ; jmp qword ptr [rax]
0x00000000004949b5 : out 0xf9, eax ; jmp rax
0x0000000000461ca2 : out 0xff, eax ; dec dword ptr [rbp + 0x63] ; ret 0x20be
0x000000000047623e : out 2, al ; add byte ptr [rax + 9], cl ; ret 0x850f
0x0000000000456f6e : out dx, al ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x349
0x00000000004a8c77 : out dx, al ; fcmovb st(0), st(3) ; ret
0x000000000042453e : out dx, al ; jns 0x424548 ; add byte ptr [rsi + rax*8 - 0xd], dh ; ret
0x000000000042f61a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000423612 : out dx, al ; mov rdi, rax ; call rcx
0x000000000043522a : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f67e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000421fc3 : out dx, al ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x000000000041ffd6 : out dx, al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004675fa : out dx, al ; ret 3
0x00000000004741a9 : out dx, eax ; add r15, r12 ; call 0x400496
0x0000000000417a19 : out dx, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000417a71 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000468a51 : out dx, eax ; call 0x4004b0
0x0000000000421b34 : out dx, eax ; call 0x41dd73
0x0000000000489b4f : out dx, eax ; call qword ptr [r14]
0x00000000004018df : out dx, eax ; call qword ptr [r15 + rbx*8]
0x0000000000489c23 : out dx, eax ; call qword ptr [rax]
0x0000000000489cff : out dx, eax ; call qword ptr [rcx]
0x000000000045825d : out dx, eax ; call r12
0x000000000048eccd : out dx, eax ; call r14
0x0000000000422997 : out dx, eax ; call rax
0x00000000004741e2 : out dx, eax ; call rbx
0x000000000042f44a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f546 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f492 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000474333 : out dx, eax ; mov r9, r14 ; call rbx
0x000000000040df9a : out dx, eax ; mov rax, qword ptr [rsp + 8] ; call rax
0x00000000004352aa : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000043f77d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042c3b3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3c8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c3dd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446893 : out dx, eax ; ret 0xf66
0x000000000042d8cc : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d89e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494a09 : out dx, eax ; stc ; jmp rax
0x000000000048ac47 : out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000043d68e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444cbe : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004a9423 : outsb dx, byte ptr [rsi] ; ja 0x4a93ac ; ret 0x48f
0x000000000047d860 : outsb dx, byte ptr [rsi] ; or byte ptr [rax + 1], cl ; ret
0x00000000004a7164 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000419292 : outsd dx, dword ptr [rsi] ; and al, 0x89 ; adc byte ptr [r11 + 0x5d], r11b ; ret
0x0000000000424ae8 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000043900e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042d6cd : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042d76d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000047340a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d6d2 : outsd dx, dword ptr [rsi] ; ret
0x00000000004634cd : outsd dx, dword ptr [rsi] ; ret 0x290f
0x00000000004634f6 : outsd dx, dword ptr [rsi] ; ret 0x3e8
0x000000000041a45a : outsd dx, dword ptr [rsi] ; ret 0x4466
0x00000000004a7b26 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000419e92 : outsd dx, dword ptr [rsi] ; ret 0x8348
0x000000000042fd87 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x000000000046624d : outsd dx, dword ptr [rsi] ; ret 0xace8
0x000000000042d772 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000466229 : outsd dx, dword ptr [rsi] ; ret 0xe583
0x000000000047345a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000463494 : outsd dx, dword ptr [rsi] ; sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004a7b25 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x000000000042a2c2 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000474914 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000004748ff : pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000042a2c1 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004a8f25 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004a8f26 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000447f56 : pextrw edi, mm0, 0x77 ; ret
0x000000000042b482 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x42b4e9 ; xor eax, eax ; ret
0x0000000000440a6f : pmovmskb edx, mm4 ; test edx, edx ; je 0x440a83 ; bsf eax, edx ; ret
0x00000000004610cf : pop r10 ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044be75 : pop r10 ; ret
0x00000000004a93af : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000044a7a1 : pop r12 ; jmp rax
0x000000000044a786 : pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd9 : pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fc : pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a6 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025ae : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x000000000040067f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f839 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100ce : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da99 : pop r12 ; pop r13 ; ret
0x0000000000405da4 : pop r12 ; ret
0x000000000041ffdb : pop r13 ; pop r14 ; jmp rax
0x00000000004224fe : pop r13 ; pop r14 ; jmp rcx
0x00000000004211a8 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025b0 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400681 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f83b : pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100d0 : pop r13 ; pop r14 ; ret
0x000000000040da9b : pop r13 ; ret
0x000000000041ffdd : pop r14 ; jmp rax
0x0000000000422500 : pop r14 ; jmp rcx
0x00000000004211aa : pop r14 ; pop r15 ; jmp rax
0x00000000004025b2 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400683 : pop r14 ; pop r15 ; ret
0x000000000040f83d : pop r14 ; pop rbp ; ret
0x00000000004100d2 : pop r14 ; ret
0x00000000004211ac : pop r15 ; jmp rax
0x00000000004025b4 : pop r15 ; pop rbp ; ret
0x0000000000400685 : pop r15 ; ret
0x00000000004b2fe8 : pop rax ; adc al, 0xfc ; jmp qword ptr [rax]
0x00000000004b0174 : pop rax ; add byte ptr [r8], al ; cwde ; movsd dword ptr [rdi], dword ptr [rsi] ; stc ; jmp qword ptr [rcx]
0x000000000041e794 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4c07
0x0000000000461229 : pop rax ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000045dd9d : pop rax ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004a4e04 : pop rax ; je 0x4a4e07 ; call qword ptr [rax]
0x00000000004a4e1c : pop rax ; je 0x4a4e1f ; jmp qword ptr [rbx]
0x00000000004a4e18 : pop rax ; je 0x4a4e1f ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x000000000045f4a2 : pop rax ; jmp 0x45f4a9
0x0000000000481c1c : pop rax ; jmp qword ptr [rax]
0x00000000004941b0 : pop rax ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000492252 : pop rax ; or byte ptr [rbp - 0x77], cl ; ret
0x0000000000481cd6 : pop rax ; pop rdx ; pop rbx ; ret
0x00000000004156f4 : pop rax ; ret
0x0000000000495814 : pop rax ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x00000000004af5e8 : pop rax ; xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004565a9 : pop rbp ; add al, 0x4d ; cmp ebp, ebx ; jb 0x456621 ; mov rdx, rax ; jmp 0x456578
0x0000000000460de2 : pop rbp ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000480e47 : pop rbp ; div bh ; dec dword ptr [rax - 0x77] ; ret
0x00000000004167c0 : pop rbp ; jmp rax
0x0000000000486cc3 : pop rbp ; mov eax, 0x89fd8945 ; ret 0xe283
0x0000000000400a8b : pop rbp ; mov edi, 0x6babd0 ; jmp rax
0x0000000000488b9f : pop rbp ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044a7a0 : pop rbp ; pop r12 ; jmp rax
0x000000000044a785 : pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd8 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fb : pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a5 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000040067e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004100cd : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da98 : pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405da3 : pop rbp ; pop r12 ; ret
0x000000000041ffdc : pop rbp ; pop r14 ; jmp rax
0x00000000004224ff : pop rbp ; pop r14 ; jmp rcx
0x00000000004211a9 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x00000000004025b1 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400682 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040f83c : pop rbp ; pop r14 ; pop rbp ; ret
0x00000000004100d1 : pop rbp ; pop r14 ; ret
0x0000000000484568 : pop rbp ; pop rbx ; ret
0x0000000000400a98 : pop rbp ; ret
0x00000000004851b1 : pop rbx ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004a66f8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004482a6 : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004a66f6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000416704 : pop rbx ; jmp rax
0x000000000046d868 : pop rbx ; loopne 0x46d872 ; dec dword ptr [rcx + 0x63] ; ret
0x000000000047fdf7 : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x00000000004482f1 : pop rbx ; mov eax, eax ; ret
0x00000000004106df : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000465fed : pop rbx ; mov eax, edx ; pop rbp ; pop r12 ; ret
0x0000000000417249 : pop rbx ; mov ecx, edx ; xor edx, edx ; jmp rax
0x000000000041ac63 : pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x000000000040f838 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000457bec : pop rbx ; pop r12 ; ret
0x000000000048acc9 : pop rbx ; pop r14 ; ret
0x00000000004167bf : pop rbx ; pop rbp ; jmp rax
0x0000000000470e91 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000044a784 : pop rbx ; pop rbp ; pop r12 ; mov esi, 2 ; jmp rax
0x000000000041ffd7 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fa : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; jmp rcx
0x0000000000410104 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040da97 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000405da2 : pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000401ba6 : pop rbx ; pop rbp ; ret
0x0000000000400d98 : pop rbx ; ret
0x00000000004a99e0 : pop rbx ; ret 0x6f9
0x000000000044e170 : pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000405dbe : pop rbx ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x0000000000417212 : pop rbx ; xor edx, edx ; jmp rax
0x000000000046112c : pop rcx ; and eax, 0x48b4800 ; clc ; jmp rax
0x0000000000455893 : pop rcx ; ret 0xfffa
0x0000000000449404 : pop rcx ; ret 4
0x0000000000494015 : pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x00000000004b52b9 : pop rcx ; std ; call qword ptr [rdx]
0x000000000042dfc8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004b17c9 : pop rdi ; add byte ptr [rax], al ; xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x000000000043fe0d : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042f9e9 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f7f9 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a8c9e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000496520 : pop rdi ; jb 0x496525 ; ljmp ptr [rdx] ; jb 0x496529 ; jmp rdx
0x00000000004211ad : pop rdi ; jmp rax
0x00000000004a7c61 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x000000000044b472 : pop rdi ; mov rdi, qword ptr [r13] ; call r12
0x000000000044a965 : pop rdi ; or byte ptr [rcx - 0xa], al ; ret
0x000000000042f619 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f449 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f545 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042f491 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004025b5 : pop rdi ; pop rbp ; ret
0x0000000000400686 : pop rdi ; ret
0x000000000042ac76 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x00000000004610d0 : pop rdx ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a8881 : pop rdx ; je 0x4a884b ; ret 0xacfc
0x00000000004a9847 : pop rdx ; out 0xf5, eax ; mov ch, 0xab ; ret
0x000000000044be74 : pop rdx ; pop r10 ; ret
0x0000000000481cd7 : pop rdx ; pop rbx ; ret
0x000000000044be99 : pop rdx ; pop rsi ; ret
0x0000000000449915 : pop rdx ; ret
0x0000000000494019 : pop rdx ; stc ; call qword ptr [rax]
0x00000000004a93b0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000043fd0e : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004197fe : pop rsi ; add byte ptr [rdx], ch ; add bl, dh ; ret
0x00000000004204a6 : pop rsi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000460989 : pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000048618c : pop rsi ; cld ; call qword ptr [rax + 0x66c205f6]
0x000000000041ffde : pop rsi ; jmp rax
0x0000000000422501 : pop rsi ; jmp rcx
0x000000000044b442 : pop rsi ; mov rdi, qword ptr [r13] ; call r12
0x00000000004211ab : pop rsi ; pop r15 ; jmp rax
0x00000000004025b3 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000400684 : pop rsi ; pop r15 ; ret
0x000000000040f83e : pop rsi ; pop rbp ; ret
0x00000000004100d3 : pop rsi ; ret
0x000000000043d8a0 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042af74 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004b1451 : pop rsp ; add byte ptr [rax], al ; jae 0x4b1457 ; call qword ptr [rdx]
0x00000000004b14d1 : pop rsp ; add byte ptr [rax], al ; jl 0x4b154f ; cli ; jmp rax
0x000000000043e5a0 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x000000000041ca9b : pop rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x0000000000460e30 : pop rsp ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000044a7a2 : pop rsp ; jmp rax
0x00000000004add64 : pop rsp ; mov ch, 0xf6 ; call qword ptr [rsi]
0x000000000044a787 : pop rsp ; mov esi, 2 ; jmp rax
0x000000000041ffda : pop rsp ; pop r13 ; pop r14 ; jmp rax
0x00000000004224fd : pop rsp ; pop r13 ; pop r14 ; jmp rcx
0x00000000004211a7 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x00000000004025af : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000400680 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040f83a : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000004100cf : pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040da9a : pop rsp ; pop r13 ; ret
0x0000000000401d53 : pop rsp ; ret
0x0000000000477fc2 : pop rsp ; ret 2
0x000000000040f7e4 : popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046ab5d : popfq ; call 0xffffffffc3caab67
0x000000000046a89f : popfq ; idiv edi ; dec dword ptr [rax - 0x77] ; ret
0x000000000044c927 : popfq ; jmp qword ptr [rsi]
0x00000000004001cd : popfq ; ret
0x000000000048c80e : popfq ; ret 0xf45
0x00000000004b0019 : popfq ; stc ; call qword ptr [rbx]
0x0000000000494339 : popfq ; stc ; call rax
0x0000000000435372 : psllq mm1, qword ptr [r15] ; jg 0x43538d ; ret
0x0000000000437e92 : psllq mm1, qword ptr [r15] ; jg 0x437ead ; ret
0x0000000000435373 : psllq mm1, qword ptr [rdi] ; jg 0x43538c ; ret
0x0000000000437e93 : psllq mm1, qword ptr [rdi] ; jg 0x437eac ; ret
0x0000000000444386 : psllq mm1, qword ptr [rdi] ; jg 0x44439a ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000444385 : psllq mm1, qword ptr [rdi] ; jg 0x44439b ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000004443e7 : psllq mm1, qword ptr [rdi] ; jg 0x4443fc ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000049459d : psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x000000000046a8d4 : push -0x140006a5 ; ret
0x000000000045e292 : push -0x7c000003 ; ret
0x0000000000444ca4 : push -0x9ffffff ; ret 0x7501
0x00000000004acd25 : push -0xa ; call qword ptr [rax]
0x000000000044d4a2 : push -0xc ; add byte ptr es:[rbp - 0xcf98b40], al ; ret
0x0000000000403f98 : push -0xcec28c ; call 0x4201b7
0x0000000000494e30 : push 0x29 ; cli ; call qword ptr [rax]
0x0000000000414504 : push 0x2a ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000419326 : push 0x2a ; sub al, byte ptr [rax] ; ret
0x0000000000494370 : push 0x30fff9da ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000411d0d : push 0x48 ; add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000488594 : push 0x4800001f ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000479bc5 : push 0x48b4901 ; and al, 0x83 ; ret
0x000000000045868c : push 0x4cffffff ; mov edi, esi ; call rdx
0x0000000000494045 : push 0x68f0fff9 ; stc ; jmp rax
0x0000000000494049 : push 0x69e0fff9 ; stc ; call rax
0x00000000004a9422 : push 0x6e ; ja 0x4a93ad ; ret 0x48f
0x000000000041747a : push 0x75c08548 ; ret
0x0000000000494e9f : push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x000000000049419f : push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x000000000049496b : push qword ptr [rax + 0x40fffa03] ; add edi, edx ; jmp rax
0x0000000000494543 : push qword ptr [rax + 0x40fffa12] ; adc bh, dl ; call rax
0x0000000000494c53 : push qword ptr [rax + 0x40fffa36] ; cli ; call rax
0x0000000000494a3b : push qword ptr [rax + 0x40fffa39] ; cmp edx, edi ; call rax
0x0000000000494003 : push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000495f8b : push qword ptr [rax + 0x6b] ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000494937 : push qword ptr [rax + 0xa] ; cli ; jmp rax
0x0000000000493f6b : push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000494493 : push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x00000000004950fb : push qword ptr [rax - 0x3f000509] ; idiv edx ; call rax
0x00000000004950a3 : push qword ptr [rax - 0x3f00050e] ; cli ; call rax
0x0000000000494f6b : push qword ptr [rax - 0x3f0005bb] ; cli ; call rax
0x000000000049426f : push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004947a3 : push qword ptr [rax] ; add eax, 0x4a0fffa ; cli ; call qword ptr [rax]
0x00000000004944ff : push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000494373 : push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x000000000048e1ad : push qword ptr [rax] ; jne 0x48e1e0 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x000000000048f00d : push qword ptr [rax] ; jne 0x48f040 ; mov rax, qword ptr [rsi + 0x10] ; ret
0x00000000004942d7 : push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x000000000049425b : push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494273 : push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049428f : push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x00000000004941ef : push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494013 : push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000494037 : push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x0000000000497407 : push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000495053 : push qword ptr [rax] ; test eax, 0xaa80fffa ; cli ; call rax
0x0000000000446628 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000044a838 : push qword ptr [rbp + 0x35] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a810 : push qword ptr [rbp + 0x3d] ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b440 : push qword ptr [rbp + 0x5e] ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b470 : push qword ptr [rbp + 0x5f] ; mov rdi, qword ptr [r13] ; call r12
0x000000000042c039 : push qword ptr [rbp + 4] ; vzeroupper ; ret
0x00000000004719d8 : push qword ptr [rbp + rax + 0x5b] ; pop rbp ; pop r12 ; ret
0x000000000041727d : push qword ptr [rbp + rax - 0xa] ; ret 0x7401
0x00000000004719fe : push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x00000000004948df : push qword ptr [rbp + rax - 6] ; jmp rsp
0x00000000004176e6 : push qword ptr [rbp + rcx - 0x18] ; ret 0x8a
0x000000000047f4ab : push qword ptr [rbp - 0x2e] ; ret
0x0000000000417ab0 : push qword ptr [rbp - 0x44] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004614ab : push qword ptr [rbp - 0x4b8] ; push rax ; call 0x45d759
0x000000000044962c : push qword ptr [rbx + 1] ; ret
0x00000000004946b7 : push qword ptr [rbx + rdx + 0x1344fffa] ; cli ; call rsp
0x0000000000495f7b : push qword ptr [rcx + rbp*2] ; sti ; call rax
0x0000000000495f77 : push qword ptr [rcx + rbp*2] ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x000000000045ec14 : push qword ptr [rcx] ; fcmovnb st(0), st(6) ; test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x000000000047a2af : push qword ptr [rcx] ; fucomi st(3) ; ret 0x1f0f
0x000000000041585f : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000455043 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004940e7 : push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000449cb6 : push qword ptr [rdi + 0x3f] ; ret
0x00000000004499e6 : push qword ptr [rdi + 0x57] ; ret
0x0000000000449913 : push qword ptr [rdi + 0x5a] ; ret
0x000000000045b012 : push qword ptr [rdi + 0xb] ; ret
0x00000000004496ba : push qword ptr [rdi + 3] ; ret
0x00000000004499a9 : push qword ptr [rdi + 4] ; ret
0x0000000000449708 : push qword ptr [rdi + 5] ; ret
0x00000000004756ce : push qword ptr [rdi + 7] ; ret
0x000000000044a485 : push qword ptr [rdi + 8] ; ret
0x0000000000449a7c : push qword ptr [rdi + 9] ; ret
0x0000000000475584 : push qword ptr [rdi + rax*2 - 0x77] ; ret 0xe283
0x0000000000494827 : push qword ptr [rdx + 4] ; cli ; jmp rdx
0x0000000000494de7 : push qword ptr [rdx + rbp - 6] ; jmp rsp
0x000000000049458b : push qword ptr [rsi + 0x46fffa11] ; adc edx, edi ; call rsi
0x0000000000494a83 : push qword ptr [rsi + 0x46fffa38] ; cmp dl, bh ; call rsi
0x00000000004aa8c3 : push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x0000000000494123 : push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004114e6 : push qword ptr [rsp + rcx - 0x18] ; ret 0xec
0x00000000004166b2 : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000494744 : push rax ; adc bh, dl ; jmp rax
0x0000000000470ada : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x0000000000418461 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000041c4ed : push rax ; adc dh, dh ; ret 0xf0f
0x0000000000493f44 : push rax ; adc ecx, edi ; call qword ptr [rax - 0x2f0006ee]
0x00000000004b3f80 : push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004166b3 : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004239dc : push rax ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000400ee0 : push rax ; and byte ptr [rax + 1], cl ; ret 0xb70f
0x0000000000487802 : push rax ; and eax, dword ptr [rax] ; jne 0x487834 ; ret
0x000000000045122f : push rax ; call 0x44d503
0x00000000004614b1 : push rax ; call 0x45d753
0x000000000044e908 : push rax ; call rbx
0x000000000049512f : push rax ; clc ; cli ; inc dword ptr [rax] ; stc ; cli ; jmp qword ptr [rax]
0x00000000004b2c50 : push rax ; cld ; sti ; jmp qword ptr [rbx]
0x0000000000494f81 : push rax ; cli ; call qword ptr [rax]
0x0000000000494f7b : push rax ; cli ; inc dword ptr [rax] ; push rax ; cli ; call qword ptr [rax]
0x0000000000470604 : push rax ; cmp byte ptr [rax + 1], cl ; ret
0x0000000000494c3c : push rax ; cmp edx, edi ; jmp rax
0x0000000000495107 : push rax ; idiv edx ; inc dword ptr [rax] ; clc ; cli ; call qword ptr [rax]
0x0000000000495073 : push rax ; int1 ; cli ; inc dword ptr [rax] ; cli ; call qword ptr [rax]
0x00000000004a4e28 : push rax ; jbe 0x4a4e2b ; jmp qword ptr [rbx]
0x00000000004a4e84 : push rax ; je 0x4a4e87 ; jmp qword ptr [rbx]
0x000000000044a35c : push rax ; jo 0x44a362 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000472029 : push rax ; lea r9, qword ptr [rsp + 0x18] ; mov rdi, r12 ; call rbx
0x00000000004941f3 : push rax ; mov bl, 0xf9 ; call rax
0x00000000004add50 : push rax ; mov ch, 0xf6 ; call qword ptr [rsi]
0x00000000004941d7 : push rax ; mov ch, 0xf9 ; call rax
0x0000000000494258 : push rax ; mov ch, 0xf9 ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x000000000049427b : push rax ; mov dh, 0xf9 ; call rax
0x00000000004941d0 : push rax ; mov dl, 0xf9 ; call qword ptr [rax]
0x0000000000494293 : push rax ; mov dl, 0xf9 ; call rax
0x0000000000450b41 : push rax ; mov dword ptr [rax + 0x54], edx ; ret
0x00000000004942c0 : push rax ; mov eax, 0xba20fff9 ; stc ; jmp qword ptr [rax]
0x0000000000494228 : push rax ; mov ebp, 0xbf50fff9 ; stc ; jmp rax
0x0000000000493f34 : push rax ; or al, 0xf9 ; call qword ptr [rax - 0x2f0006f3]
0x0000000000494933 : push rax ; or bh, dl ; push qword ptr [rax + 0xa] ; cli ; jmp rax
0x00000000004191e2 : push rax ; or byte ptr [rax - 0x75], cl ; adc byte ptr [rcx - 0x7d], al ; ret
0x000000000041a50a : push rax ; or byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000044b15d : push rax ; or byte ptr [rbx + 0x94801e2], al ; ret 0x8949
0x000000000041cee5 : push rax ; or byte ptr [rcx - 0xa], al ; ret 0xf04
0x000000000044cf5b : push rax ; or dh, dh ; ret 0x8902
0x000000000041dc22 : push rax ; or dh, dh ; ret 0xf02
0x0000000000494988 : push rax ; or dl, bh ; call rax
0x0000000000494774 : push rax ; or edi, edx ; call rax
0x0000000000494980 : push rax ; or edx, edi ; call rax
0x000000000048248e : push rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000488645 : push rax ; pop rbx ; ret
0x0000000000494047 : push rax ; push 0x69e0fff9 ; stc ; call rax
0x0000000000450b43 : push rax ; push rsp ; ret
0x000000000049506c : push rax ; pushfq ; cli ; jmp rax
0x0000000000418456 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b19 : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000494ea8 : push rax ; sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494e9b : push rax ; sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000497403 : push rax ; sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x000000000048a0ca : push rbp ; add bl, ch ; add eax, 0x1489066 ; ret 0xb70f
0x000000000048cb72 : push rbp ; add byte ptr [rax + 0x63], cl ; ret 0xbc80
0x00000000004b0d71 : push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x000000000047fc18 : push rbp ; add dword ptr [rax + 0x39], ecx ; ret 0x1272
0x00000000004104ed : push rbp ; cmp byte ptr [rax + 0x39], cl ; ret
0x000000000048164c : push rbp ; or byte ptr [rcx + 0x33], cl ; add byte ptr [r8 + 9], r9b ; ret 0x840f
0x00000000004b5be6 : push rbp ; ret
0x0000000000410a96 : push rbx ; adc byte ptr [rax + 1], cl ; ret 0x2b48
0x000000000040102f : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047fa8f : push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000484d67 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412ef8 : push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x0000000000447815 : push rbx ; jb 0x447825 ; movzx ecx, byte ptr [rsi] ; mov byte ptr [rdi], cl ; ret
0x0000000000471a12 : push rbx ; je 0x471a76 ; pop rbp ; pop r12 ; ret
0x0000000000471a9e : push rbx ; je 0x471b02 ; pop rbp ; pop r12 ; ret
0x0000000000412ef4 : push rbx ; or byte ptr [rax + 0x2b], cl ; push rbx ; cmp byte ptr [rax + 0x39], cl ; ret 0x2175
0x000000000044b36f : push rbx ; ret
0x0000000000494005 : push rbx ; stc ; jmp rax
0x00000000004a887c : push rbx ; xchg eax, edx ; jae 0x4a885b ; push rsi ; pop rdx ; je 0x4a8850 ; ret 0xacfc
0x000000000041eb02 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x1f77
0x000000000041ae3b : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041b1b7 : push rcx ; adc byte ptr [rax + 0x39], cl ; ret 0xb277
0x00000000004b09ad : push rcx ; add byte ptr [rax], al ; ja 0x4b09b3 ; hlt ; jmp qword ptr [rbx]
0x000000000044b80b : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004a7b05 : push rcx ; call qword ptr [rsi]
0x000000000045e706 : push rcx ; cmp byte ptr [rax + 0x39], cl ; ret
0x00000000004387cd : push rcx ; jl 0x43881e ; adc dword ptr [rcx - 1], edi ; ret
0x0000000000438934 : push rcx ; jl 0x438985 ; adc dword ptr [rcx + 7], edi ; ret
0x0000000000468a53 : push rcx ; jp 0x468a55 ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x0000000000479241 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0x1475
0x0000000000479213 : push rcx ; or byte ptr [rcx + 0x33], cl ; add dword ptr [rax + 9], ecx ; ret 0xe75
0x00000000004157fb : push rcx ; ret 0xffff
0x000000000041994d : push rcx ; sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x00000000004940cc : push rcx ; xchg eax, ebx ; stc ; call rcx
0x00000000004940c4 : push rcx ; xchg eax, edx ; stc ; call rcx
0x00000000004940d4 : push rcx ; xchg eax, esp ; stc ; jmp rcx
0x00000000004448ca : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x00000000004354d9 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b0fcd : push rdi ; add byte ptr [rax], al ; rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x00000000004b0f39 : push rdi ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x0000000000478184 : push rdi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044497c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000045dddf : push rdi ; and byte ptr [rcx + 0x2b], cl ; push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000460e7a : push rdi ; and eax, 0x48b4800 ; clc ; jmp rax
0x000000000042f2d8 : push rdi ; clc ; ret
0x000000000042f450 : push rdi ; cld ; ret
0x000000000042ff77 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434db9 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046fe35 : push rdi ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf41
0x0000000000434d39 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000434b8a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004165c4 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000434c1a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000048455a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048835a : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000484561 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000041ab06 : push rdi ; or dh, dh ; ret 0xf02
0x0000000000444b60 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042d6ce : push rdi ; ret
0x000000000042d76e : push rdi ; ret 0xff3
0x0000000000419270 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dde3 : push rdi ; sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000430177 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042f99a : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x000000000042fd77 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000040383c : push rdi ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x000000000047340b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b488 : push rdi ; xor eax, eax ; ret
0x0000000000494618 : push rdx ; adc dl, bh ; jmp rdx
0x0000000000494f85 : push rdx ; cli ; jmp qword ptr [rax]
0x00000000004248ca : push rdx ; insb byte ptr [rdi], dx ; add byte ptr [rax], al ; cmove rax, rdx ; ret
0x0000000000487801 : push rdx ; push rax ; and eax, dword ptr [rax] ; jne 0x487835 ; ret
0x0000000000450b3d : push rdx ; sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000494001 : push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000494574 : push rsi ; adc al, 0xfa ; jmp rsi
0x000000000042c3b4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000446eb9 : push rsi ; add ah, byte ptr [rdx - 0xf] ; jl 0x446f10 ; adc dword ptr [rsi + 3], edx ; ret
0x0000000000435771 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004357e1 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000444315 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000435701 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000004442b3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000042c3c9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042f402 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042fb71 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f7a5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f985 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042fb65 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042f5c5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004a9420 : push rsi ; cli ; push 0x6e ; ja 0x4a93af ; ret 0x48f
0x0000000000446166 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000446156 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000446126 : push rsi ; int1 ; sub eax, edx ; ret
0x00000000004ae531 : push rsi ; jmp rsi
0x00000000004a8880 : push rsi ; pop rdx ; je 0x4a884c ; ret 0xacfc
0x000000000049459b : push rsi ; psubd mm7, mm7 ; xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x000000000044fb26 : push rsi ; ret
0x0000000000469321 : push rsi ; sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000045e1f3 : push rsi ; sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000446136 : push rsi ; sub eax, edx ; ret
0x000000000049411c : push rsi ; xchg eax, ebp ; stc ; jmp rsi
0x000000000042c3de : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004ab2e4 : push rsp ; add al, 0xfe ; jmp rsp
0x00000000004b0ced : push rsp ; add byte ptr [rax], al ; adc bh, bh ; stc ; call qword ptr [rax]
0x00000000004948db : push rsp ; add eax, 0x574fffa ; cli ; jmp rsp
0x00000000004826ba : push rsp ; and al, 0x10 ; call rdx
0x000000000041cb58 : push rsp ; and al, 0x10 ; mov qword ptr [rsp + 8], rax ; call rcx
0x000000000041d0b5 : push rsp ; and al, 8 ; call 0x419355
0x0000000000494bd8 : push rsp ; cli ; jmp rsp
0x00000000004b0d70 : push rsp ; push rbp ; add byte ptr [rax], al ; sub al, 3 ; cli ; jmp qword ptr [rdx]
0x00000000004505e0 : push rsp ; ret
0x000000000048913c : push rsp ; ret 0x4808
0x00000000004af5fc : push rsp ; xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x000000000043d560 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000046258e : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8944
0x000000000044b3e7 : pushfq ; add byte ptr [rax], al ; add byte ptr [rcx - 0x75], cl ; jge 0x44b3f8 ; call r12
0x00000000004521ea : pushfq ; and al, 0xa0 ; add byte ptr [rax], al ; add dh, dh ; ret 0x4801
0x0000000000479dbf : pushfq ; and al, 0xc0 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x0000000000416ceb : pushfq ; and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xac20
0x000000000049506d : pushfq ; cli ; jmp rax
0x00000000004b01f4 : pushfq ; cmpsb byte ptr [rsi], byte ptr [rdi] ; stc ; call rsi
0x000000000043e260 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a434 : pushfq ; or eax, 0x83480000 ; ret 0xeb10
0x00000000004001cc : pushfq ; popfq ; ret
0x000000000048c847 : pushfq ; ret 0xf45
0x0000000000455850 : pushfq ; ret 0xfffa
0x00000000004b5034 : pushfq ; std ; jmp rsp
0x00000000004b0cec : rcl byte ptr [rax + rax], 1 ; adc bh, bh ; stc ; call qword ptr [rax]
0x0000000000493f4c : rcl byte ptr [rbx], 1 ; stc ; call qword ptr [rax]
0x00000000004239db : rcl dword ptr [rax], 1 ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x00000000004940d0 : rcl dword ptr [rbx - 0x6bae0007], 1 ; stc ; jmp rcx
0x00000000004940c0 : rcl dword ptr [rcx - 0x6dae0007], 1 ; stc ; call rcx
0x00000000004940ec : rcl dword ptr [rdi - 0x67b10007], 1 ; stc ; jmp rsi
0x00000000004940c8 : rcl dword ptr [rdx - 0x6cae0007], 1 ; stc ; call rcx
0x00000000004a887f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4a884d ; ret 0xacfc
0x00000000004a887b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4a8851 ; ret 0xacfc
0x0000000000493f5c : rcr byte ptr [rax], 1 ; stc ; call qword ptr [rax]
0x00000000004731f3 : rcr byte ptr [rbp + 0x41], 0x5c ; pop r13 ; pop r14 ; ret
0x0000000000405dc0 : rcr byte ptr [rbp + 0x41], 0x5c ; ret
0x00000000004106e1 : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; pop r13 ; ret
0x0000000000465fef : rcr byte ptr [rbp + 0x41], 1 ; pop rsp ; ret
0x0000000000484567 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x000000000044fb32 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000041489c : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000040ec86 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048d478 : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop dword ptr [rax] ; ret
0x000000000041078a : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x000000000040ff72 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004a8c9d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b0fd0 : rcr byte ptr [rdi], 1 ; cli ; call qword ptr [rdi]
0x0000000000482819 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000446ff4 : rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x0000000000446fe6 : rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000447d1a : rep stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x000000000041ede1 : rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x000000000040058b : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400596 ; ret
0x00000000004001ce : ret
0x00000000004006b7 : ret 0
0x000000000049f300 : ret 0x10
0x000000000047b6aa : ret 0x101
0x000000000048453c : ret 0x114d
0x0000000000457b94 : ret 0x1176
0x000000000047fc1c : ret 0x1272
0x000000000047c7b3 : ret 0x13e9
0x000000000048ace1 : ret 0x145
0x00000000004839e6 : ret 0x1474
0x0000000000479248 : ret 0x1475
0x00000000004759e1 : ret 0x1477
0x00000000004460c8 : ret 0x148
0x00000000004047b4 : ret 0x149
0x0000000000438b8c : ret 0x14d
0x000000000040a6ea : ret 0x15a
0x0000000000423d45 : ret 0x15e8
0x000000000046c271 : ret 0x1674
0x000000000044952e : ret 0x16e9
0x00000000004272ba : ret 0x17
0x000000000042b966 : ret 0x1776
0x000000000040aaa2 : ret 0x18
0x0000000000438ac9 : ret 0x180f
0x000000000042b4f5 : ret 0x1876
0x00000000004062ea : ret 0x19e
0x0000000000457b8b : ret 0x1a72
0x00000000004a91fa : ret 0x1ad4
0x0000000000407c62 : ret 0x1b
0x00000000004a798d : ret 0x1b49
0x000000000048edaf : ret 0x1be8
0x000000000042478a : ret 0x1c6
0x000000000045cd09 : ret 0x1ce9
0x00000000004a0fd0 : ret 0x1d4
0x00000000004a1768 : ret 0x1d5
0x0000000000400bf1 : ret 0x1d89
0x000000000040eb42 : ret 0x1f0f
0x000000000041eb06 : ret 0x1f77
0x0000000000459f7d : ret 0x1fe9
0x000000000045abd7 : ret 0x200
0x0000000000477dcb : ret 0x2041
0x0000000000449fec : ret 0x2044
0x0000000000461ca7 : ret 0x20be
0x000000000048ac4b : ret 0x2148
0x000000000041396d : ret 0x214c
0x0000000000412efc : ret 0x2175
0x0000000000490674 : ret 0x22
0x000000000047e9b8 : ret 0x2275
0x0000000000440e38 : ret 0x2288
0x000000000042489a : ret 0x22a
0x0000000000490882 : ret 0x22a1
0x00000000004906a2 : ret 0x22b7
0x0000000000486192 : ret 0x2366
0x000000000042d8d2 : ret 0x2373
0x000000000049ffd8 : ret 0x24
0x00000000004766f2 : ret 0x2423
0x000000000047273a : ret 0x2458
0x0000000000476691 : ret 0x2461
0x0000000000485ec7 : ret 0x24a
0x0000000000459f08 : ret 0x25
0x00000000004160ad : ret 0x2501
0x0000000000467374 : ret 0x2504
0x00000000004237b3 : ret 0x2575
0x000000000048c6e1 : ret 0x25e9
0x000000000045ca45 : ret 0x25fd
0x000000000044c2dc : ret 0x26
0x00000000004738e6 : ret 0x2774
0x000000000042f0a6 : ret 0x280f
0x000000000042b4e5 : ret 0x2876
0x000000000047ea37 : ret 0x28f5
0x000000000041df54 : ret 0x29
0x00000000004634ce : ret 0x290f
0x00000000004116b7 : ret 0x2948
0x000000000046640a : ret 0x2949
0x000000000040f050 : ret 0x294c
0x00000000004131dd : ret 0x294d
0x000000000046ddf9 : ret 0x29e8
0x000000000041054d : ret 0x2a
0x000000000041a3a2 : ret 0x2a19
0x0000000000417d4a : ret 0x2a3f
0x000000000042168a : ret 0x2a7
0x000000000040ff45 : ret 0x2ac8
0x000000000040ddfa : ret 0x2ada
0x000000000040e92a : ret 0x2ade
0x0000000000410a9a : ret 0x2b48
0x0000000000422edb : ret 0x2b74
0x000000000041ee22 : ret 0x2b75
0x0000000000448192 : ret 0x2b77
0x00000000004009a5 : ret 0x2b8
0x0000000000478a1a : ret 0x2bc
0x000000000048c6cf : ret 0x2be9
0x000000000041f66e : ret 0x2c75
0x000000000046f205 : ret 0x2e66
0x000000000044c25e : ret 0x2f75
0x0000000000467f35 : ret 0x30be
0x00000000004a04c8 : ret 0x33
0x00000000004529f4 : ret 0x349
0x000000000048aa80 : ret 0x3575
0x000000000047b37a : ret 0x3774
0x000000000042b946 : ret 0x3776
0x00000000004a8ada : ret 0x3827
0x000000000047008e : ret 0x3873
0x000000000042b4d5 : ret 0x3876
0x0000000000416b5b : ret 0x389
0x00000000004a7166 : ret 0x38ae
0x000000000048e392 : ret 0x38e8
0x0000000000489658 : ret 0x3901
0x000000000048113d : ret 0x3934
0x000000000046d848 : ret 0x3941
0x0000000000411341 : ret 0x3948
0x00000000004120fd : ret 0x3949
0x000000000041ef4c : ret 0x394c
0x0000000000468edd : ret 0x394d
0x0000000000446742 : ret 0x3a01
0x000000000042d8bb : ret 0x3a73
0x00000000004881a3 : ret 0x3a83
0x000000000040e67a : ret 0x3ab
0x00000000004811ca : ret 0x3b34
0x0000000000447161 : ret 0x3b48
0x0000000000449ccf : ret 0x3b8
0x0000000000414159 : ret 0x3c75
0x00000000004810fd : ret 0x3d
0x000000000047f3a8 : ret 0x3d73
0x0000000000420721 : ret 0x3d83
0x0000000000464bcd : ret 0x3de8
0x000000000041ca7f : ret 0x3de9
0x00000000004634f7 : ret 0x3e8
0x000000000047b1da : ret 0x3e80
0x000000000045a38b : ret 0x4002
0x000000000040d22d : ret 0x4074
0x0000000000473ed1 : ret 0x408d
0x000000000044c4aa : ret 0x4101
0x0000000000460578 : ret 0x4108
0x0000000000460d25 : ret 0x4110
0x0000000000481177 : ret 0x4134
0x00000000004531a7 : ret 0x415f
0x0000000000450c0e : ret 0x41c3
0x0000000000425f3a : ret 0x4266
0x0000000000470b63 : ret 0x4389
0x0000000000405d91 : ret 0x4401
0x000000000046878b : ret 0x4404
0x000000000041a45b : ret 0x4466
0x000000000041ddf3 : ret 0x4473
0x000000000045032a : ret 0x468
0x00000000004a7c64 : ret 0x474c
0x0000000000423f56 : ret 0x4801
0x00000000004122f6 : ret 0x4803
0x00000000004227c1 : ret 0x4804
0x0000000000440dc3 : ret 0x4808
0x0000000000402f66 : ret 0x480a
0x000000000041c498 : ret 0x4810
0x000000000045893c : ret 0x4811
0x000000000045dc77 : ret 0x481e
0x000000000045dc97 : ret 0x4820
0x000000000044e42e : ret 0x4830
0x0000000000425e46 : ret 0x4840
0x0000000000440a78 : ret 0x48c3
0x0000000000418e73 : ret 0x48e9
0x00000000004a9426 : ret 0x48f
0x0000000000405d2c : ret 0x4901
0x000000000045564b : ret 0x4902
0x00000000004194b2 : ret 0x4908
0x000000000042a40c : ret 0x4910
0x000000000045a7d9 : ret 0x4c01
0x000000000041e79a : ret 0x4c07
0x000000000045d536 : ret 0x4c40
0x000000000041d456 : ret 0x4d01
0x000000000045bff8 : ret 0x4d10
0x000000000040266f : ret 0x4de8
0x00000000004a8e87 : ret 0x4e27
0x000000000040169e : ret 0x4f76
0x000000000044efaf : ret 0x5089
0x000000000044c0c7 : ret 0x508b
0x000000000042d8a4 : ret 0x5173
0x0000000000449f27 : ret 0x5488
0x00000000004a70ec : ret 0x5508
0x0000000000471c2e : ret 0x5590
0x000000000042b926 : ret 0x5776
0x00000000004a93b8 : ret 0x5803
0x00000000004556b1 : ret 0x5841
0x0000000000487b15 : ret 0x5876
0x000000000040e683 : ret 0x589
0x00000000004a6dc0 : ret 0x591c
0x00000000004a7b27 : ret 0x5ae4
0x000000000042447e : ret 0x5ae9
0x0000000000455899 : ret 0x5be9
0x000000000040f38a : ret 0x5d5b
0x0000000000480e45 : ret 0x5de8
0x00000000004a9852 : ret 0x62c1
0x000000000047c620 : ret 0x6349
0x0000000000485334 : ret 0x637f
0x0000000000458913 : ret 0x6411
0x000000000045b4f1 : ret 0x6601
0x000000000042b461 : ret 0x6620
0x0000000000423928 : ret 0x66c3
0x000000000047fc2e : ret 0x674
0x000000000042b916 : ret 0x6776
0x00000000004a6ddf : ret 0x67b2
0x0000000000417105 : ret 0x6874
0x000000000047cdca : ret 0x68e8
0x00000000004495da : ret 0x6ae9
0x00000000004a99e1 : ret 0x6f9
0x0000000000421df7 : ret 0x708
0x0000000000417281 : ret 0x7401
0x000000000042278a : ret 0x7402
0x000000000047c68a : ret 0x7403
0x000000000044a651 : ret 0x7404
0x0000000000471a02 : ret 0x7408
0x0000000000412a0d : ret 0x7420
0x0000000000464424 : ret 0x7450
0x0000000000480e3a : ret 0x7472
0x0000000000444ca9 : ret 0x7501
0x0000000000444cb6 : ret 0x7502
0x0000000000444cc3 : ret 0x7504
0x000000000041eaad : ret 0x7508
0x0000000000444c7b : ret 0x7510
0x00000000004103a2 : ret 0x7520
0x00000000004247ae : ret 0x7540
0x0000000000475940 : ret 0x7577
0x000000000042c792 : ret 0x7677
0x0000000000482ad2 : ret 0x777
0x0000000000484396 : ret 0x77f
0x0000000000402dc1 : ret 0x7ce9
0x000000000042b401 : ret 0x7e20
0x000000000042b87c : ret 0x7e40
0x0000000000424aec : ret 0x7f10
0x000000000046da60 : ret 0x7f3c
0x000000000043306e : ret 0x80
0x0000000000425cc9 : ret 0x8000
0x000000000048e052 : ret 0x8001
0x0000000000476d87 : ret 0x8116
0x000000000045fd4b : ret 0x8148
0x000000000048e5a8 : ret 0x8166
0x000000000041d180 : ret 0x820f
0x0000000000454ed3 : ret 0x8301
0x000000000047d3a7 : ret 0x8303
0x000000000042c360 : ret 0x830f
0x000000000045db44 : ret 0x8341
0x0000000000423865 : ret 0x8348
0x0000000000446bc0 : ret 0x8349
0x000000000047f21f : ret 0x8364
0x0000000000471346 : ret 0x840
0x0000000000475d39 : ret 0x8401
0x0000000000412105 : ret 0x840f
0x0000000000453c20 : ret 0x841
0x000000000048b2fe : ret 0x8440
0x0000000000479dc7 : ret 0x848b
0x000000000046eea9 : ret 0x8502
0x0000000000413292 : ret 0x850f
0x0000000000458273 : ret 0x8511
0x000000000044a982 : ret 0x8545
0x0000000000402b42 : ret 0x8548
0x00000000004237da : ret 0x854d
0x0000000000405c01 : ret 0x8575
0x00000000004013d2 : ret 0x860f
0x000000000041ae3f : ret 0x870f
0x00000000004a66fe : ret 0x871e
0x000000000046da67 : ret 0x875
0x000000000042b505 : ret 0x876
0x0000000000402c6c : ret 0x8801
0x0000000000451f1d : ret 0x8804
0x000000000045b542 : ret 0x8841
0x000000000047e30e : ret 0x8844
0x000000000040245a : ret 0x8901
0x000000000044cf5e : ret 0x8902
0x000000000041258a : ret 0x8908
0x000000000045db36 : ret 0x8941
0x000000000041f70f : ret 0x8944
0x0000000000403e1f : ret 0x8948
0x00000000004137ba : ret 0x8949
0x0000000000410db1 : ret 0x894c
0x000000000048354b : ret 0x894e
0x00000000004176ea : ret 0x8a
0x0000000000487d40 : ret 0x8b
0x0000000000450849 : ret 0x8b01
0x000000000046f4fa : ret 0x8b04
0x0000000000475ad3 : ret 0x8b05
0x000000000046f3ab : ret 0x8b08
0x00000000004a8f2e : ret 0x8b36
0x000000000041d661 : ret 0x8b41
0x000000000046db03 : ret 0x8b44
0x0000000000413be3 : ret 0x8b48
0x0000000000411566 : ret 0x8b49
0x00000000004834ce : ret 0x8b4a
0x000000000040d43d : ret 0x8b4c
0x0000000000464c8d : ret 0x8c0f
0x000000000045d591 : ret 0x8d04
0x000000000048c4ff : ret 0x8d0f
0x000000000041cd5c : ret 0x8d44
0x0000000000419951 : ret 0x8d48
0x000000000046816c : ret 0x8d49
0x0000000000482877 : ret 0x8d4a
0x000000000041de74 : ret 0x8d4c
0x000000000045db52 : ret 0x8d89
0x00000000004529eb : ret 0x8e0f
0x000000000045ddfa : ret 0x8f0f
0x0000000000440245 : ret 0x90c3
0x0000000000423ef9 : ret 0x90e9
0x0000000000477e8e : ret 0x9174
0x000000000048b13b : ret 0x9272
0x000000000041b15d : ret 0x948
0x00000000004734a8 : ret 0x94c
0x0000000000484d62 : ret 0x950f
0x0000000000448f60 : ret 0x9572
0x00000000004a7d53 : ret 0x9576
0x000000000046074f : ret 0x958b
0x000000000042271e : ret 0x976
0x000000000047d153 : ret 0x9be9
0x0000000000487225 : ret 0x9eb
0x000000000049eb00 : ret 0xa
0x00000000004aea7e : ret 0xa01
0x000000000044a678 : ret 0xa076
0x00000000004494a4 : ret 0xa0e9
0x000000000048c5be : ret 0xa4e9
0x00000000004a7a43 : ret 0xa514
0x000000000048c6bd : ret 0xa5e9
0x000000000044b61d : ret 0xabe
0x000000000040fc36 : ret 0xac20
0x00000000004a7ec7 : ret 0xac65
0x000000000046624e : ret 0xace8
0x00000000004a8884 : ret 0xacfc
0x000000000045f58f : ret 0xae9
0x000000000042361a : ret 0xaeeb
0x00000000004ac07f : ret 0xb00e
0x00000000004119cd : ret 0xb074
0x000000000041b1bb : ret 0xb277
0x000000000046525e : ret 0xb2c8
0x0000000000480e80 : ret 0xb2e8
0x000000000045647b : ret 0xb2eb
0x0000000000449490 : ret 0xb4e9
0x000000000045db76 : ret 0xb589
0x000000000048a035 : ret 0xb5e8
0x0000000000402c25 : ret 0xb60f
0x0000000000400ee4 : ret 0xb70f
0x0000000000487e3a : ret 0xb781
0x0000000000469dd5 : ret 0xb8
0x000000000046bb7c : ret 0xb848
0x000000000048e412 : ret 0xb8e8
0x00000000004a7d8e : ret 0xb9b9
0x000000000046d3b5 : ret 0xb9e9
0x000000000046ef84 : ret 0xba41
0x0000000000422e53 : ret 0xbae9
0x00000000004565b2 : ret 0xbaeb
0x000000000048cb76 : ret 0xbc80
0x000000000045db62 : ret 0xbd89
0x0000000000480f82 : ret 0xbe0f
0x00000000004a7ae4 : ret 0xbe57
0x0000000000425b89 : ret 0xc000
0x0000000000403156 : ret 0xc031
0x000000000045895e : ret 0xc083
0x000000000042b2c0 : ret 0xc085
0x0000000000474509 : ret 0xc148
0x000000000041b2d9 : ret 0xc183
0x00000000004048e8 : ret 0xc189
0x000000000044a312 : ret 0xc221
0x000000000041f74b : ret 0xc275
0x00000000004768e6 : ret 0xc283
0x000000000042d774 : ret 0xc2b2
0x00000000004481fe : ret 0xc35b
0x0000000000457d4d : ret 0xc389
0x000000000041f74d : ret 0xc3f3
0x00000000004a6282 : ret 0xc4c3
0x00000000004a7698 : ret 0xc4ff
0x000000000042b8e1 : ret 0xc540
0x0000000000457e16 : ret 0xc589
0x000000000046342c : ret 0xc689
0x000000000047f1fd : ret 0xc74
0x0000000000441180 : ret 0xc748
0x0000000000469028 : ret 0xc789
0x0000000000481012 : ret 0xc829
0x0000000000461df3 : ret 0xc839
0x0000000000416b4c : ret 0xc883
0x000000000045aa6a : ret 0xc8e8
0x0000000000460827 : ret 0xc985
0x000000000046f493 : ret 0xc9eb
0x0000000000440d91 : ret 0xc9ff
0x00000000004008c1 : ret 0xca21
0x00000000004783cf : ret 0xcbe9
0x00000000004a712a : ret 0xcca7
0x00000000004a920d : ret 0xcd11
0x00000000004050f2 : ret 0xce80
0x000000000049ef00 : ret 0xd
0x0000000000420fce : ret 0xd020
0x000000000040dec6 : ret 0xd021
0x000000000044ba9f : ret 0xd029
0x00000000004642ab : ret 0xd120
0x0000000000401204 : ret 0xd284
0x000000000045790a : ret 0xd285
0x000000000048eaf8 : ret 0xd2e8
0x0000000000479e56 : ret 0xd348
0x000000000044f927 : ret 0xd5e9
0x00000000004813bf : ret 0xd75
0x000000000045cf36 : ret 0xd774
0x00000000004a8ca5 : ret 0xd8f
0x000000000040ff23 : ret 0xdaf7
0x00000000004540fa : ret 0xdb76
0x00000000004a8d86 : ret 0xdcd9
0x00000000004a7d02 : ret 0xde5d
0x00000000004a6a91 : ret 0xde9e
0x0000000000425a49 : ret 0xe000
0x0000000000444c39 : ret 0xe074
0x000000000044d6b0 : ret 0xe083
0x00000000004b52a4 : ret 0xe0a
0x000000000048c781 : ret 0xe1e9
0x000000000044d4e2 : ret 0xe1eb
0x000000000040dad0 : ret 0xe281
0x0000000000400c25 : ret 0xe283
0x00000000004731b8 : ret 0xe575
0x00000000004658b0 : ret 0xe57f
0x000000000046622a : ret 0xe583
0x00000000004481f2 : ret 0xe680
0x000000000046690f : ret 0xe683
0x00000000004a8ea6 : ret 0xe71f
0x000000000047921a : ret 0xe75
0x0000000000422f06 : ret 0xe775
0x0000000000465ee3 : ret 0xe7e9
0x000000000042bf45 : ret 0xe883
0x0000000000478d96 : ret 0xe8c0
0x0000000000402efa : ret 0xe901
0x0000000000402f3f : ret 0xe902
0x0000000000440e26 : ret 0xe908
0x000000000043d3c6 : ret 0xe910
0x000000000045e3bd : ret 0xe920
0x00000000004a7207 : ret 0xe970
0x000000000044818a : ret 0xea81
0x000000000040db9d : ret 0xeab8
0x0000000000400c0d : ret 0xeac1
0x000000000047da56 : ret 0xeb01
0x000000000046f3c3 : ret 0xeb04
0x000000000042a43a : ret 0xeb10
0x00000000004811e2 : ret 0xeb34
0x00000000004114ea : ret 0xec
0x00000000004a99b8 : ret 0xec2
0x000000000045cec0 : ret 0xed75
0x00000000004a965a : ret 0xef32
0x000000000048c348 : ret 0xef89
0x0000000000475f1f : ret 0xefeb
0x000000000042922e : ret 0xf
0x0000000000425909 : ret 0xf000
0x00000000004055d5 : ret 0xf01
0x000000000041ab09 : ret 0xf02
0x000000000041cee9 : ret 0xf04
0x0000000000411c53 : ret 0xf08
0x000000000041add9 : ret 0xf0f
0x000000000040e3ce : ret 0xf10
0x000000000046672b : ret 0xf20
0x000000000041d053 : ret 0xf275
0x00000000004637e6 : ret 0xf3f
0x0000000000466cb3 : ret 0xf40
0x000000000046fe3d : ret 0xf41
0x000000000048c7fc : ret 0xf45
0x0000000000423af9 : ret 0xf475
0x00000000004517a6 : ret 0xf48
0x00000000004004fd : ret 0xf49
0x0000000000466c99 : ret 0xf50
0x00000000004897c6 : ret 0xf608
0x0000000000475595 : ret 0xf631
0x0000000000425ec6 : ret 0xf66
0x000000000047aea7 : ret 0xf675
0x000000000046fefc : ret 0xf741
0x0000000000405822 : ret 0xf748
0x0000000000482abc : ret 0xf749
0x00000000004257c9 : ret 0xf800
0x000000000047bd8a : ret 0xf846
0x00000000004a6970 : ret 0xf869
0x0000000000418883 : ret 0xf8b
0x00000000004637e1 : ret 0xf8c1
0x00000000004406a6 : ret 0xf8c5
0x0000000000448534 : ret 0xf8e9
0x0000000000494614 : ret 0xfa10
0x0000000000494cf8 : ret 0xfa30
0x0000000000494b0c : ret 0xfa37
0x000000000041f432 : ret 0xfae9
0x00000000004957d0 : ret 0xfb3e
0x000000000041fa1a : ret 0xfbe9
0x0000000000425689 : ret 0xfc00
0x00000000004245a1 : ret 0xfc3
0x0000000000490d5a : ret 0xfc98
0x0000000000425549 : ret 0xfe00
0x0000000000418972 : ret 0xfe7a
0x0000000000400d55 : ret 0xfe83
0x000000000042374a : ret 0xfea4
0x0000000000422d1a : ret 0xfecb
0x0000000000425409 : ret 0xff00
0x0000000000434be1 : ret 0xff2
0x000000000044d65b : ret 0xff25
0x000000000042c109 : ret 0xff2d
0x0000000000425e6a : ret 0xff3
0x000000000046aed7 : ret 0xff31
0x00000000004252c9 : ret 0xff80
0x00000000004664b1 : ret 0xff83
0x000000000045408c : ret 0xff85
0x000000000045d522 : ret 0xffa0
0x00000000004237aa : ret 0xffa5
0x000000000040b07a : ret 0xffaf
0x000000000040ad7a : ret 0xffb2
0x0000000000411067 : ret 0xffb8
0x000000000040dbea : ret 0xffc0
0x00000000004234b8 : ret 0xffdf
0x000000000045ac10 : ret 0xffe0
0x000000000046d494 : ret 0xffe7
0x0000000000468149 : ret 0xffe8
0x0000000000449545 : ret 0xffe9
0x000000000040f0b1 : ret 0xffef
0x0000000000422ed2 : ret 0xfff
0x000000000040da12 : ret 0xfff0
0x000000000046a8c0 : ret 0xfff1
0x00000000004af431 : ret 0xfff7
0x0000000000424dc9 : ret 0xfff8
0x000000000041c988 : ret 0xfffa
0x0000000000404809 : ret 0xfffb
0x0000000000424c89 : ret 0xfffc
0x0000000000418305 : ret 0xfffd
0x000000000042194a : ret 0xfffe
0x00000000004157fc : ret 0xffff
0x0000000000403f9f : ret 1
0x000000000041fb8c : ret 2
0x000000000040fbb9 : ret 3
0x0000000000409ed8 : ret 4
0x0000000000438c74 : ret 5
0x000000000049e6a8 : ret 6
0x000000000042a9ca : ret 7
0x0000000000409f38 : ret 8
0x00000000004456ea : ret 9
0x000000000046f1fd : retf 0x9066 ; or byte ptr [rbx + 0xc], 0x40 ; jmp 0x46f1d0
0x000000000048dd93 : retf ; mov rsi, qword ptr [r14] ; call r12
0x00000000004944c0 : rol bh, 0xf9 ; call qword ptr [rax]
0x0000000000446805 : rol bl, 0x48 ; mov eax, edi ; ret
0x00000000004482f3 : rol bl, 0x48 ; mov eax, edx ; pop rbx ; ret
0x000000000048e1cc : rol bl, 0x66 ; nop ; mov rax, qword ptr [rsi + 8] ; ret
0x000000000042b45e : rol bl, 0x83 ; ret 0x6620
0x000000000047470b : rol bl, 0xb8 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000418467 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000042bc2d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004944b4 : rol bl, 1 ; stc ; jmp qword ptr [rax]
0x00000000004471ad : rol byte ptr [r9 + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x0000000000425e42 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x000000000042b94b : rol byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x00000000004738e2 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a29a0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000479dc1 : rol byte ptr [rax], 0 ; add byte ptr [rcx - 0x77], cl ; ret 0x848b
0x000000000042c69d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000044cf6b : rol byte ptr [rax], 0 ; add dh, dh ; ret 0x7404
0x000000000048d1fe : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000040fa49 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000042b6a2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x000000000048281b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x00000000004188d8 : rol byte ptr [rbx - 0x6af00002], 0xc0 ; neg eax ; ret
0x00000000004531a1 : rol byte ptr [rbx - 0x76befb08], 1 ; ret 0x415f
0x0000000000474972 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000448181 : rol byte ptr [rcx + 0xbeff], cl ; add byte ptr [rdi], cl ; lahf ; ret 0xea81
0x00000000004666ff : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x00000000004471ae : rol byte ptr [rcx + 0xf], 1 ; adc dword ptr [rbx], esp ; ret
0x000000000046d3b2 : rol byte ptr [rcx - 0x77], 1 ; ret 0xb9e9
0x0000000000474952 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000044e906 : rol byte ptr [rcx], 0x50 ; call rbx
0x000000000045945b : rol byte ptr [rcx], 0x83 ; ret 0x4801
0x0000000000448517 : rol byte ptr [rcx], 0x83 ; ret 0xf01
0x000000000041039d : rol byte ptr [rcx], 0x8b ; adc esi, esi ; ret 0x7520
0x0000000000448530 : rol byte ptr [rcx], 0xf ; scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000042399b : rol byte ptr [rcx], 1 ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000044e151 : rol byte ptr [rcx], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000494f70 : rol byte ptr [rdi - 6], 0xff ; ror byte ptr [rcx - 6], 1 ; jmp rax
0x00000000004749b2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000474962 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000004749a2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000042b9cf : rol ch, 1 ; std ; xlatb ; ret
0x0000000000473656 : rol ch, cl ; std ; xlatb ; ret
0x0000000000440d3f : rol ch, cl ; std ; xlatb ; ret 0xc085
0x00000000004a6280 : rol cl, 0xc2 ; ret
0x00000000004748fc : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000042b484 : rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b9c3 : rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440813 : rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000400929 : rol dword ptr [rcx], -0x73 ; call r11
0x0000000000478079 : rol dword ptr [rcx], 0 ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x000000000045694f : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax - 0x7d] ; ret 0x8801
0x0000000000454a0a : rol dword ptr [rdx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000042c105 : rol ebp, 1 ; stc ; xlatb ; ret 0xff2d
0x0000000000422e9c : rol ebx, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000422e9b : rol r11d, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000472305 : ror byte ptr [r9 + rcx*4 - 1], 0x41 ; call rsp
0x000000000048aa68 : ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x000000000042b4d2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x42b519 ; add rax, rdi ; ret
0x0000000000440bd7 : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000047461c : ror byte ptr [rax + 0x29], 1 ; clc ; shr rax, 2 ; ret
0x000000000041121e : ror byte ptr [rax + 0x29], 1 ; ret
0x00000000004759ec : ror byte ptr [rax + 0x39], 0xd7 ; ja 0x475a1f ; ret
0x000000000044be48 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000041dd23 : ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000482cd1 : ror byte ptr [rax + 0x39], cl ; call 0x490abeee
0x000000000047c94a : ror byte ptr [rax + 0x39], cl ; ret
0x0000000000470093 : ror byte ptr [rax + 0x39], cl ; ret 0xf48
0x000000000044d60d : ror byte ptr [rax + 0x63], cl ; test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000047e876 : ror byte ptr [rax + 0xf], 0x44 ; enter -0x76b8, -0x38 ; ret
0x000000000045f58b : ror byte ptr [rax + 0xf], 0x44 ; ret 0xae9
0x000000000045ab39 : ror byte ptr [rax + 0xf], 1 ; ret 0x3949
0x000000000045ab2a : ror byte ptr [rax + 0xf], 1 ; ret 0x8b41
0x000000000042b57c : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000042b4a2 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000042b993 : ror byte ptr [rax + 1], 0xf8 ; vzeroupper ; ret
0x0000000000405973 : ror byte ptr [rax + 1], 1 ; ret
0x0000000000440bd4 : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x000000000049eda8 : ror byte ptr [rax + rax], 0 ; ret
0x000000000042bc25 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004832ec : ror byte ptr [rax - 0x3f], 0xe0 ; add ecx, dword ptr [rbp - 0x77] ; ret 0x8d48
0x00000000004664aa : ror byte ptr [rax - 0x3f], 0xe2 ; and byte ptr [rax + 9], cl ; ret 0xff83
0x000000000042b492 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000042b4c2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000042b4b2 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x0000000000422ece : ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000479a4a : ror byte ptr [rax - 0x73], cl ; add dword ptr [r15], r9d ; xchg eax, ebp ; ret 0xc283
0x0000000000411460 : ror byte ptr [rax - 0x77], 1 ; ret
0x000000000048aa7d : ror byte ptr [rax - 0x77], 1 ; ret 0x3575
0x000000000045a344 : ror byte ptr [rax - 0x77], 1 ; ret 0x894c
0x0000000000413be0 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x0000000000481fea : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x000000000040dacd : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x000000000041f51d : ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x00000000004148c1 : ror byte ptr [rax - 0x7b], 0xd2 ; jne 0x4148d7 ; ret
0x0000000000484d5c : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000416645 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000475903 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x0000000000415861 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000041de6d : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb268c
0x000000000041efad : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb37cc
0x000000000041fd67 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb4586
0x000000000042186a : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6089
0x0000000000421d6f : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb658e
0x00000000004222ab : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2cb6aca
0x000000000040eb50 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000455045 : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000489655 : ror byte ptr [rax], 0x83 ; ret 0x3901
0x000000000046f0d2 : ror byte ptr [rbp + 0x39441704], cl ; ret 0xf49
0x0000000000473fec : ror byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x20 ; call rbx
0x0000000000484754 : ror byte ptr [rcx + 0x2b802], 1 ; add byte ptr [rax], al ; ret
0x000000000048c147 : ror byte ptr [rcx + 0x63], 4 ; test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x0000000000472306 : ror byte ptr [rcx + rcx*4 - 1], 0x41 ; call rsp
0x000000000045c046 : ror byte ptr [rcx - 0x73], 0x43 ; adc byte ptr [rdi], cl ; sahf ; ret 0x894c
0x0000000000468198 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000044f91f : ror byte ptr [rcx - 0x7d], cl ; cmp al, 0x24 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xd5e9
0x00000000004697ae : ror byte ptr [rcx - 0x90f4b], 0xff ; jmp qword ptr [rdx + rax*8]
0x0000000000494f74 : ror byte ptr [rcx - 6], 1 ; jmp rax
0x000000000046fef4 : ror byte ptr [rcx - 9], cl ; cmc ; mov rbp, rax ; jmp 0x46fec7
0x000000000044bd3c : ror byte ptr [rdi], 0x44 ; ret 0x66c3
0x0000000000478021 : ror byte ptr [rdi], 0x84 ; clc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045eb8c : ror byte ptr [rdi], 0x84 ; lahf ; or dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041005d : ror byte ptr [rdi], 0x84 ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000475b39 : ror byte ptr [rdi], 0x84 ; nop ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000040f7e1 : ror byte ptr [rdi], 0x84 ; popfq ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000402746 : ror byte ptr [rdi], 0x84 ; ret
0x0000000000466cab : ror byte ptr [rdi], 0x84 ; ret 0x17
0x00000000004508a7 : ror byte ptr [rdi], 0x84 ; ret 0xfffc
0x000000000044110a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042286f : ror byte ptr [rdi], 0x85 ; ret
0x000000000044c99f : ror byte ptr [rdi], 0x85 ; ret 0xfffe
0x000000000047db32 : ror byte ptr [rdi], 0x85 ; ret 2
0x0000000000467849 : ror byte ptr [rdi], 0x8f ; ret 7
0x000000000044ba9c : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x000000000047f609 : ror byte ptr [rdi], 0x94 ; ret
0x00000000004810fa : ror byte ptr [rdi], 0x94 ; ret 0x3d
0x000000000046da5d : ror byte ptr [rdi], 0x94 ; ret 0x7f3c
0x0000000000484d5f : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x0000000000446c7e : ror byte ptr [rdi], 0x94 ; ret 0xc085
0x000000000041073b : ror byte ptr [rdi], 0x94 ; ret 0xdaf7
0x000000000040ff20 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x000000000046ce6a : ror byte ptr [rdi], 0xb6 ; add al, 7 ; mov rax, qword ptr [rsi + rax*8] ; jmp rax
0x0000000000422ecb : ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x00000000004470f5 : ror byte ptr [rdi], 1 ; adc dword ptr [rdi + rdx - 0x40], edi ; ret
0x000000000040dae2 : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x40dacc ; ret
0x00000000004637de : ror byte ptr [rdi], cl ; ret 0xf8c1
0x00000000004945f0 : ror byte ptr [rip + 0x1442fffa], cl ; cli ; call rdx
0x0000000000493f3c : ror byte ptr [rsi], 1 ; stc ; call qword ptr [rax]
0x0000000000494514 : ror dh, 0xf9 ; call qword ptr [rax]
0x0000000000494508 : ror dl, 1 ; stc ; jmp qword ptr [rax]
0x000000000048535e : ror dword ptr [rax + 1], -8 ; sub rax, r8 ; ret
0x0000000000446c88 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000048ac44 : ror dword ptr [rax - 0x3f], cl ; out dx, eax ; xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x000000000046f686 : ror dword ptr [rax - 0x75], 4 ; ret 0x8548
0x0000000000423617 : ror dword ptr [rax - 0x77], 1 ; ret 0xaeeb
0x0000000000479e53 : ror dword ptr [rax - 0x77], 1 ; ret 0xd348
0x0000000000465ee0 : ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x0000000000485971 : ror dword ptr [rax - 0x77], cl ; ret
0x000000000041655d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x416557 ; ret
0x0000000000470a9d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x470a97 ; ret
0x000000000045dc94 : ror dword ptr [rax - 0x7d], cl ; ret 0x4820
0x0000000000483fbd : ror dword ptr [rbp + rcx*4 + 0x14], cl ; ret
0x000000000046589b : ror dword ptr [rcx - 0x77], 0x14 ; ret 0x8b48
0x0000000000444c37 : ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004940b8 : ror dword ptr [rdi - 0x6f2e0007], 1 ; stc ; call rcx
0x000000000042cf08 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d614 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d3e6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x000000000042d366 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x000000000042d6a4 : ror dword ptr [rdi], -0x7b ; je 0x42d6b4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d19b : ror dword ptr [rdi], -0x7b ; jno 0x42d1b0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d263 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cee0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041655c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x416558 ; ret
0x0000000000470a9c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x470a98 ; ret
0x000000000043f7ce : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a7165 : sahf ; ret 0x38ae
0x00000000004838b1 : sahf ; ret 0x3948
0x000000000045c04c : sahf ; ret 0x894c
0x000000000048c834 : sahf ; ret 0xf45
0x000000000049433d : sahf ; stc ; jmp qword ptr [rax]
0x0000000000494ba8 : sahf ; xor al, 0xfa ; ljmp ptr [rsi] ; xor al, 0xfa ; call rsp
0x00000000004188de : sal bh, 0xd8 ; ret
0x0000000000495100 : sal bh, 0xfa ; call rax
0x0000000000425cc7 : sal bh, 1 ; ret 0x8000
0x0000000000425b87 : sal bh, 1 ; ret 0xc000
0x0000000000425a47 : sal bh, 1 ; ret 0xe000
0x0000000000425907 : sal bh, 1 ; ret 0xf000
0x00000000004257c7 : sal bh, 1 ; ret 0xf800
0x0000000000425687 : sal bh, 1 ; ret 0xfc00
0x0000000000425547 : sal bh, 1 ; ret 0xfe00
0x0000000000425407 : sal bh, 1 ; ret 0xff00
0x00000000004252c7 : sal bh, 1 ; ret 0xff80
0x0000000000425187 : sal bh, 1 ; ret 0xffc0
0x0000000000425047 : sal bh, 1 ; ret 0xffe0
0x0000000000424f07 : sal bh, 1 ; ret 0xfff0
0x0000000000424dc7 : sal bh, 1 ; ret 0xfff8
0x0000000000424c87 : sal bh, 1 ; ret 0xfffc
0x0000000000424b47 : sal bh, 1 ; ret 0xfffe
0x00000000004950d4 : sal bl, 1 ; cli ; push rax ; cli ; call qword ptr [rax]
0x00000000004746ff : sal bl, 1 ; ret
0x000000000047f4ad : sal bl, cl ; ret
0x000000000040da0d : sal byte ptr [rax + 0x48], 0xc7 ; ret 0xfff0
0x00000000004897c1 : sal byte ptr [rax + rax*8 + 0x49], 0x83 ; ret 0xf608
0x00000000004766ed : sal byte ptr [rax - 0x75], 0x35 ; ret 0x2423
0x0000000000473ba2 : sal byte ptr [rbp + 0x2b], 0x4c ; mov eax, eax ; vzeroupper ; ret
0x00000000004826ae : sal byte ptr [rbp + 0x4f], 0x89 ; ret
0x0000000000405dbb : sal byte ptr [rbp + 0xa], 0x5b ; xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000048f5e3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000048f5c8 : sal byte ptr [rbp + 5], 0xf3 ; ret
0x00000000004148c4 : sal byte ptr [rbp + 9], cl ; ret
0x000000000044be71 : sal byte ptr [rbp - 0x10], 0x5a ; pop r10 ; ret
0x000000000041747d : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x0000000000446970 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000416560 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000425feb : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000040dae7 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000042b9cd : sal byte ptr [rbp - 0x30], 0xc5 ; std ; xlatb ; ret
0x0000000000480f68 : sal byte ptr [rbp - 0x31], cl ; movsx eax, cl ; neg eax ; ret
0x000000000042b9c5 : sal byte ptr [rbp - 0x38], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000044081d : sal byte ptr [rbp - 0x50], 0xc5 ; std ; xlatb ; ret
0x0000000000440815 : sal byte ptr [rbp - 0x68], 0xc5 ; std ; xlatb ; ret 0xc085
0x000000000047445b : sal byte ptr [rbp - 0xe], cl ; ret
0x000000000041889c : sal byte ptr [rbx + 0x21], 1 ; movzx eax, byte ptr [rax] ; ret
0x000000000044cf56 : sal byte ptr [rbx + rbp + 0x48], 0x8b ; push rax ; or dh, dh ; ret 0x8902
0x000000000048721c : sal byte ptr [rbx + rdi + 0x48], cl ; shl edx, 5 ; add rdx, rax ; jmp 0x48723a
0x0000000000440b1c : sal byte ptr [rcx + rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000044e902 : sal byte ptr [rcx], 0xd2 ; add eax, 1 ; push rax ; call rbx
0x000000000044be46 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x000000000040ea4c : sal byte ptr [rdx + 0x3948006b], 1 ; ret
0x00000000004738ab : sal byte ptr [rdx + 0x48], cl ; bsf eax, edx ; ret
0x000000000040040d : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000044c77b : sal byte ptr [rdx + rcx + 0x48], cl ; lea edi, dword ptr [rcx + rax + 0x20] ; jmp rdx
0x0000000000440e33 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x0000000000494a60 : sal byte ptr [rip + 0x3550fffa], 0xfa ; jmp rax
0x0000000000485121 : sal byte ptr [rsp + rcx + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047fa69 : sal byte ptr [rsp + rsi + 0x48], 0x89 ; ret
0x000000000048981a : sal byte ptr [rsp + rsi*4 + 0x48], 0x83 ; ret 0xf608
0x00000000004950a8 : sal dl, 0xfa ; call rax
0x00000000004950ac : sal dl, 1 ; cli ; jmp rax
0x0000000000447053 : sal ebx, 1 ; movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x0000000000480f6d : sal edi, -0x28 ; ret
0x00000000004ae1b5 : sal esi, cl ; call qword ptr [rax]
0x0000000000444c76 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000423902 : salc ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x000000000042d996 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x00000000004900b1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000446dba : salc ; clc ; ret
0x000000000047e7b4 : salc ; cmp rcx, rsi ; jne 0x47e797 ; ret
0x0000000000405d9e : salc ; mov byte ptr [rcx], 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000484cd9 : salc ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000047e7b9 : salc ; ret
0x0000000000495128 : sar al, 0xfa ; jmp rax
0x0000000000403010 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x00000000004495e3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x000000000047fdf3 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004846b0 : sar bh, 0xff ; mov eax, 1 ; ret
0x0000000000402742 : sar byte ptr [rax + 0x5b], 0x85 ; ror byte ptr [rdi], 0x84 ; ret
0x000000000047bd31 : sar byte ptr [rax + 0xe], 0x5b ; ret
0x00000000004942e4 : sar byte ptr [rcx - 0x442f0007], 1 ; stc ; call rax
0x0000000000446c2e : sar byte ptr [rcx], 0xc8 ; jle 0x446c70 ; movsxd rax, ecx ; ret
0x000000000044d4dd : sar byte ptr [rcx], cl ; ret
0x00000000004941cc : sar byte ptr [rdi - 0x4daf0007], 0xf9 ; call qword ptr [rax]
0x0000000000458956 : sar byte ptr [rdx], 0xf ; ret 0xc083
0x00000000004a7aff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x000000000049514c : sar cl, 0xfa ; jmp rax
0x00000000004944e1 : sar cl, cl ; call qword ptr [rax - 0x1f00062d]
0x000000000046329d : sar cl, cl ; dec dword ptr [rax + 0x29] ; ret
0x0000000000438593 : sar dword ptr [rax + rcx*2 + 0x11], 1 ; jns 0x43859e ; ret
0x0000000000447569 : sar dword ptr [rsi + 0x7f], 0x23 ; vzeroupper ; ret
0x0000000000471cfc : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048872e : sar eax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004a7863 : sar ecx, 1 ; jnp 0x4a7824 ; ret
0x00000000004944e5 : sar ecx, cl ; jmp rax
0x00000000004157f7 : sar edx, 2 ; call 0x411a55
0x0000000000471e02 : sar edx, 2 ; sub eax, edx ; ret
0x000000000042bc27 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000447a23 : sar esi, 1 ; jg 0x447a53 ; vzeroupper ; ret
0x0000000000447bbc : sar esi, 1 ; jg 0x447bec ; vzeroupper ; ret
0x0000000000471cfb : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x000000000048872d : sar rax, 3 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004157f6 : sar rdx, 2 ; call 0x411a56
0x00000000004157f5 : sar rdx, 2 ; call 0x411a57
0x0000000000471e01 : sar rdx, 2 ; sub eax, edx ; ret
0x000000000042bc26 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000463495 : sbb ah, byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; ret
0x00000000004001c9 : sbb al, 0x23 ; stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x000000000046690d : sbb al, 0x29 ; ret 0xe683
0x00000000004b4f64 : sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x00000000004b0f38 : sbb al, 0x57 ; add byte ptr [rax], al ; test byte ptr [rsi], dl ; cli ; call rcx
0x0000000000467847 : sbb al, 0x85 ; ror byte ptr [rdi], 0x8f ; ret 7
0x000000000040e032 : sbb al, 7 ; mov rax, qword ptr [rsp + 8] ; call rax
0x0000000000463f76 : sbb al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406ee3 : sbb al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000469a1b : sbb al, byte ptr fs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040b078 : sbb al, ch ; ret 0xffaf
0x00000000004a65e5 : sbb bl, byte ptr [rsi] ; ret
0x0000000000481cd4 : sbb byte ptr [r8 + 0x5a], bl ; pop rbx ; ret
0x0000000000485c34 : sbb byte ptr [r8], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x0000000000484d59 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000047e311 : sbb byte ptr [rax + 0x29], cl ; ret 0x394c
0x0000000000419271 : sbb byte ptr [rax + 0x39], cl ; ret
0x000000000045dde4 : sbb byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000481cd5 : sbb byte ptr [rax + 0x5a], bl ; pop rbx ; ret
0x0000000000469322 : sbb byte ptr [rax - 0x3f], cl ; cli ; add cl, byte ptr [rax + 0x39] ; ret 0x850f
0x000000000048de3a : sbb byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x77], cl ; ret
0x00000000004826b7 : sbb byte ptr [rax - 0x75], cl ; push rsp ; and al, 0x10 ; call rdx
0x000000000041f4cd : sbb byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x0000000000474330 : sbb byte ptr [rax - 0x77], cl ; out dx, eax ; mov r9, r14 ; call rbx
0x000000000047fa8c : sbb byte ptr [rax - 0x77], cl ; push rbx ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004165c1 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000041a21b : sbb byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048593f : sbb byte ptr [rax - 0x77], cl ; ret
0x0000000000419a33 : sbb byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x84 ; ret
0x0000000000485c35 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add bl, ch ; ret
0x000000000040a52a : sbb byte ptr [rax], al ; add byte ptr [rbx - 0x7bf0fc06], al ; ret
0x0000000000494338 : sbb byte ptr [rbp - 0x612f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000048a8b5 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000041fae8 : sbb byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000044d2bc : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000411997 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000418457 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000471b1a : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x000000000041994e : sbb byte ptr [rcx + 1], cl ; ret 0x8d48
0x000000000047202e : sbb byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049012f : sbb byte ptr [rcx + rdi + 0x6d], cl ; js 0x4901b2 ; ret 0x8b48
0x00000000004b4134 : sbb byte ptr [rcx - 0x32380000], cl ; cld ; jmp qword ptr [rsi]
0x0000000000454408 : sbb byte ptr [rcx - 0x77], al ; ret
0x000000000040dbe0 : sbb byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000041f51b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000484d5a : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000048711b : sbb byte ptr [rdx], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004af634 : sbb byte ptr [rsi], bh ; add byte ptr [rax], al ; cwde ; fprem ; call qword ptr [rax]
0x0000000000494430 : sbb cl, 0xf9 ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x0000000000493f5d : sbb cl, bh ; call qword ptr [rax]
0x000000000041dd1d : sbb cl, byte ptr [rax + 0x29480614] ; ror byte ptr [rax + 0x39], 1 ; ret
0x0000000000457b8d : sbb cl, byte ptr [rdi] ; mov bh, 0x47 ; or cl, byte ptr [rax + 0x39] ; ret 0x1176
0x000000000043df1d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fb6a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f38a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f77a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef9a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ea7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000043f139 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e59d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043dd7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d55d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000043f62a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff5a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043d89d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d9d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1f3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043fe5b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ea13 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd13 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d833 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e533 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f67b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee9b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048e165 : sbb dh, bl ; ret
0x0000000000480977 : sbb dl, dh ; jmp r11
0x000000000048870b : sbb dword ptr [rax - 0x7d], ecx ; ret
0x000000000048e059 : sbb dword ptr [rax - 0x7d], ecx ; ret 0x8001
0x000000000045caab : sbb dword ptr [rbx + rdi*8], 0xc03190ff ; ret
0x00000000004612d1 : sbb dword ptr [rbx - 0x52743], eax ; call qword ptr [rax]
0x00000000004a8e9d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, 0xff ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000446647 : sbb eax, -1 ; ret
0x000000000048d1b2 : sbb eax, 0x18c48348 ; ret
0x00000000004901f0 : sbb eax, 0x22bafb ; jne 0x4901e0 ; pop rbx ; ret
0x000000000045e7f4 : sbb eax, 0x39480001 ; ret
0x00000000004623c6 : sbb eax, 0x83480001 ; clc ; dec dword ptr [rcx - 0x77] ; ret
0x000000000045dc72 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x481e
0x0000000000407c5a : sbb eax, dword ptr [rax] ; add byte ptr [rbx - 0x7bf0fe02], al ; ret 0x1b
0x000000000048281a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x000000000042c087 : sbb eax, eax ; or eax, 1 ; ret
0x000000000048dd3f : sbb eax, eax ; ret
0x0000000000446645 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000424601 : sbb ebp, dword ptr [rip + 0xf480002] ; ret 0x66c3
0x0000000000472ac9 : sbb ecx, dword ptr [rbp + 0x29] ; ret 0x8948
0x0000000000450b3e : sbb ecx, dword ptr [rcx + 0x50895048] ; push rsp ; ret
0x0000000000403ebd : sbb ecx, dword ptr [rcx - 0x7d] ; ret
0x000000000042b122 : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fbbe : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000420559 : scasb al, byte ptr [rdi] ; ret 0x29
0x000000000043fcbd : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004a3afd : scasd eax, dword ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000004b1ad1 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rax]
0x00000000004b1ab9 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rbx]
0x00000000004b1ae5 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004148ae : scasd eax, dword ptr [rdi] ; nop ; xor eax, eax ; ret
0x000000000040e3e9 : scasd eax, dword ptr [rdi] ; ret
0x000000000045b08e : scasd eax, dword ptr [rdi] ; ret 0x148
0x00000000004116b6 : scasd eax, dword ptr [rdi] ; ret 0x2948
0x0000000000419949 : scasd eax, dword ptr [rdi] ; ret 0x8948
0x0000000000448533 : scasd eax, dword ptr [rdi] ; ret 0xf8e9
0x000000000044be4c : setae al ; ret
0x000000000045adba : sete dh ; mov dword ptr [rbx + 0x40], esi ; xor eax, eax ; pop rbx ; ret
0x00000000004188dc : setne al ; neg eax ; ret
0x000000000044d4e0 : setne dl ; jmp 0x44d4c8
0x0000000000494384 : shl bl, 1 ; stc ; call rax
0x000000000042b96b : shl byte ptr [rax + 0x48], 1 ; clc ; vzeroupper ; ret
0x000000000042b92b : shl byte ptr [rax], 0x48 ; add eax, edi ; vzeroupper ; ret
0x0000000000493f70 : shl byte ptr [rcx], 0xf9 ; jmp rax
0x000000000044688f : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000444c33 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x00000000004403e5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x000000000042d89b : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042d8b2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000473446 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473457 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000042d791 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494388 : shl ch, 1 ; stc ; call rax
0x0000000000494380 : shl cl, 1 ; stc ; call rax
0x000000000049ffd0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000400b08 : shl dword ptr [rdi + 0x5d01002b], cl ; ret
0x00000000004a79e8 : shl dword ptr [rdi - 5], 1 ; ret
0x000000000042d816 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004466eb : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000473442 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042d8cd : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x000000000042d8b6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000042d89f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x000000000042c35b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042d831 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042b2bc : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x000000000042d6f1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000449054 : shl dword ptr [rsi], 1 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000044e171 : shl eax, cl ; pop rbp ; pop r12 ; ret
0x000000000044e16d : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; pop r12 ; ret
0x0000000000482eec : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e77 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e46 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000487220 : shl edx, 5 ; add rdx, rax ; jmp 0x487236
0x0000000000482eeb : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000482e76 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000482e45 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048721f : shl rdx, 5 ; add rdx, rax ; jmp 0x487237
0x0000000000423592 : shr al, 0x48 ; ret
0x0000000000486189 : shr al, 0x91 ; pop rsi ; cld ; call qword ptr [rax + 0x66c205f6]
0x0000000000425fef : shr byte ptr [rcx], 0xc8 ; ret
0x0000000000494eac : shr byte ptr [rcx], 0xfa ; jmp qword ptr [rax]
0x000000000042459a : shr byte ptr [rcx], cl ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x0000000000457938 : shr byte ptr [rcx], cl ; ret
0x000000000042bc2b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000495068 : shr byte ptr [rdi - 0x63af0006], 0xfa ; jmp rax
0x0000000000493f90 : shr byte ptr [rdx], 0xf9 ; jmp rax
0x000000000048cc92 : shr cl, 1 ; ret 0xfffe
0x00000000004682dc : shr cl, cl ; jrcxz 0x4682e8 ; dec dword ptr [rbp - 0x77] ; ret 0x894c
0x000000000048c79f : shr cl, cl ; ret
0x000000000044820a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x000000000047450b : shr eax, 2 ; ret
0x0000000000474a13 : shr eax, 2 ; vzeroupper ; ret
0x0000000000448255 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000041edde : shr ecx, 3 ; rep stosq qword ptr [rdi], rax ; pop rbx ; ret
0x0000000000482ffc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482f81 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f50 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000482ffb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000482f80 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000482f4f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000047450a : shr rax, 2 ; ret
0x0000000000474a12 : shr rax, 2 ; vzeroupper ; ret
0x000000000049f1a9 : sldt word ptr [rax] ; ret
0x0000000000473d46 : stc ; add byte ptr [rax + rax], cl ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000494196 : stc ; call qword ptr [rax + 0x20fff994]
0x00000000004943ca : stc ; call qword ptr [rax + 0x20fff9e7]
0x00000000004944e2 : stc ; call qword ptr [rax - 0x1f00062d]
0x00000000004944f6 : stc ; call qword ptr [rax - 0x1f00063b]
0x0000000000494316 : stc ; call qword ptr [rax - 0x1f000659]
0x00000000004944ae : stc ; call qword ptr [rax - 0x2f000641]
0x0000000000493f56 : stc ; call qword ptr [rax - 0x2f0006e9]
0x0000000000493f46 : stc ; call qword ptr [rax - 0x2f0006ee]
0x0000000000493f36 : stc ; call qword ptr [rax - 0x2f0006f3]
0x000000000049425e : stc ; call qword ptr [rax]
0x00000000004afa32 : stc ; call qword ptr [rbx]
0x00000000004b044a : stc ; call qword ptr [rcx]
0x0000000000494092 : stc ; call qword ptr [rdx]
0x0000000000494126 : stc ; call qword ptr [rsi]
0x0000000000493f3a : stc ; call rax
0x00000000004940b6 : stc ; call rcx
0x00000000004b01f6 : stc ; call rsi
0x00000000004af92e : stc ; call rsp
0x0000000000495151 : stc ; cli ; inc dword ptr [rax] ; cli ; cli ; jmp qword ptr [rax]
0x0000000000495149 : stc ; cli ; inc eax ; stc ; cli ; jmp rax
0x0000000000495135 : stc ; cli ; jmp qword ptr [rax]
0x000000000049514d : stc ; cli ; jmp rax
0x000000000046329e : stc ; dec dword ptr [rax + 0x29] ; ret
0x0000000000468a55 : stc ; dec dword ptr [rax - 0x39] ; ret 0xffa0
0x00000000004940ee : stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x0000000000494a2e : stc ; dec dword ptr [rsi] ; xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x000000000049420a : stc ; inc dword ptr [rax + 0x10fff9bf] ; mov dl, 0xf9 ; call rax
0x00000000004941aa : stc ; inc dword ptr [rax + 0x58fff997] ; mov dl, 0xf9 ; jmp qword ptr [rax]
0x0000000000494032 : stc ; inc dword ptr [rax + 0x64] ; stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x000000000049441a : stc ; inc dword ptr [rax - 0x21] ; stc ; jmp qword ptr [rax]
0x0000000000494496 : stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x0000000000494432 : stc ; inc dword ptr [rax - 0x25] ; stc ; jmp qword ptr [rax]
0x00000000004943ae : stc ; inc dword ptr [rax - 0x26] ; stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x00000000004944de : stc ; inc dword ptr [rax - 0x2e] ; stc ; call qword ptr [rax - 0x1f00062d]
0x0000000000494322 : stc ; inc dword ptr [rax - 0x2f000655] ; lodsb al, byte ptr [rsi] ; stc ; jmp qword ptr [rax]
0x0000000000494336 : stc ; inc dword ptr [rax - 0x2f000663] ; sahf ; stc ; jmp qword ptr [rax]
0x00000000004944f2 : stc ; inc dword ptr [rax - 0x3c] ; stc ; call qword ptr [rax - 0x1f00063b]
0x00000000004942ee : stc ; inc dword ptr [rax - 0x3f000669] ; wait ; stc ; call qword ptr [rax]
0x000000000049423e : stc ; inc dword ptr [rax - 0x47] ; stc ; jmp qword ptr [rax]
0x0000000000494312 : stc ; inc dword ptr [rax - 0x5a] ; stc ; call qword ptr [rax - 0x1f000659]
0x00000000004941a2 : stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x0000000000493f76 : stc ; inc dword ptr [rax] ; and al, 0xf9 ; jmp qword ptr [rax]
0x00000000004943b2 : stc ; inc dword ptr [rax] ; fdiv st(1), st(0) ; jmp rax
0x0000000000494396 : stc ; inc dword ptr [rax] ; fdivp st(1) ; jmp rax
0x00000000004941b6 : stc ; inc dword ptr [rax] ; mov dh, 0xf9 ; jmp rax
0x00000000004942de : stc ; inc dword ptr [rax] ; mov eax, 0xb9d0fff9 ; stc ; call rax
0x0000000000494042 : stc ; inc dword ptr [rax] ; push 0x68f0fff9 ; stc ; jmp rax
0x0000000000493ffe : stc ; inc dword ptr [rax] ; push rdx ; stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000494192 : stc ; inc dword ptr [rax] ; xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000493f6e : stc ; inc eax ; and ecx, edi ; jmp rax
0x00000000004941ca : stc ; inc eax ; mov edi, 0xb250fff9 ; stc ; call qword ptr [rax]
0x0000000000493f8e : stc ; inc eax ; sub bh, cl ; jmp rax
0x00000000004942f2 : stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x000000000043ec72 : stc ; je 0x43ec3e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000494016 : stc ; jmp qword ptr [rax + 0x10fff95a]
0x00000000004949ee : stc ; jmp qword ptr [rax - 0x1f00061a]
0x0000000000493f7a : stc ; jmp qword ptr [rax]
0x00000000004af77a : stc ; jmp qword ptr [rbx]
0x00000000004afe4a : stc ; jmp qword ptr [rcx]
0x00000000004b074e : stc ; jmp qword ptr [rdx]
0x0000000000493f72 : stc ; jmp rax
0x00000000004af9f6 : stc ; jmp rbx
0x00000000004940d6 : stc ; jmp rcx
0x0000000000494096 : stc ; jmp rdx
0x00000000004940f2 : stc ; jmp rsi
0x00000000004a7864 : stc ; jnp 0x4a7823 ; ret
0x00000000004941ae : stc ; lcall ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x000000000049436e : stc ; ljmp ptr [rax - 0x26] ; stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x0000000000430178 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000049419e : stc ; push qword ptr [rax + 0x40fff995] ; xchg eax, esi ; stc ; jmp rax
0x0000000000494002 : stc ; push qword ptr [rax + 0x53] ; stc ; jmp rax
0x0000000000493f6a : stc ; push qword ptr [rax + 0xa] ; stc ; inc eax ; and ecx, edi ; jmp rax
0x0000000000494492 : stc ; push qword ptr [rax - 0x26] ; stc ; inc dword ptr [rax - 0x24] ; stc ; jmp qword ptr [rax]
0x000000000049426e : stc ; push qword ptr [rax - 0x4f] ; stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x00000000004944fe : stc ; push qword ptr [rax] ; enter -7, -0x80 ; leave ; stc ; call rax
0x0000000000494372 : stc ; push qword ptr [rax] ; fdiv st(1), st(0) ; call qword ptr [rax]
0x00000000004942d6 : stc ; push qword ptr [rax] ; mov ah, 0xf9 ; call qword ptr [rax]
0x000000000049425a : stc ; push qword ptr [rax] ; mov bh, 0xf9 ; call qword ptr [rax]
0x0000000000494272 : stc ; push qword ptr [rax] ; mov bl, 0xf9 ; call qword ptr [rax]
0x000000000049428e : stc ; push qword ptr [rax] ; mov cl, 0xf9 ; push rax ; mov dl, 0xf9 ; call rax
0x00000000004941ee : stc ; push qword ptr [rax] ; mov dl, 0xf9 ; push rax ; mov bl, 0xf9 ; call rax
0x0000000000494012 : stc ; push qword ptr [rax] ; pop rcx ; stc ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000494036 : stc ; push qword ptr [rax] ; stc ; jmp qword ptr [rax]
0x00000000004940e6 : stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000494122 : stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x00000000004941f2 : stc ; push rax ; mov bl, 0xf9 ; call rax
0x00000000004941d6 : stc ; push rax ; mov ch, 0xf9 ; call rax
0x000000000049427a : stc ; push rax ; mov dh, 0xf9 ; call rax
0x0000000000494292 : stc ; push rax ; mov dl, 0xf9 ; call rax
0x0000000000494046 : stc ; push rax ; push 0x69e0fff9 ; stc ; call rax
0x00000000004675de : stc ; ret 3
0x0000000000446db9 : stc ; salc ; clc ; ret
0x00000000004949e5 : stc ; stc ; jmp rax
0x0000000000438a94 : stc ; vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x000000000042c107 : stc ; xlatb ; ret 0xff2d
0x00000000004a4e06 : std ; call qword ptr [rax]
0x00000000004b582a : std ; call qword ptr [rbx]
0x00000000004b52ba : std ; call qword ptr [rdx]
0x00000000004ab26a : std ; call rax
0x00000000004b1992 : std ; call rdx
0x000000000047640a : std ; dec dword ptr [rax + 0x39] ; ret
0x00000000004a4e3e : std ; dec dword ptr [rax + 0x60fffd77] ; ja 0x4a4e4d ; jmp qword ptr [rax]
0x0000000000473d68 : std ; dec dword ptr [rax + 0xf] ; ret 0x90c3
0x000000000044a35e : std ; dec dword ptr [rax - 0x77] ; ret
0x0000000000469a62 : std ; dec dword ptr [rax - 0x7d] ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000424132 : std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004826ab : std ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000481b5e : std ; jbe 0x481b6c ; ret
0x00000000004a4e46 : std ; jmp qword ptr [rax]
0x00000000004a4e0a : std ; jmp qword ptr [rbx]
0x00000000004b5002 : std ; jmp qword ptr [rcx]
0x00000000004b149a : std ; jmp qword ptr [rdi]
0x00000000004b0bba : std ; jmp qword ptr [rdx]
0x00000000004aa8b6 : std ; jmp rbx
0x00000000004b4932 : std ; jmp rdx
0x00000000004b5036 : std ; jmp rsp
0x00000000004a4e02 : std ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x00000000004a4e1a : std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004a4e16 : std ; lcall ptr [rax + 0x74] ; std ; lcall ptr [rax + 0x74] ; std ; jmp qword ptr [rbx]
0x00000000004aa8be : std ; lcall ptr [rsi - 0x594b0003] ; std ; jmp rbx
0x000000000042f99b : std ; mov word ptr [rdi - 2], cx ; ret
0x00000000004aa8c2 : std ; push qword ptr [rsi - 0x591c0003] ; std ; jmp rbx
0x000000000044b36e : std ; push rbx ; ret
0x0000000000446ff3 : std ; rep movsb byte ptr [rdi], byte ptr [rsi] ; cld ; ret
0x000000000042b9d1 : std ; xlatb ; ret
0x000000000042b9c9 : std ; xlatb ; ret 0xc085
0x000000000042bf43 : std ; xlatb ; ret 0xe883
0x0000000000473654 : std ; xlatb ; rol ch, cl ; std ; xlatb ; ret
0x0000000000421cc1 : sti ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000411793 : sti ; add cl, byte ptr [rax + 0xf] ; scasd eax, dword ptr [rdi] ; ret
0x00000000004951fe : sti ; call qword ptr [rax]
0x000000000049580e : sti ; call qword ptr [rbx]
0x000000000049655e : sti ; call qword ptr [rdi]
0x0000000000495f7e : sti ; call rax
0x0000000000495232 : sti ; call rbx
0x00000000004956e2 : sti ; call rsp
0x0000000000495f8e : sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000496576 : sti ; dec dword ptr [rax + rsi*2 + 0x73c9fffb] ; sti ; call qword ptr [rax]
0x000000000044917f : sti ; dec dword ptr [rax - 0x77] ; ret
0x000000000049655a : sti ; dec dword ptr [rdi + 0x73] ; sti ; call qword ptr [rdi]
0x0000000000495816 : sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000049657a : sti ; dec ecx ; jae 0x49657f ; call qword ptr [rax]
0x00000000004b09b1 : sti ; hlt ; jmp qword ptr [rbx]
0x0000000000496556 : sti ; inc dword ptr [rax + 0x4ffffb75] ; jae 0x496563 ; call qword ptr [rdi]
0x0000000000495806 : sti ; inc esp ; cmp eax, 0x3dc4fffb ; sti ; call qword ptr [rbx]
0x0000000000495f6a : sti ; jmp qword ptr [rax]
0x00000000004b2c52 : sti ; jmp qword ptr [rbx]
0x00000000004956fa : sti ; jmp qword ptr [rcx - 0x2b0004c3]
0x00000000004956f2 : sti ; jmp qword ptr [rdi]
0x00000000004906c0 : sti ; jmp qword ptr [rsi + 0xf]
0x0000000000496526 : sti ; jmp rdx
0x0000000000495812 : sti ; lcall ptr [rax + 0x3e] ; sti ; dec dword ptr [rsi + rdi - 5] ; call rsp
0x000000000049651e : sti ; lcall ptr [rdi + 0x72] ; sti ; ljmp ptr [rdx] ; jb 0x49652b ; jmp rdx
0x0000000000496522 : sti ; ljmp ptr [rdx] ; jb 0x496527 ; jmp rdx
0x000000000042fd78 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004901f1 : sti ; mov edx, 0xe1750022 ; pop rbx ; ret
0x0000000000495f8a : sti ; push qword ptr [rax + 0x6b] ; sti ; dec dword ptr [rax + 0x6b] ; sti ; jmp qword ptr [rax]
0x0000000000495f7a : sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x0000000000495f76 : sti ; push qword ptr [rcx + rbp*2] ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x00000000004a79ea : sti ; ret
0x0000000000494a29 : sti ; stc ; jmp rax
0x000000000045a627 : sti ; test rax, rax ; je 0x45a635 ; call rax
0x000000000046c74f : stosb byte ptr [rdi], al ; and al, 0 ; mov rax, qword ptr [rax + rdi*8] ; jmp rax
0x0000000000495059 : stosb byte ptr [rdi], al ; cli ; call rax
0x00000000004a7ec4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000447d1b : stosb byte ptr [rdi], al ; mov rax, rdx ; ret
0x00000000004244b1 : stosd dword ptr [rdi], eax ; and dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000049505d : stosd dword ptr [rdi], eax ; cli ; jmp qword ptr [rax]
0x000000000046871e : stosd dword ptr [rdi], eax ; mov eax, 1 ; ret
0x000000000041ede3 : stosd dword ptr [rdi], eax ; pop rbx ; ret
0x00000000004001cb : stosd dword ptr [rdi], eax ; pushfq ; popfq ; ret
0x00000000004a8fcc : stosd dword ptr [rdi], eax ; ret
0x0000000000494325 : stosd dword ptr [rdi], eax ; stc ; call rax
0x0000000000424761 : stosd dword ptr [rdi], eax ; sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000041ede2 : stosq qword ptr [rdi], rax ; pop rbx ; ret
0x00000000004a93b1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000481e56 : sub al, 0x48 ; add esp, 0x38 ; ret
0x00000000004b0748 : sub al, 0x4f ; add byte ptr [rax], al ; mov ah, 0xcd ; stc ; jmp qword ptr [rdx]
0x0000000000447f52 : sub al, 0x72 ; add cl, byte ptr [rax + 0x77f8c50f] ; ret
0x00000000004af9f4 : sub al, 0x83 ; stc ; jmp rbx
0x000000000042cee3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000424130 : sub al, 0xc3 ; std ; dec dword ptr [rbp - 0x7b] ; test byte ptr [rdi], 0x84 ; ret
0x00000000004945ec : sub al, 0xe ; cli ; call rdx
0x0000000000494c9d : sub al, 0xfa ; jmp rax
0x00000000004b0d74 : sub al, 3 ; cli ; jmp qword ptr [rdx]
0x0000000000418860 : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004129a5 : sub al, byte ptr [rax] ; add byte ptr [rdx + rax - 0xd], dh ; ret
0x00000000004187f6 : sub al, byte ptr [rax] ; add dword ptr [rip + 0x2a3515], 1 ; ret
0x0000000000416340 : sub al, byte ptr [rax] ; jne 0x416358 ; jmp 0x416372
0x0000000000418765 : sub al, byte ptr [rax] ; ret
0x000000000042455a : sub al, byte ptr [rdx] ; add bh, dh ; ret 0
0x00000000004248a2 : sub al, byte ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x000000000042c2a5 : sub al, ch ; std ; xlatb ; ret
0x0000000000493f91 : sub bh, cl ; jmp rax
0x0000000000494e69 : sub bh, dl ; call rax
0x0000000000494ea9 : sub bh, dl ; inc eax ; sub edx, edi ; jmp qword ptr [rax]
0x0000000000494de9 : sub bh, dl ; jmp rsp
0x00000000004636fb : sub bl, cl ; in eax, 0xdf ; loopne 0x463690 ; ret
0x000000000047732c : sub byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000047732b : sub byte ptr [rax + 0x39], r9b ; ret 0x870f
0x00000000004839e3 : sub byte ptr [rax + 1], cl ; ret 0x1474
0x00000000004b0444 : sub byte ptr [rax + rax], cl ; call 0x124afe0c
0x0000000000422994 : sub byte ptr [rax - 0x77], cl ; out dx, eax ; call rax
0x000000000048c29c : sub byte ptr [rax - 0x77], cl ; ret
0x000000000046fae4 : sub byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000404a03 : sub byte ptr [rax - 0x7d], cl ; ret
0x000000000048437d : sub byte ptr [rax], al ; add byte ptr [rax], al ; jne 0x4843c5 ; leave ; ret
0x0000000000477fbe : sub byte ptr [rbp + rcx*4 + 0x15], cl ; pop rsp ; ret 2
0x0000000000448d14 : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004881b3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x00000000004881b2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x0000000000494324 : sub byte ptr [rbx - 0x532f0007], 0xf9 ; jmp qword ptr [rax]
0x000000000044c0ec : sub byte ptr [rcx], al ; ret
0x00000000004b0144 : sub byte ptr [rcx], cl ; add byte ptr [rax - 0x5b], ch ; stc ; jmp qword ptr [rcx]
0x00000000004a3af8 : sub byte ptr [rdi - 0x507f0004], 0xfc ; jmp qword ptr [rax]
0x000000000045d53c : sub byte ptr [rdi], 0xfa ; dec dword ptr [rax + 0x29] ; ret
0x00000000004217b6 : sub byte ptr [rdi], cl ; test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000495058 : sub byte ptr [rdx - 0x542f0006], 0xfa ; jmp qword ptr [rax]
0x00000000004246ba : sub byte ptr [rdx], al ; add bh, dh ; ret 0
0x00000000004246fb : sub byte ptr [rdx], al ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x00000000004afe44 : sub byte ptr [rsi], al ; add al, bl ; xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004b2e44 : sub byte ptr [rsi], dh ; add byte ptr [rax + 0xb], bh ; cld ; jmp qword ptr [rax]
0x0000000000468146 : sub cl, bpl ; ret 0xffe8
0x000000000040eb4d : sub cl, byte ptr [rax - 0x77] ; ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x0000000000468147 : sub cl, ch ; ret 0xffe8
0x000000000045e1f4 : sub dh, al ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000496524 : sub dh, byte ptr [rdx - 5] ; jmp rdx
0x00000000004ac1e9 : sub dh, dh ; jmp qword ptr [rax]
0x00000000004b45e8 : sub dl, ch ; cld ; jmp qword ptr [rcx]
0x000000000048018a : sub dl, dh ; call r11
0x00000000004ae1b1 : sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x000000000041f87a : sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042457c : sub dword ptr [rax], eax ; add dh, byte ptr [rax + rcx - 9] ; ret 0
0x000000000041f8da : sub dword ptr [rax], eax ; ret
0x000000000042dfc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42dfdd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e117 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e12d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e267 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e27d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e3b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e3cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e507 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e51d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e657 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e66d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e7a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e7bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042e8f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42e90d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ea47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ea5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042eb97 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ebad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ece7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ecfd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ee37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ee4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042ef87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42ef9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f0d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f0ed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042f227 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42f23d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430997 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4309ad ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ae7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430afd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430c37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430c4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430d87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430d9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430ed7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x430eed ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431027 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43103d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431177 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43118d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004312c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4312dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431417 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43142d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431567 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43157d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004316b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4316cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431807 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43181d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431957 : sub dword ptr [rdi + 0x10], ebx ; jb 0x43196d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431aa7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431abd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000431bf7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x431c0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042df23 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042df1f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042dfcd : sub dword ptr [rdi], esp ; jmp r9
0x000000000042459b : sub dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000042d6c6 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000042c037 : sub eax, -1 ; jne 0x42c048 ; vzeroupper ; ret
0x0000000000422f0a : sub eax, 0x10 ; ret
0x0000000000494c91 : sub eax, 0x2d60fffa ; cli ; jmp rax
0x00000000004695f4 : sub eax, 0x83000000 ; ret
0x00000000004669c5 : sub eax, 0x83000000 ; ret 0x8b01
0x0000000000466e55 : sub eax, 0xf410004 ; xchg eax, esp ; ret
0x0000000000424602 : sub eax, 0xf480002 ; ret 0x66c3
0x0000000000458824 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000446ac4 : sub eax, 1 ; ret
0x0000000000481ba6 : sub eax, dword ptr [0] ; ret
0x000000000040383d : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000400b0a : sub eax, dword ptr [rax] ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000403b90 : sub eax, dword ptr [rax] ; jne 0x403ba8 ; jmp 0x403bc2
0x00000000004004cc : sub eax, dword ptr [rax] ; nop ; ret
0x0000000000401b9f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045e196 : sub eax, dword ptr [rcx + 0xf] ; mov dh, 0x47 ; or al, 0x83 ; ret
0x000000000041911e : sub eax, dword ptr [rdi + 0x18] ; ret
0x00000000004487ea : sub eax, dword ptr [rdx + rcx*4] ; je 0x4487d6 ; ret
0x0000000000424762 : sub eax, dword ptr [rdx] ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000418433 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000446c2d : sub eax, eax ; cmp eax, ecx ; jle 0x446c71 ; movsxd rax, ecx ; ret
0x0000000000480ff4 : sub eax, eax ; ret
0x000000000042c083 : sub eax, ecx ; je 0x42c099 ; sbb eax, eax ; or eax, 1 ; ret
0x0000000000417b09 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000484670 : sub eax, ecx ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000425d2c : sub eax, ecx ; ret
0x0000000000440bd9 : sub eax, edi ; ret
0x000000000047461e : sub eax, edi ; shr rax, 2 ; ret
0x0000000000484753 : sub eax, edx ; mov dword ptr [rdx], eax ; mov eax, 2 ; ret
0x000000000041845b : sub eax, edx ; ret
0x0000000000474a10 : sub eax, edx ; shr rax, 2 ; vzeroupper ; ret
0x000000000042c04c : sub eax, edx ; vzeroupper ; ret
0x0000000000446c8d : sub eax, esi ; ret
0x0000000000480ff3 : sub eax, r8d ; ret
0x00000000004a7c5e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x0000000000413e50 : sub ebp, eax ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000412a26 : sub ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004a66f5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x000000000044cf58 : sub ecx, dword ptr [rax - 0x75] ; push rax ; or dh, dh ; ret 0x8902
0x0000000000473ba4 : sub ecx, dword ptr [rcx + rcx*4 - 0x40] ; vzeroupper ; ret
0x0000000000493f8d : sub ecx, edi ; inc eax ; sub bh, cl ; jmp rax
0x0000000000494d21 : sub edi, edx ; jmp qword ptr [rdx]
0x0000000000494ea1 : sub edi, edx ; jmp rax
0x0000000000494e9d : sub edi, edx ; push qword ptr [rax + 0x2b] ; cli ; jmp rax
0x0000000000494de5 : sub edi, edx ; push qword ptr [rdx + rbp - 6] ; jmp rsp
0x0000000000497409 : sub edi, esp ; jmp rax
0x0000000000497405 : sub edi, esp ; push qword ptr [rax] ; sub edi, esp ; jmp rax
0x0000000000418460 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000418455 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000042b4d4 : sub edx, eax ; jbe 0x42b517 ; add rax, rdi ; ret
0x000000000042b4e4 : sub edx, eax ; jbe 0x42b519 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000042b4f4 : sub edx, eax ; jbe 0x42b519 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000042b504 : sub edx, eax ; jbe 0x42b519 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000494e31 : sub edx, edi ; call qword ptr [rax]
0x0000000000494ead : sub edx, edi ; jmp qword ptr [rax]
0x0000000000494e2d : sub edx, edi ; ljmp ptr [rdx + 0x29] ; cli ; call qword ptr [rax]
0x0000000000423901 : sub edx, esi ; add dword ptr [rax], eax ; cmovne rax, rdx ; ret
0x00000000004133ff : sub edx, esi ; mov qword ptr [rsp], rcx ; mov rdi, rbx ; call rax
0x00000000004157f4 : sub edx, esi ; sar rdx, 2 ; call 0x411a58
0x00000000004ac2a9 : sub esi, esi ; call qword ptr [rax]
0x00000000004ac2bd : sub esi, esi ; call qword ptr [rdx]
0x00000000004ac2d1 : sub esi, esi ; jmp qword ptr [rax]
0x000000000048a8b3 : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fba6 : sub esp, 0x80 ; call 0x44be58
0x000000000040fbb1 : sub esp, 0x80 ; call 0x44be88
0x0000000000492571 : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004238d1 : sub esp, dword ptr [rdi] ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x0000000000417b08 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000422f09 : sub rax, 0x10 ; ret
0x0000000000446ac3 : sub rax, 1 ; ret
0x0000000000481ba5 : sub rax, qword ptr [0] ; ret
0x000000000041911d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000481ba4 : sub rax, qword ptr fs:[0] ; ret
0x0000000000485362 : sub rax, r8 ; ret
0x0000000000440bd8 : sub rax, rdi ; ret
0x000000000047461d : sub rax, rdi ; shr rax, 2 ; ret
0x0000000000446b93 : sub rax, rdx ; ret
0x0000000000440c2f : sub rax, rdx ; vzeroupper ; ret
0x0000000000446c8c : sub rax, rsi ; ret
0x000000000042b4d3 : sub rdx, rax ; jbe 0x42b518 ; add rax, rdi ; ret
0x00000000004157f3 : sub rdx, rsi ; sar rdx, 2 ; call 0x411a59
0x000000000048a8b2 : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046fba5 : sub rsp, 0x80 ; call 0x44be59
0x000000000040fbb0 : sub rsp, 0x80 ; call 0x44be89
0x0000000000492570 : sub rsp, 8 ; add rsp, 8 ; ret
0x000000000044be97 : syscall ; pop rdx ; pop rsi ; ret
0x0000000000474ec5 : syscall ; ret
0x0000000000417374 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004755b5 : test al, 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000048b043 : test al, 0 ; add byte ptr [rax], al ; ret
0x000000000046c489 : test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x000000000044ad2e : test al, 0x45 ; mov esp, esi ; call r15
0x00000000004a6fb7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004abd68 : test al, 0x99 ; cmc ; call rax
0x00000000004abcc4 : test al, 4 ; add byte ptr [rax], al ; js 0x4abc64 ; cmc ; call qword ptr [rdx]
0x000000000047e875 : test al, al ; cmove rcx, rax ; mov rax, rcx ; ret
0x0000000000425fea : test al, al ; jne 0x425fd8 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000478023 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000472c5c : test bh, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000419a38 : test bl, al ; add dword ptr [rax], eax ; add byte ptr [rax + 1], cl ; ret
0x000000000041005f : test byte ptr [rax + rax - 0x76b80000], ch ; ret
0x0000000000458f11 : test byte ptr [rax - 0x76b80000], ch ; ret 0x2948
0x000000000046ac59 : test byte ptr [rax - 0x7c000019], ah ; ret
0x0000000000400bbc : test byte ptr [rax], 0 ; mov eax, 0 ; leave ; ret
0x000000000040ea6a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x0000000000419dfa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000048596a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rbx
0x0000000000444e0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000044424a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000041878a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000412d0a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; movzx eax, byte ptr [rdx] ; ret
0x00000000004118ca : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000041874a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000041768a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000444c4a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000004b3cd5 : test byte ptr [rax], al ; add byte ptr [rdx - 0x38], dh ; hlt ; jmp qword ptr [rcx]
0x000000000044f082 : test byte ptr [rbp + rcx*4 + 0x3c], cl ; ret
0x000000000046ab5c : test byte ptr [rbp - 0x7c000018], bl ; ret
0x000000000048c14b : test byte ptr [rcx + rax - 0x20], cl ; jmp rax
0x000000000048dce2 : test byte ptr [rcx + rcx*4 - 0x19], 0x41 ; call rdi
0x00000000004af9a0 : test byte ptr [rcx], al ; add byte ptr [rbx + rax*4], cl ; stc ; call qword ptr [rdx]
0x00000000004239b3 : test byte ptr [rcx], ch ; add bh, dh ; ret 0
0x0000000000456474 : test byte ptr [rdi + 0x48000001], bl ; mov edx, eax ; jmp 0x456437
0x000000000044b7c4 : test byte ptr [rdi - 0x7d000000], bl ; ret
0x0000000000424136 : test byte ptr [rdi], 0x84 ; ret
0x000000000044a30f : test byte ptr [rdi], 0x94 ; ret 0xc221
0x0000000000449e26 : test byte ptr [rdi], 0x94 ; ret 0xca21
0x0000000000472fe4 : test byte ptr [rdi], bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000472ffc : test byte ptr [rdi], dl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000456879 : test byte ptr [rdx + 0x48fffffd], bl ; mov edx, eax ; jmp 0x45683c
0x000000000041fe7e : test byte ptr [rdx], ah ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000472c44 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042197e : test byte ptr [rdx], al ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x0000000000421e7e : test byte ptr [rdx], dl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; jmp qword ptr [rax]
0x00000000004696e4 : test byte ptr [rip - 0x7c000003], dl ; ret
0x000000000045f0f4 : test byte ptr [rip - 0x7c000011], al ; ret
0x000000000047383d : test byte ptr [rsi + 0x48000000], bl ; bsf eax, edx ; ret
0x0000000000453271 : test byte ptr [rsi - 0x8fffffc], cl ; ret 0
0x0000000000440abd : test byte ptr [rsi], bh ; add byte ptr [rax], al ; bsf rax, rdx ; ret
0x00000000004b0f3c : test byte ptr [rsi], dl ; cli ; call rcx
0x00000000004afa31 : test cl, bh ; call qword ptr [rbx]
0x00000000004afa09 : test cl, bh ; call qword ptr [rdx]
0x0000000000489f3a : test cl, bl ; add eax, dword ptr [rax] ; add byte ptr [rax + 1], cl ; ret
0x000000000044674f : test cl, cl ; jne 0x446744 ; ret
0x00000000004467ff : test cl, cl ; jne 0x4467f4 ; ret
0x0000000000446abf : test cl, cl ; jne 0x446ab8 ; sub rax, 1 ; ret
0x0000000000450c05 : test dh, dh ; mov edx, 0xffffffff ; cmovs eax, edx ; ret
0x0000000000444c94 : test dl, 0x40 ; jne 0x444c59 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000444cc2 : test dl, 4 ; jne 0x444c59 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040dae6 : test dl, dl ; jne 0x40dac8 ; ret
0x000000000044696f : test dl, dl ; jne 0x446968 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000480f67 : test dl, dl ; jne 0x480f43 ; movsx eax, cl ; neg eax ; ret
0x0000000000491c33 : test dword ptr [rax + 0xf000008], ecx ; xchg eax, ebx ; ret 0x3d83
0x0000000000472c5d : test dword ptr [rax], 0x83480000 ; ret 0xe901
0x0000000000468bc6 : test dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004021b1 : test dword ptr [rax], eax ; add rax, r13 ; jmp rax
0x000000000044d611 : test dword ptr [rax], eax ; add rax, rbp ; jmp rax
0x000000000045eb69 : test dword ptr [rax], ecx ; idiv edi ; call qword ptr [rax]
0x00000000004692d6 : test dword ptr [rax], esi ; idiv edi ; dec dword ptr [rax - 0x39] ; ret 0xac20
0x00000000004021b0 : test dword ptr [rax], r8d ; add rax, r13 ; jmp rax
0x000000000044d610 : test dword ptr [rax], r8d ; add rax, rbp ; jmp rax
0x000000000042b458 : test dword ptr [rbx + 0x31000000], esp ; rol bl, 0x83 ; ret 0x6620
0x0000000000449b39 : test dword ptr [rbx + 0x48000000], ebp ; add esp, 0x78 ; ret
0x000000000042d1c7 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d616 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042c298 : test dword ptr [rbx - 0x3a000003], esp ; std ; xlatb ; ret 0xe883
0x000000000041fcb8 : test dword ptr [rbx], edx ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000047576b : test dword ptr [rcx + 0x48000000], edi ; add esp, 0x78 ; ret
0x000000000042d19d : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042d0ad : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042cfbd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000041d0b2 : test dword ptr [rcx + rcx*4 + 0x54], 0x93e80824 ; ret 0xffff
0x000000000048e0c4 : test dword ptr [rdi + rdi*8 - 1], esi ; dec dword ptr [rax - 0x7d] ; ret
0x000000000041d04c : test dword ptr [rdi], eax ; add eax, 0x39480000 ; ret 0xf275
0x000000000042cee2 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000473623 : test dword ptr [rip - 0x76ffffff], edi ; ret 0x8948
0x00000000004497a6 : test dword ptr [rsi + 0x48000000], ebp ; add esp, 0x68 ; ret
0x00000000004464d2 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000045fa31 : test dword ptr [rsi - 0x16000007], esi ; ret
0x000000000040fbfd : test dword ptr [rsi - 0x77000000], esp ; ret 0xe281
0x000000000042d3e8 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x00000000004a8ca0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000433066 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000463753 : test eax, 0x8900020e ; ret
0x000000000046c828 : test eax, 0x8b480024 ; add al, 0xf8 ; jmp rax
0x0000000000495055 : test eax, 0xaa80fffa ; cli ; call rax
0x000000000044bd3b : test eax, eax ; cmove eax, edx ; ret
0x000000000040040c : test eax, eax ; je 0x400416 ; call rax
0x0000000000422e81 : test eax, eax ; je 0x422e98 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000042b1a8 : test eax, eax ; je 0x42b1b4 ; xchg eax, edx ; sub eax, edx ; ret
0x000000000044a548 : test eax, eax ; je 0x44a553 ; ret
0x000000000044d4a6 : test eax, eax ; je 0x44d4b5 ; ret
0x0000000000459224 : test eax, eax ; je 0x45922e ; call rax
0x000000000045a629 : test eax, eax ; je 0x45a633 ; call rax
0x0000000000485120 : test eax, eax ; je 0x485138 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048f588 : test eax, eax ; je 0x48f595 ; ret
0x000000000048f698 : test eax, eax ; je 0x48f6a5 ; ret
0x0000000000490e31 : test eax, eax ; je 0x490e40 ; call rax
0x000000000041747c : test eax, eax ; jne 0x417475 ; ret
0x0000000000418414 : test eax, eax ; jne 0x41840d ; ret
0x000000000042b485 : test eax, eax ; jne 0x42b4e6 ; xor eax, eax ; ret
0x000000000042b901 : test eax, eax ; jne 0x42b929 ; xor eax, eax ; vzeroupper ; ret
0x000000000044be70 : test eax, eax ; jne 0x44be6b ; pop rdx ; pop r10 ; ret
0x000000000048f5c7 : test eax, eax ; jne 0x48f5d5 ; ret
0x000000000048f5e2 : test eax, eax ; jne 0x48f5f5 ; ret
0x000000000048f812 : test eax, eax ; jne 0x48f825 ; ret
0x000000000047bd30 : test eax, eax ; js 0x47bd47 ; pop rbx ; ret
0x0000000000469cc5 : test eax, ebp ; idiv bh ; jmp qword ptr [rax]
0x000000000047061a : test eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000044a7e9 : test ebp, ebp ; jne 0x44a808 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b354 : test ebp, ebp ; jne 0x44b380 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b387 : test ebp, ebp ; jne 0x44b3d9 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b3b3 : test ebp, ebp ; jne 0x44b439 ; mov rdi, qword ptr [rbp] ; call r12
0x0000000000490301 : test ebp, ebp ; jne 0x4902f0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490ebb : test ebp, ebp ; jne 0x490ea8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b5829 : test ebp, edi ; call qword ptr [rbx]
0x000000000041afb8 : test ebx, ebp ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret 0x8348
0x000000000042b3c0 : test ebx, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x0000000000421cc0 : test ebx, edi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004217b8 : test ebx, esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000454a09 : test ecx, eax ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000478078 : test ecx, eax ; add dword ptr [rax], eax ; add byte ptr [rcx], dh ; fisttp dword ptr [rax - 0x7d] ; ret
0x0000000000444c82 : test ecx, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004746f9 : test ecx, ecx ; jne 0x4746b8 ; mov rax, rdx ; ret
0x00000000004afa81 : test ecx, edi ; call qword ptr [rbx]
0x000000000044a80f : test edi, edi ; jne 0x44a859 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044a837 : test edi, edi ; jne 0x44a879 ; mov rdi, qword ptr [rbp] ; call r12
0x000000000044b43f : test edi, edi ; jne 0x44b4aa ; mov rdi, qword ptr [r13] ; call r12
0x000000000044b46f : test edi, edi ; jne 0x44b4db ; mov rdi, qword ptr [r13] ; call r12
0x000000000047f4aa : test edi, edi ; jne 0x47f485 ; ret
0x000000000048481d : test edi, edi ; mov byte ptr [rsi], al ; jne 0x484811 ; mov rax, rsi ; ret
0x0000000000440a72 : test edx, edx ; je 0x440a80 ; bsf eax, edx ; ret
0x0000000000440a72 : test edx, edx ; je 0x440a81 ; bsf eax, edx ; ret
0x0000000000440b1b : test edx, edx ; je 0x440b37 ; bsf rax, rdx ; ret
0x0000000000440b1b : test edx, edx ; je 0x440b38 ; bsf rax, rdx ; ret
0x000000000044c77a : test edx, edx ; je 0x44c791 ; lea rdi, qword ptr [rcx + rax + 0x20] ; jmp rdx
0x00000000004738aa : test edx, edx ; je 0x4738d7 ; bsf rax, rdx ; ret
0x00000000004738aa : test edx, edx ; je 0x4738d8 ; bsf rax, rdx ; ret
0x00000000004148c3 : test edx, edx ; jne 0x4148d5 ; ret
0x000000000041655f : test edx, edx ; jne 0x416555 ; ret
0x0000000000470a9f : test edx, edx ; jne 0x470a95 ; ret
0x000000000047445a : test edx, edx ; jne 0x474455 ; ret
0x0000000000444c75 : test esi, edx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000459128 : test esi, esi ; je 0x459132 ; call rsi
0x00000000004737a1 : test esi, esi ; jne 0x4737b0 ; xor rax, rax ; ret
0x0000000000474461 : test esi, esi ; jne 0x474470 ; xor rax, rax ; ret
0x000000000045e8f4 : test esp, eax ; idiv bh ; jmp qword ptr [rax]
0x0000000000444c8f : test esp, ebx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000042b1a7 : test r8d, r8d ; je 0x42b1b5 ; xchg eax, edx ; sub eax, edx ; ret
0x00000000004746f8 : test r9d, r9d ; jne 0x4746b9 ; mov rax, rdx ; ret
0x000000000040040b : test rax, rax ; je 0x400417 ; call rax
0x0000000000422e80 : test rax, rax ; je 0x422e99 ; lea rax, qword ptr [rdx - 0x10] ; ret
0x000000000044a547 : test rax, rax ; je 0x44a554 ; ret
0x0000000000459223 : test rax, rax ; je 0x45922f ; call rax
0x000000000045a628 : test rax, rax ; je 0x45a634 ; call rax
0x000000000048511f : test rax, rax ; je 0x485139 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490e30 : test rax, rax ; je 0x490e41 ; call rax
0x000000000041747b : test rax, rax ; jne 0x417476 ; ret
0x0000000000418413 : test rax, rax ; jne 0x41840e ; ret
0x000000000044a7e8 : test rbp, rbp ; jne 0x44a809 ; mov rdi, qword ptr [rbx] ; call r12
0x000000000044b353 : test rbp, rbp ; jne 0x44b381 ; mov rdi, qword ptr [rbx] ; call r12
0x0000000000490300 : test rbp, rbp ; jne 0x4902f1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000490eba : test rbp, rbp ; jne 0x490ea9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047f4a9 : test rdi, rdi ; jne 0x47f486 ; ret
0x0000000000440b1a : test rdx, rdx ; je 0x440b38 ; bsf rax, rdx ; ret
0x0000000000440b1a : test rdx, rdx ; je 0x440b39 ; bsf rax, rdx ; ret
0x00000000004738a9 : test rdx, rdx ; je 0x4738d8 ; bsf rax, rdx ; ret
0x00000000004738a9 : test rdx, rdx ; je 0x4738d9 ; bsf rax, rdx ; ret
0x00000000004148c2 : test rdx, rdx ; jne 0x4148d6 ; ret
0x000000000041655e : test rdx, rdx ; jne 0x416556 ; ret
0x0000000000470a9e : test rdx, rdx ; jne 0x470a96 ; ret
0x0000000000459127 : test rsi, rsi ; je 0x459133 ; call rsi
0x00000000004737a0 : test rsi, rsi ; jne 0x4737b1 ; xor rax, rax ; ret
0x0000000000474460 : test rsi, rsi ; jne 0x474471 ; xor rax, rax ; ret
0x0000000000419137 : vcvtsi2ss xmm8, xmm15, dword ptr [rax] ; ret
0x0000000000415613 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000043862a : vmovdqu xmmword ptr [r9 - 0x10], xmm1 ; ret
0x00000000004473dc : vmovdqu xmmword ptr [rdi + rdx - 0x10], xmm1 ; ret
0x0000000000446da5 : vmovdqu xmmword ptr [rdi], xmm0 ; vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447f61 : vmovdqu xmmword ptr [rdi], xmm0 ; vzeroupper ; ret
0x0000000000446da9 : vmovdqu xmmword ptr [rsi - 0x10], xmm0 ; ret
0x0000000000447568 : vmovdqu ymmword ptr [r11], ymm4 ; vzeroupper ; ret
0x000000000044760f : vmovdqu ymmword ptr [r11], ymm8 ; vzeroupper ; ret
0x0000000000438616 : vmovdqu ymmword ptr [r9 - 0x20], ymm1 ; ret
0x00000000004385fd : vmovdqu ymmword ptr [r9 - 0x20], ymm3 ; ret
0x0000000000447345 : vmovdqu ymmword ptr [rdi + rdx - 0x20], ymm1 ; vzeroupper ; ret
0x0000000000447ecb : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm0 ; vzeroupper ; ret
0x00000000004474b3 : vmovdqu ymmword ptr [rdi + rdx - 0x40], ymm3 ; vzeroupper ; ret
0x0000000000447485 : vmovdqu ymmword ptr [rdi + rdx - 0x80], ymm7 ; vzeroupper ; ret
0x0000000000447e52 : vmovdqu ymmword ptr [rdi], ymm0 ; vzeroupper ; ret
0x0000000000446d9b : vmovdqu ymmword ptr [rdi], ymm2 ; vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000446d9f : vmovdqu ymmword ptr [rsi - 0x20], ymm2 ; ret
0x0000000000447a22 : vmovdqu64 zmmword ptr [r11], zmm4 ; vzeroupper ; ret
0x0000000000447ae8 : vmovdqu64 zmmword ptr [r11], zmm8 ; vzeroupper ; ret
0x0000000000447fdd : vmovdqu64 zmmword ptr [rdi], zmm0 ; vzeroupper ; ret
0x0000000000446db4 : vmovq qword ptr [rdi], xmm0 ; vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000446db8 : vmovq qword ptr [rsi - 8], xmm0 ; ret
0x0000000000438933 : vmovups zmmword ptr [r9 + 0x1c0], zmm15 ; ret
0x00000000004387cc : vmovups zmmword ptr [r9 - 0x40], zmm15 ; ret
0x00000000004385ce : vmovups zmmword ptr [r9 - 0x40], zmm3 ; ret
0x0000000000438592 : vmovups zmmword ptr [r9 - 0x40], zmm7 ; ret
0x0000000000438a95 : vmovups zmmword ptr [rdi - 0x200], zmm15 ; ret
0x0000000000446f58 : vmovups zmmword ptr [rsi + 0x1c0], zmm2 ; ret
0x0000000000446ebb : vmovups zmmword ptr [rsi + 0xc0], zmm2 ; ret
0x0000000000446d5a : vmovups zmmword ptr [rsi - 0x40], zmm2 ; ret
0x000000000043ec71 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042b7a8 : vzeroupper ; ret
0x000000000042b980 : vzeroupper ; xor eax, eax ; ret
0x00000000004942f5 : wait ; stc ; call qword ptr [rax]
0x000000000049416c : wait ; xchg eax, edi ; stc ; jmp qword ptr [rax]
0x000000000041f8e2 : xchg ah, al ; sub dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000042a7f3 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043df1f : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8e3 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a703 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004601a2 : xchg al, bl ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000043fb6c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f38c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000043f77c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ef9c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047d8ac : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004481e2 : xchg byte ptr [rax + 1], cl ; int1 ; jmp rcx
0x000000000042b14b : xchg byte ptr [rax + rax - 0x7cb80000], al ; ret 0xeb10
0x000000000043ea7f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e25f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000043da3f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000044f0e8 : xchg byte ptr [rax - 0x75], cl ; ret
0x000000000042aca3 : xchg byte ptr [rax - 0x7cb80000], ch ; ret 0xeb10
0x000000000043f13b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043e59f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a433 : xchg byte ptr [rbp + rcx - 0x7cb80000], bl ; ret 0xeb10
0x000000000043dd7f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043d55f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x000000000043e73f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000042ae83 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042a613 : xchg byte ptr [rbx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000048ca4c : xchg byte ptr [rcx + rax - 0x10], cl ; jmp rax
0x000000000042b063 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043f62c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ee4c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043ff5c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004945a0 : xchg byte ptr [rdi], cl ; cli ; call qword ptr [rsi]
0x00000000004542c3 : xchg byte ptr [rdi], dl ; or eax, 0xea810000 ; ret 0
0x000000000042af73 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043d89f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a8b5 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a9a5 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a7c5 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041adb5 : xchg byte ptr [rsi - 0x9fffffd], dh ; ret 0xf08
0x000000000043d9d5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e6d5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e1f5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043f52d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004553b5 : xchg byte ptr [rsi], bl ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043fe5d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000494a98 : xchg byte ptr [rsi], dh ; cli ; call qword ptr [rsi]
0x000000000042a523 : xchg byte ptr [rsp + rcx - 0x7cb80000], ch ; ret 0xeb10
0x00000000004826aa : xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x0000000000491026 : xchg cl, dh ; clc ; push rbx ; ret
0x000000000043ea15 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043dd15 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000043d835 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043e535 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000043f67d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000043ee9d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042a6d5 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a4f5 : xchg dl, bl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a5e5 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042a405 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000046f1b9 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x000000000046e50f : xchg dword ptr [rax - 0x77000000], ecx ; ret 0x349
0x0000000000402cd3 : xchg dword ptr [rax - 0x7d], ecx ; ret
0x000000000047b746 : xchg dword ptr [rax], eax ; add eax, dword ptr [rax] ; add bl, dh ; ret
0x000000000044f1d4 : xchg dword ptr [rbp + rcx*4 + 0x34], ecx ; ret
0x00000000004620ac : xchg dword ptr [rbx - 0x76fffff4], ebp ; ret 0x349
0x00000000004a696c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048b0fa : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x000000000044be6e : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x44be6d ; pop rdx ; pop r10 ; ret
0x000000000046f3a4 : xchg dword ptr [rdi], esi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x8b08
0x0000000000469a1a : xchg dword ptr [rdx + rbx], esp ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000462c24 : xchg dword ptr [rdx - 0x77000000], edx ; ret 0x349
0x0000000000478d90 : xchg dword ptr [rip - 0x76fffffd], edx ; ret 0xe8c0
0x000000000046c6cc : xchg dword ptr [rsi - 0x76ffffe1], ecx ; ret 0x349
0x00000000004a6b0b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004634c7 : xchg eax, ebp ; add al, 4 ; add byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret 0x290f
0x000000000045868b : xchg eax, ebp ; push 0x4cffffff ; mov edi, esi ; call rdx
0x000000000044fdff : xchg eax, ebp ; ret
0x000000000048ace0 : xchg eax, ebp ; ret 0x145
0x0000000000477dca : xchg eax, ebp ; ret 0x2041
0x0000000000477e8a : xchg eax, ebp ; ret 0x2044
0x0000000000459f07 : xchg eax, ebp ; ret 0x25
0x0000000000449f1c : xchg eax, ebp ; ret 0x3948
0x000000000041de0b : xchg eax, ebp ; ret 0x8348
0x0000000000479a50 : xchg eax, ebp ; ret 0xc283
0x0000000000420fcd : xchg eax, ebp ; ret 0xd020
0x000000000040dec5 : xchg eax, ebp ; ret 0xd021
0x00000000004642aa : xchg eax, ebp ; ret 0xd120
0x000000000040ff22 : xchg eax, ebp ; ret 0xdaf7
0x000000000044d4e1 : xchg eax, ebp ; ret 0xe1eb
0x000000000048c85a : xchg eax, ebp ; ret 0xf45
0x00000000004188dd : xchg eax, ebp ; sal bh, 0xd8 ; ret
0x00000000004941a1 : xchg eax, ebp ; stc ; inc dword ptr [rax - 0x6a] ; stc ; jmp rax
0x000000000049411d : xchg eax, ebp ; stc ; jmp rsi
0x0000000000494121 : xchg eax, ebp ; stc ; push qword ptr [rsi - 0x6a] ; stc ; call qword ptr [rsi]
0x0000000000411302 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000046ba87 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8148
0x000000000042c330 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000400b89 : xchg eax, ebx ; cli ; add byte ptr [rax], al ; nop ; pop rbp ; ret
0x00000000004abcc9 : xchg eax, ebx ; cmc ; call qword ptr [rdx]
0x00000000004abcdd : xchg eax, ebx ; cmc ; call rsp
0x000000000044410c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000042dad2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000045b268 : xchg eax, ebx ; ret 0x3948
0x00000000004120fc : xchg eax, ebx ; ret 0x3949
0x0000000000420720 : xchg eax, ebx ; ret 0x3d83
0x0000000000471345 : xchg eax, ebx ; ret 0x840
0x000000000045bd4d : xchg eax, ebx ; ret 0x854d
0x000000000041d0b9 : xchg eax, ebx ; ret 0xffff
0x00000000004940cd : xchg eax, ebx ; stc ; call rcx
0x00000000004b2145 : xchg eax, ebx ; sti ; jmp qword ptr [rax]
0x00000000004826a9 : xchg eax, ebx ; xchg ch, bh ; inc dword ptr [rbp - 0x76b08a40] ; ret
0x000000000043eb21 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000048618b : xchg eax, ecx ; pop rsi ; cld ; call qword ptr [rax + 0x66c205f6]
0x000000000043d24f : xchg eax, ecx ; sub eax, edx ; ret
0x00000000004940e4 : xchg eax, ecx ; xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x0000000000410022 : xchg eax, ecx ; xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000414934 : xchg eax, edi ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004b4f61 : xchg eax, edi ; add byte ptr [rax], al ; sbb al, 0x35 ; std ; jmp qword ptr [rdx]
0x000000000040d261 : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x0000000000495015 : xchg eax, edi ; cli ; inc dword ptr [rax - 0x67] ; cli ; call qword ptr [rax]
0x0000000000424855 : xchg eax, edi ; out 0, al ; add byte ptr [rax + 0xf], cl ; ret 0xc3f3
0x000000000041ef4b : xchg eax, edi ; ret 0x394c
0x000000000041f431 : xchg eax, edi ; ret 0xfae9
0x000000000041fa19 : xchg eax, edi ; ret 0xfbe9
0x000000000044ba9b : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004940e9 : xchg eax, edi ; stc ; call rcx
0x00000000004940ed : xchg eax, edi ; stc ; dec dword ptr [rsi - 0x68] ; stc ; jmp rsi
0x00000000004942f1 : xchg eax, edi ; stc ; inc eax ; wait ; stc ; call qword ptr [rax]
0x000000000049416d : xchg eax, edi ; stc ; jmp qword ptr [rax]
0x00000000004afe49 : xchg eax, edi ; stc ; jmp qword ptr [rcx]
0x00000000004941ad : xchg eax, edi ; stc ; lcall ptr [rax - 0x4e] ; stc ; jmp qword ptr [rax]
0x00000000004a6fb8 : xchg eax, edi ; xchg eax, esp ; ret
0x000000000047b03f : xchg eax, edx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x39], cl ; ret 0xed75
0x00000000004a887d : xchg eax, edx ; jae 0x4a885a ; push rsi ; pop rdx ; je 0x4a884f ; ret 0xacfc
0x0000000000494808 : xchg eax, edx ; or dl, bh ; call qword ptr [rdx]
0x0000000000494800 : xchg eax, edx ; or edx, edi ; call qword ptr [rdx]
0x0000000000482cd6 : xchg eax, edx ; ret 0x2948
0x00000000004829ae : xchg eax, edx ; ret 0x294c
0x0000000000405bf8 : xchg eax, edx ; ret 0x8548
0x00000000004831b5 : xchg eax, edx ; ret 0x8949
0x000000000044ba9e : xchg eax, edx ; ret 0xd029
0x00000000004a696f : xchg eax, edx ; ret 0xf869
0x0000000000446c7d : xchg eax, edx ; ror byte ptr [rdi], 0x94 ; ret 0xc085
0x00000000004940c5 : xchg eax, edx ; stc ; call rcx
0x000000000042b1ac : xchg eax, edx ; sub eax, edx ; ret
0x0000000000494584 : xchg eax, esi ; adc bh, dl ; jmp qword ptr [rsi]
0x000000000042c630 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000434863 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004560d1 : xchg eax, esi ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000448274 : xchg eax, esi ; add rax, rsi ; jmp rax
0x00000000004af5e9 : xchg eax, esi ; clc ; call qword ptr [rax]
0x00000000004af5fd : xchg eax, esi ; clc ; jmp qword ptr [rsi]
0x0000000000494a7c : xchg eax, esi ; cmp edx, edi ; jmp qword ptr [rsi]
0x0000000000478a11 : xchg eax, esi ; jmp 0x47886e
0x000000000042c6ed : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042c64b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000448ed1 : xchg eax, esi ; ret 0xc085
0x00000000004a920c : xchg eax, esi ; ret 0xcd11
0x0000000000448f2f : xchg eax, esi ; ret 0xd284
0x000000000042c69c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000494125 : xchg eax, esi ; stc ; call qword ptr [rsi]
0x00000000004941a5 : xchg eax, esi ; stc ; jmp rax
0x00000000004940e5 : xchg eax, esi ; stc ; push qword ptr [rcx] ; xchg eax, edi ; stc ; call rcx
0x000000000046c8a7 : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx + 0x63], cl ; ret 0x8948
0x00000000004b17b9 : xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004b17a1 : xchg eax, esp ; cli ; call qword ptr [rdi]
0x0000000000460988 : xchg eax, esp ; pop rsi ; and eax, 0x48b4800 ; clc ; jmp rax
0x00000000004a941f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4a93b0 ; ret 0x48f
0x0000000000466702 : xchg eax, esp ; ret
0x0000000000450e9b : xchg eax, esp ; ret 0x1f0f
0x0000000000449feb : xchg eax, esp ; ret 0x2044
0x00000000004506a0 : xchg eax, esp ; ret 0x26
0x00000000004810fc : xchg eax, esp ; ret 0x3d
0x000000000041ca7e : xchg eax, esp ; ret 0x3de9
0x000000000046da5f : xchg eax, esp ; ret 0x7f3c
0x0000000000484d61 : xchg eax, esp ; ret 0x950f
0x0000000000402c24 : xchg eax, esp ; ret 0xb60f
0x0000000000446c80 : xchg eax, esp ; ret 0xc085
0x000000000044a311 : xchg eax, esp ; ret 0xc221
0x00000000004768e5 : xchg eax, esp ; ret 0xc283
0x0000000000449e28 : xchg eax, esp ; ret 0xca21
0x0000000000401203 : xchg eax, esp ; ret 0xd284
0x000000000044f926 : xchg eax, esp ; ret 0xd5e9
0x000000000041073d : xchg eax, esp ; ret 0xdaf7
0x000000000048c7fb : xchg eax, esp ; ret 0xf45
0x0000000000422eca : xchg eax, esp ; ror byte ptr [rdi], 0xb6 ; ror byte ptr [rax - 0x73], 0x44 ; ret 0xfff
0x0000000000494195 : xchg eax, esp ; stc ; call qword ptr [rax + 0x20fff994]
0x0000000000494199 : xchg eax, esp ; stc ; jmp qword ptr [rax]
0x00000000004940d5 : xchg eax, esp ; stc ; jmp rcx
0x00000000004ae1b0 : xchg eax, esp ; sub dword ptr [rax], eax ; add ah, cl ; sal esi, cl ; call qword ptr [rax]
0x000000000046c488 : xchg eax, esp ; test al, 0x24 ; add byte ptr [rax - 0x75], cl ; add al, 0xf8 ; jmp rax
0x00000000004b17cc : xchg eax, esp ; xchg eax, esp ; cli ; call qword ptr [rcx]
0x00000000004a4e0d : xchg ebp, edi ; jmp qword ptr [rbx]
0x00000000004a4e01 : xchg ebp, edi ; lcall ptr [rax + 0x74] ; std ; call qword ptr [rax]
0x000000000041ae84 : xchg edi, esp ; add al, byte ptr [rax] ; add dh, dh ; ret
0x00000000004a1ff9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042d999 : xlatb ; add r9, r11 ; jmp r9
0x00000000004759ef : xlatb ; ja 0x475a1c ; ret
0x0000000000446fe3 : xlatb ; jb 0x446fee ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000040d54d : xlatb ; jmp rdi
0x00000000004a79e3 : xlatb ; jo 0x4a7a5f ; mov ebp, 0xfb67d10d ; ret
0x00000000004848a2 : xlatb ; mov byte ptr [rsi], al ; jne 0x484888 ; mov rax, rsi ; ret
0x000000000042b2d4 : xlatb ; ret
0x00000000004a8e86 : xlatb ; ret 0x4e27
0x00000000004734a7 : xlatb ; ret 0x94c
0x000000000042b2bf : xlatb ; ret 0xc085
0x0000000000425de0 : xlatb ; ret 0xc148
0x000000000042bf44 : xlatb ; ret 0xe883
0x0000000000440a94 : xlatb ; ret 0xf66
0x000000000042c108 : xlatb ; ret 0xff2d
0x000000000042b6a1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000473655 : xlatb ; rol ch, cl ; std ; xlatb ; ret
0x000000000042b483 : xlatb ; rol dword ptr [rbp + 0x315775c0], -0x40 ; ret
0x000000000042b9c2 : xlatb ; rol dword ptr [rbp - 0x3a378a40], -3 ; xlatb ; ret 0xc085
0x0000000000440812 : xlatb ; rol dword ptr [rbp - 0x3a678a40], -3 ; xlatb ; ret 0xc085
0x0000000000444c36 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000425cc6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000425b86 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000425a46 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000425906 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004257c6 : xlatb ; sal bh, 1 ; ret 0xf800
0x0000000000425686 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000425546 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000425406 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004252c6 : xlatb ; sal bh, 1 ; ret 0xff80
0x0000000000425186 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000425046 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000424f06 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000424dc6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000424c86 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000424b46 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000444c32 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000473445 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000473456 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000497445 : xor ah, bh ; call rsp
0x0000000000494374 : xor ah, bl ; stc ; call qword ptr [rax]
0x000000000042483a : xor ah, byte ptr [rdi] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x00000000004a696a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x00000000004b1450 : xor al, 0x5c ; add byte ptr [rax], al ; jae 0x4b1458 ; call qword ptr [rdx]
0x0000000000495f7c : xor al, 0x69 ; sti ; call rax
0x0000000000495f78 : xor al, 0x69 ; sti ; push qword ptr [rcx + rbp*2] ; sti ; call rax
0x00000000004af92c : xor al, 0x7a ; stc ; call rsp
0x0000000000459f22 : xor al, 0x88 ; add rsi, r8 ; jmp rsi
0x000000000046effb : xor al, 0xbe ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x000000000048dd92 : xor al, 0xcb ; mov rsi, qword ptr [r14] ; call r12
0x00000000004a7b4a : xor al, 0xd8 ; ret
0x0000000000459125 : xor al, 0xf0 ; test rsi, rsi ; je 0x459135 ; call rsi
0x0000000000452c9e : xor al, 0xf6 ; ret
0x0000000000494a31 : xor al, 0xfa ; call qword ptr [rax + 0x20fffa3a]
0x0000000000494c69 : xor al, 0xfa ; call qword ptr [rax]
0x0000000000494bad : xor al, 0xfa ; call rsp
0x0000000000494ba9 : xor al, 0xfa ; ljmp ptr [rsi] ; xor al, 0xfa ; call rsp
0x0000000000476409 : xor al, 0xfd ; dec dword ptr [rax + 0x39] ; ret
0x000000000045fc0c : xor al, 1 ; jmp 0x45de66
0x000000000042b50c : xor bl, al ; nop ; xor eax, eax ; ret
0x0000000000495231 : xor bl, bh ; call rbx
0x000000000042b3dd : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000411562 : xor byte ptr [r8 + 1], r9b ; ret 0x8b49
0x000000000045b9c8 : xor byte ptr [rax + 0x39], cl ; ret 0x8d48
0x0000000000440241 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x00000000004406a2 : xor byte ptr [rax + 0xf], cl ; ret 0xf8c5
0x0000000000411563 : xor byte ptr [rax + 1], cl ; ret 0x8b49
0x00000000004b2c4c : xor byte ptr [rax + rax], dh ; push rax ; cld ; sti ; jmp qword ptr [rbx]
0x000000000044ad2a : xor byte ptr [rax - 0x75], cl ; jge 0x44ace0 ; mov r12d, r14d ; call r15
0x0000000000440dff : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004741df : xor byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x000000000048ac48 : xor byte ptr [rax - 0x77], cl ; ret 0x2148
0x0000000000471a82 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rbp + rax - 0xa] ; ret 0x7408
0x000000000044d2af : xor byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000402f08 : xor byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004118bb : xor byte ptr [rax], 1 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e979 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x000000000040e8b3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x000000000047442c : xor byte ptr [rax], al ; add byte ptr [rax], al ; cmovne rax, rdx ; ret
0x000000000040e99f : xor byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x20] ; call rdx
0x00000000004482c3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004b3f7c : xor byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; add byte ptr [rax], al ; add ah, bh ; ret 0xfffc
0x00000000004719ba : xor byte ptr [rax], al ; je 0x4719c5 ; ret
0x000000000048e1ae : xor byte ptr [rbp + 0x27], dh ; mov rax, qword ptr [rsi + 0x10] ; ret
0x0000000000447235 : xor byte ptr [rbp + 0xf], al ; adc dword ptr [rbx], eax ; ret
0x0000000000496558 : xor byte ptr [rbp - 5], 0xff ; jae 0x496561 ; call qword ptr [rdi]
0x0000000000494038 : xor byte ptr [rbp - 7], ah ; jmp qword ptr [rax]
0x0000000000466909 : xor byte ptr [rbx + 0x291c2454], cl ; ret 0xe683
0x0000000000414c46 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044f67a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000046c84e : xor byte ptr [rbx - 0x79f0f608], al ; ret
0x0000000000497408 : xor byte ptr [rbx], ch ; cld ; jmp rax
0x000000000048aa65 : xor byte ptr [rcx + 0x21], cl ; ror byte ptr [rax + 0x21], cl ; ret 0xc148
0x00000000004786a3 : xor byte ptr [rcx + 0x29], cl ; ret
0x0000000000494334 : xor byte ptr [rcx + rdi*8 - 0x6627f01], bl ; call rax
0x0000000000494290 : xor byte ptr [rcx - 0x4d0f0007], dh ; stc ; call rax
0x0000000000495054 : xor byte ptr [rcx - 0x557f0006], ch ; cli ; call rax
0x0000000000494014 : xor byte ptr [rcx - 7], bl ; jmp qword ptr [rax + 0x10fff95a]
0x0000000000493fa8 : xor byte ptr [rcx], 0xf9 ; jmp qword ptr [rax]
0x00000000004118bc : xor byte ptr [rcx], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x0000000000412ba7 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000410023 : xor byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000049425c : xor byte ptr [rdi - 0x46ef0007], dh ; stc ; jmp rax
0x00000000004940a4 : xor byte ptr [rdi - 0x6fdf0007], cl ; stc ; call qword ptr [rax]
0x0000000000494a50 : xor byte ptr [rdi], 0xfa ; call qword ptr [rax]
0x0000000000470b60 : xor byte ptr [rdi], cl ; ret 0x4389
0x00000000004941f0 : xor byte ptr [rdx - 0x4c0f0007], dh ; stc ; call rax
0x0000000000494320 : xor byte ptr [rdx - 0x547f0007], ch ; stc ; call rax
0x00000000004947a4 : xor byte ptr [rip + 0x4a0fffa], al ; cli ; call qword ptr [rax]
0x00000000004b066f : xor byte ptr [rsi + 0x380e4106], al ; add dword ptr [rdi], 3 ; ret 0xa01
0x000000000042c3df : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047340c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000042b3de : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004122ed : xor cl, byte ptr [rax - 0x77] ; ret 0x2948
0x000000000047dda3 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4810
0x000000000045b537 : xor cl, byte ptr [rax - 0x7d] ; ret 0x4901
0x000000000048d23e : xor cl, byte ptr [rax] ; jne 0x48d263 ; mov rax, qword ptr [rax] ; ret
0x0000000000405c20 : xor cl, ch ; ret
0x000000000045a389 : xor dh, dh ; ret 0x4002
0x0000000000494c7d : xor dl, bh ; jmp rax
0x000000000042389a : xor dl, byte ptr [rbx] ; add al, byte ptr [rax] ; cmovne rax, rdx ; ret
0x000000000048015e : xor dl, dh ; jmp r11
0x0000000000480270 : xor dl, dh ; ret
0x0000000000465edd : xor dword ptr [rax - 0x77], ecx ; ror dword ptr [rax - 0x77], 1 ; ret 0xe7e9
0x000000000044c27f : xor dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048d2ad : xor dword ptr [rax], ecx ; jne 0x48d2bc ; mov qword ptr [rax], rdx ; ret
0x000000000041bf99 : xor dword ptr [rbx - 0x76b7f020], eax ; ret 0x8948
0x0000000000423922 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0x66c3
0x00000000004245e1 : xor dword ptr [rdx], eax ; add byte ptr [rax + 0xf], cl ; ret 0xfc3
0x000000000046b85e : xor eax, 0x24b5bd ; jmp rax
0x0000000000494a61 : xor eax, 0x3550fffa ; cli ; jmp rax
0x00000000004477f3 : xor eax, 0x48000002 ; mov ecx, edx ; rep movsb byte ptr [rdi], byte ptr [rsi] ; ret
0x000000000044a83a : xor eax, 0x7d8b48 ; call r12
0x00000000004657ea : xor eax, 0x89ffffe6 ; ret
0x000000000040e976 : xor eax, dword ptr [0x30] ; call rax
0x0000000000415860 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416644 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000045ca79 : xor eax, eax ; add rsp, 8 ; ret
0x00000000004759eb : xor eax, eax ; cmp rdi, rdx ; ja 0x475a20 ; ret
0x000000000044be47 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000004147f0 : xor eax, eax ; jmp 0x4147ba
0x000000000045d15c : xor eax, eax ; jmp 0x45d124
0x000000000045d15b : xor eax, eax ; jmp 0x45d125
0x0000000000475dd8 : xor eax, eax ; leave ; ret
0x00000000004731f2 : xor eax, eax ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405dbf : xor eax, eax ; pop rbp ; pop r12 ; ret
0x000000000041489b : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040ec85 : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000042396c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000412f12 : xor eax, eax ; pop rbx ; ret
0x000000000040ebcd : xor eax, eax ; ret
0x0000000000425fee : xor eax, eax ; sub eax, ecx ; ret
0x00000000004148c0 : xor eax, eax ; test rdx, rdx ; jne 0x4148d8 ; ret
0x000000000042b8cc : xor eax, eax ; vzeroupper ; ret
0x0000000000458ce8 : xor ebp, ecx ; ret 0xfffd
0x000000000047a2b0 : xor ebx, ebx ; jmp 0x47a279
0x00000000004589e6 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004579b9 : xor ecx, ecx ; call r15
0x0000000000473fe9 : xor ecx, ecx ; xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x0000000000493fa9 : xor ecx, edi ; jmp qword ptr [rax]
0x000000000044c25c : xor edi, dword ptr [rax] ; ret 0x2f75
0x0000000000403f9b : xor edi, edi ; call 0x4201b4
0x000000000041ac61 : xor edi, edi ; pop rbx ; mov rax, rdi ; pop rbp ; pop r12 ; ret
0x0000000000494bb1 : xor edi, edx ; inc dword ptr [rdx + rdi - 6] ; call rsp
0x000000000040e8b0 : xor edx, dword ptr [0x30] ; call rdx
0x000000000044e903 : xor edx, edx ; add eax, 1 ; push rax ; call rbx
0x000000000044d4dc : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x44d4cc
0x000000000046fef3 : xor edx, edx ; div r13 ; mov rbp, rax ; jmp 0x46fec8
0x0000000000417213 : xor edx, edx ; jmp rax
0x0000000000473feb : xor edx, edx ; lea r9, qword ptr [rsp + 0x20] ; call rbx
0x000000000041f51c : xor edx, edx ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000478b46 : xor esi, esi ; call 0x400491
0x000000000046157c : xor esi, esi ; jmp rax
0x00000000004579b8 : xor r9d, r9d ; call r15
0x000000000040e975 : xor rax, qword ptr [0x30] ; call rax
0x000000000040e974 : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000444c50 : xor rax, rax ; ret
0x000000000040e8af : xor rdx, qword ptr [0x30] ; call rdx
0x000000000040e8ae : xor rdx, qword ptr fs:[0x30] ; call rdx

Unique gadgets found: 9023
